{"version":3,"mappings":"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","names":["Action","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","PopStateEventType","createBrowserHistory","options","getLocation","createHref","validateLocation","window","document","defaultView","v5Compat","globalHistory","history","action","Pop","listener","index","getIndex","replaceState","state","idx","handlePop","nextIndex","delta","location","push","to","Push","createLocation","historyState","getHistoryState","url","pushState","error","DOMException","name","replace","Replace","createURL","base","origin","href","createPath","invariant","URL","listen","fn","Error","addEventListener","removeEventListener","encodeLocation","pathname","search","hash","go","n","getUrlBasedHistory","usr","value","message","warning","cond","e","current","parsePath","Math","random","toString","substr","_ref","charAt","path","parsedPath","hashIndex","indexOf","searchIndex","ResultType","matchRoutes","routes","locationArg","basename","stripBasename","branches","flattenRoutes","sort","a","b","score","siblings","slice","every","compareIndexes","routesMeta","map","meta","childrenIndex","rankRouteBranches","matches","decoded","decodePath","matchRouteBranch","matchRoutesImpl","parentsMeta","parentPath","flattenRoute","route","relativePath","caseSensitive","startsWith","joinPaths","concat","children","computeScore","forEach","_route$path","includes","exploded","explodeOptionalSegments","segments","split","first","rest","isOptional","endsWith","required","restExploded","join","result","subpath","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","initialScore","some","filter","reduce","segment","test","branch","allowPartial","matchedParams","matchedPathname","end","remainingPathname","match","matchPath","params","pathnameBase","normalizePathname","pattern","matcher","compiledParams","regexpSource","_","paramName","RegExp","compilePath","captureGroups","memo","splatValue","v","decodeURIComponent","toLowerCase","startIndex","nextChar","getInvalidPathError","char","field","dest","JSON","stringify","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","from","isEmptyPath","toPathname","routePathnameIndex","toSegments","shift","fromPathname","pop","resolvePathname","normalizeSearch","normalizeHash","resolvePath","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","validMutationMethodsArr","Set","validRequestMethodsArr","DataRouterContext","React.createContext","DataRouterStateContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","useInRouterContext","React.useContext","useLocation","UNSAFE_invariant","useIsomorphicLayoutEffect","cb","static","React.useLayoutEffect","useNavigate","router","ctx","useDataRouterContext","DataRouterHook","UseNavigateStable","id","useCurrentRouteId","DataRouterStateHook","activeRef","React.useRef","React.useCallback","navigate","fromRouteId","useNavigateStable","dataRouterContext","future","navigator","routePathnamesJson","v7_relativeSplatPath","pathMatches","getPathContributingMatches","UNSAFE_getResolveToMatches","parse","relative","useNavigateUnstable","useParams","routeMatch","useRoutes","dataRouterState","parentMatches","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","parentSegments","renderedMatches","_dataRouterState","_future","errors","v7_partialHydration","initialized","errorIndex","findIndex","m","min","renderFallback","fallbackIndex","HydrateFallback","hydrateFallbackElement","loaderData","needsToRunLoader","loader","lazy","reduceRight","shouldRenderHydrateFallback","errorElement","defaultErrorElement","alreadyWarned$1","getChildren","Component","React.createElement","element","RenderedRoute","routeContext","ErrorBoundary","RenderErrorBoundary","revalidation","component","_renderMatches","Provider","navigationType","useRoutesImpl","DefaultErrorComponent","_state$errors","useDataRouterState","routeId","useRouteError","status","statusText","internal","isRouteErrorResponse","stack","preStyles","padding","backgroundColor","React.Fragment","style","fontStyle","React.Component","constructor","props","super","getDerivedStateFromError","getDerivedStateFromProps","componentDidCatch","errorInfo","render","staticContext","_deepestRenderedBoundaryId","hookName","useRouteContext","thisRoute","Route","_props","Router","_ref5","basenameProp","locationProp","staticProp","navigationContext","React.useMemo","locationContext","trailingPathname","Routes","_ref6","createRoutesFromChildren","React.Children","React.isValidElement","treePath","type","hasErrorBoundary","shouldRevalidate","handle","Promise","__reactRouterVersion","startTransitionImpl","React","BrowserRouter","_ref4","historyRef","setStateImpl","React.useState","v7_startTransition","setState","newState","React.useEffect","UNSAFE_logV6DeprecationWarnings","renderFuture","Subscribable","listeners","subscribe","add","onSubscribe","delete","onUnsubscribe","hasListeners","size","defaultTimeoutProvider","setTimeout","callback","delay","clearTimeout","timeoutId","setInterval","clearInterval","intervalId","timeoutManager","_a","__privateAdd","_provider","_providerCalled","setTimeoutProvider","provider","__privateSet","__privateGet","WeakMap","isServer","globalThis","noop","resolveStaleTime","staleTime","query","matchQuery","filters","exact","fetchStatus","predicate","queryKey","stale","queryHash","hashQueryKeyByOptions","partialMatchKey","isActive","isStale","matchMutation","mutation","mutationKey","hashKey","queryKeyHashFn","val","isPlainObject","keys","hasOwn","replaceEqualDeep","array","isPlainArray","aSize","bItems","bSize","copy","Array","equalItems","aItem","bItem","isArray","o","hasObjectPrototype","ctor","prot","getPrototypeOf","replaceData","prevData","data","structuralSharing","addToEnd","items","item","max","newItems","addToStart","skipToken","Symbol","ensureQueryFn","fetchOptions","queryFn","initialPromise","reject","focusManager","_b","_focused","_cleanup","_setup","onFocus","setEventListener","setup","focused","setFocused","isFocused","visibilityState","defaultScheduler","notifyManager","queue","transactions","notifyFn","batchNotifyFn","scheduleFn","schedule","batch","originalQueue","flush","batchCalls","args","setNotifyFunction","setBatchNotifyFunction","setScheduler","createNotifyManager","onlineManager","_c","_online","onOnline","onlineListener","offlineListener","setOnline","online","isOnline","defaultRetryDelay","failureCount","canFetch","networkMode","CancelledError","revert","silent","createRetryer","config","continueFn","isRetryCancelled","thenable","resolve","_resolve","_reject","finalize","catch","reason","pendingThenable","isResolved","canContinue","canRun","canStart","pause","continueResolve","onPause","then","onContinue","run","promiseOrValue","retry","retryDelay","shouldRetry","timeout","onFail","promise","cancel","cancelOptions","onCancel","continue","cancelRetry","continueRetry","start","Removable","_d","_gcTimeout","destroy","clearGcTimeout","scheduleGc","gcTime","Infinity","optionalRemove","updateGcTime","newGcTime","Query","_e","_Query_instances","_initialState","_revertState","_cache","_client","_retryer","_defaultOptions","_abortSignalConsumed","defaultOptions","setOptions","observers","client","getQueryCache","getDefaultState","defaultState","setData","updatedAt","dataUpdatedAt","manual","remove","newData","__privateMethod","setStateOptions","reset","observer","resolveEnabled","enabled","isDisabled","getObserversCount","dataUpdateCount","errorUpdateCount","isStatic","getCurrentResult","isInvalidated","isStaleByTime","Date","now","timeUntilStale","find","x","shouldFetchOnWindowFocus","refetch","cancelRefetch","shouldFetchOnReconnect","addObserver","notify","removeObserver","invalidate","dispatch_fn","fetch","abortController","AbortController","addSignalProperty","object","defineProperty","enumerable","get","signal","fetchFn","queryFnContext","queryFnContext2","createQueryFnContext","persister","context","context2","createFetchContext","behavior","onFetch","fetchMeta","abort","_f","onSuccess","_h","_g","onSettled","_j","_i","onError","_l","_k","WeakSet","fetchFailureCount","fetchFailureReason","errorUpdatedAt","reducer","onQueryUpdate","initialData","hasData","initialDataUpdatedAt","infiniteQueryBehavior","pages","direction","fetchMore","oldPages","oldPageParams","pageParams","currentPage","async","cancelled","fetchPage","param","previous","pageParam","aborted","page","maxPages","addTo","oldData","getPreviousPageParam","getNextPageParam","remainingPages","initialPageParam","lastIndex","Mutation","_Mutation_instances","_observers","_mutationCache","mutationId","mutationCache","failureReason","isPaused","variables","submittedAt","execute","mutationFn","restored","onMutate","_n","_m","_p","_o","_r","_q","_t","_s","runNext","onMutationUpdate","MutationCache","_mutations","_scopes","_mutationId","Map","build","__privateWrapper","defaultMutationOptions","scope","scopeFor","scopedMutations","set","splice","mutationsWithSameScope","firstPendingMutation","foundMutation","clear","getAll","defaultedFilters","findAll","event","resumePausedMutations","pausedMutations","all","QueryCache","_queries","defaultQueryOptions","getQueryDefaults","has","queryInMap","values","queries","QueryClient","_queryCache","_queryDefaults","_mutationDefaults","_mountCount","_unsubscribeFocus","_unsubscribeOnline","queryCache","mount","unmount","isFetching","isMutating","getQueryData","ensureQueryData","defaultedOptions","cachedData","fetchQuery","revalidateIfStale","prefetchQuery","getQueriesData","setQueryData","updater","input","functionalUpdate","setQueriesData","getQueryState","removeQueries","resetQueries","refetchQueries","cancelQueries","defaultedCancelOptions","promises","invalidateQueries","refetchType","throwOnError","fetchInfiniteQuery","prefetchInfiniteQuery","ensureInfiniteQueryData","getMutationCache","getDefaultOptions","setDefaultOptions","setQueryDefaults","defaults","queryDefault","setMutationDefaults","getMutationDefaults","_defaulted","refetchOnReconnect","suspense","mutations","QueryClientContext","QueryClientProvider","jsx","hasElementType","Element","hasMap","hasSet","hasArrayBuffer","ArrayBuffer","isView","equal","it","entries","next","done","flags","valueOf","$$typeof","condition","format","c","d","f","argIndex","framesToPop","objA","objB","compare","compareContext","ret","keysA","keysB","bHasOwnProperty","valueA","valueB","t","r","create","setPrototypeOf","__proto__","u","l","BASE","BODY","HEAD","HTML","LINK","META","NOSCRIPT","SCRIPT","STYLE","TITLE","FRAGMENT","p","rel","charset","property","h","accesskey","class","contenteditable","contextmenu","itemprop","tabindex","y","T","g","A","reverse","C","console","warn","O","S","E","priority","default","I","P","w","String","L","j","dangerouslySetInnerHTML","__html","innerHTML","cssText","createElement","M","toComponent","titleAttributes","title","k","baseTag","bodyAttributes","encode","htmlAttributes","noscriptTags","styleTags","linkTags","metaTags","scriptTags","prioritizeSeoTags","priorityMethods","link","noscript","script","H","N","instances","setHelmet","helmet","helmetInstances","canUseDOM","R","createContext","D","shape","func","U","q","helmetData","propTypes","node","isRequired","defaultProps","displayName","Y","head","querySelector","querySelectorAll","styleSheet","appendChild","createTextNode","setAttribute","isEqualNode","parentNode","removeChild","oldTags","newTags","B","getElementsByTagName","getAttribute","removeAttribute","K","onChangeClientState","z","rendered","shouldComponentUpdate","componentDidUpdate","emitChange","componentWillUnmount","defer","cancelAnimationFrame","requestAnimationFrame","init","F","G","W","mapNestedChildrenToProps","flattenArrayTypeChildren","child","arrayTypeChildren","newChildProps","nestedChildren","mapObjectTypeChildren","newProps","mapArrayTypeChildrenToProps","warnOnInvalidChildren","mapChildrenToProps","Children","Consumer","oneOfType","arrayOf","defaultTitle","string","bool","encodeSpecialCharacters","titleTemplate","defaultAttributes","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","createLucideIcon","iconName","iconNode","forwardRef","color","absoluteStrokeWidth","className","ref","Number","trim","tag","attrs","AlertTriangle","Briefcase","rx","ry","Code","points","Home","Loader2","Mail","Menu","x1","x2","y1","y2","Monitor","Moon","RefreshCw","Sun","cx","cy","User","X","createJSONStorage","getStorage","storage","getItem","str2","str","setItem","newValue","removeItem","toThenable","onFulfilled","_onRejected","_onFulfilled","onRejected","persist","baseOptions","api","localStorage","serialize","deserialize","partialize","version","merge","persistedState","currentState","hasHydrated","hydrationListeners","finishHydrationListeners","thenableSerialize","errorInSync","serializedValue","savedSetState","configResult","stateFromStorage","hydrate","postRehydrationCallback","onRehydrateStorage","storageValue","deserializedStorageValue","migrate","migratedState","_a2","newOptions","clearStorage","getOptions","rehydrate","onHydrate","onFinishHydration","oldImpl","getInitialState","migrationResult","migrated","skipHydration","newImpl","useAppStore","theme","currentSection","isLoading","isMobileMenuOpen","isContactModalOpen","setTheme","root","documentElement","classList","matchMedia","setCurrentSection","section","setLoading","toggleMobileMenu","body","overflow","toggleContactModal","getState","savedTheme","cn","inputs","twMerge","clsx","navItems","label","icon","themeOptions","Navbar","isScrolled","setIsScrolled","useState","activeSection","setActiveSection","showThemeMenu","setShowThemeMenu","useEffect","handleScroll","scrollY","sections","getElementById","scrollPosition","offsetTop","sectionId","handleNavClick","_href","scrollTo","top","ThemeIcon","themeOption","option","getCurrentThemeIcon","jsxs","Fragment","motion","nav","initial","animate","div","whileHover","scale","whileTap","button","onClick","layoutId","transition","bounce","duration","AnimatePresence","opacity","exit","OptionIcon","ItemIcon","LoadingSpinner","text","fullScreen","content","rotate","repeat","ease","sm","md","lg","clamp","Animate","__publicField","advance","deltaTime","isRunning","completed","easing","currentTime","linearProgress","easedProgress","lerp","lambda","exp","damp","round","stop","onUpdate","fromTo","lerp2","onStart","Dimensions","wrapper","autoResize","debounce","debounceValue","onWrapperResize","onContentResize","Window","innerWidth","innerHeight","clientWidth","clientHeight","scrollHeight","scrollWidth","debouncedResize","timer","resize","wrapperResizeObserver","ResizeObserver","observe","contentResizeObserver","disconnect","limit","Emitter","emit","callbacks","events","on","off","LINE_HEIGHT","listenerOptions","passive","VirtualScroll","wheelMultiplier","touchMultiplier","clientX","clientY","targetTouches","touchStart","lastDelta","emitter","deltaX","deltaY","deltaMode","onWindowResize","onWheel","onTouchStart","onTouchMove","onTouchEnd","defaultEasing","pow","Lenis","eventsTarget","smoothWheel","syncTouch","syncTouchLerp","touchInertiaExponent","infinite","orientation","gestureOrientation","prevent","virtualScroll","overscroll","autoRaf","anchors","autoToggle","allowNestedScroll","__experimental__naiveDimensions","CustomEvent","isScrolling","stopPropagation","dispatchEvent","bubbles","detail","lenisScrollEnd","propertyName","isHorizontal","getComputedStyle","rootElement","internalStop","internalStart","anchor","composedPath","HTMLAnchorElement","ctrlKey","lenisStopPropagation","isTouch","isWheel","isTouching","isClickOrTap","isStopped","isLocked","isUnknownGesture","HTMLElement","hasAttribute","checkNestedScroll","cancelable","preventDefault","abs","animatedScroll","isSyncTouch","hasTouchInertia","sign","velocity","targetScroll","programmatic","_resetVelocityTimeout","_preventNextNativeScrollEvent","lastScroll","actualScroll","lastVelocity","time","__rafID","raf","lenisVersion","dimensions","updateClassName","onNativeScroll","onScrollEnd","capture","onPointerDown","onVirtualScroll","onTransitionEnd","cleanUpClassName","setScroll","scroll","left","removeProperty","setProperty","offset","immediate","lock","onComplete","force","userData","nodeType","wrapperRect","getBoundingClientRect","rect","distance","preventNextNativeScrollEvent","dispatchScrollendEvent","cache","_lenis","hasOverflowX","hasOverflowY","isScrollableX","isScrollableY","computedStyle","overflowXString","overflowX","overflowYString","overflowY","maxScroll","hasOverflow","isScrollable","scrollLeft","scrollTop","scrollX","progress","_isScrolling","_isStopped","_isLocked","isSmooth","SmoothScrolling","lenis","ParticleSystem","count","useRef","positions","useMemo","Float32Array","i3","colors","colorArray","THREE.Color","floor","useFrame","rotation","sin","clock","elapsedTime","geometry","attributes","position","needsUpdate","Points","PointMaterial","vertexColors","transparent","sizeAttenuation","blending","THREE.AdditiveBlending","FloatingGeometry","meshRef","shapes","geometries","THREE.BoxGeometry","THREE.SphereGeometry","THREE.ConeGeometry","THREE.TetrahedronGeometry","THREE.OctahedronGeometry","material","THREE.MeshBasicMaterial","setHSL","wireframe","PI","rotationSpeed","ParticleBackground","Canvas","camera","fov","gl","antialias","alpha","powerPreference","dpr","devicePixelRatio","intensity","hasError","fallback","handleReset","reload","HomePage","import","__VITE_PRELOAD__","ProjectPage","NotFoundPage","App","Helmet","crossOrigin","Suspense","__vitePreload","registerSW","queryClient","ReactDOM","createRoot","StrictMode","HelmetProvider"],"ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,43],"sources":["../../node_modules/@remix-run/router/dist/router.js","../../node_modules/react-router/dist/index.js","../../node_modules/react-router-dom/dist/index.js","../../node_modules/@tanstack/query-core/build/modern/subscribable.js","../../node_modules/@tanstack/query-core/build/modern/timeoutManager.js","../../node_modules/@tanstack/query-core/build/modern/utils.js","../../node_modules/@tanstack/query-core/build/modern/focusManager.js","../../node_modules/@tanstack/query-core/build/modern/notifyManager.js","../../node_modules/@tanstack/query-core/build/modern/onlineManager.js","../../node_modules/@tanstack/query-core/build/modern/retryer.js","../../node_modules/@tanstack/query-core/build/modern/thenable.js","../../node_modules/@tanstack/query-core/build/modern/removable.js","../../node_modules/@tanstack/query-core/build/modern/query.js","../../node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js","../../node_modules/@tanstack/query-core/build/modern/mutation.js","../../node_modules/@tanstack/query-core/build/modern/mutationCache.js","../../node_modules/@tanstack/query-core/build/modern/queryCache.js","../../node_modules/@tanstack/query-core/build/modern/queryClient.js","../../node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js","../../node_modules/react-fast-compare/index.js","../../node_modules/invariant/browser.js","../../node_modules/shallowequal/index.js","../../node_modules/react-helmet-async/lib/index.module.js","../../node_modules/lucide-react/dist/esm/defaultAttributes.js","../../node_modules/lucide-react/dist/esm/createLucideIcon.js","../../node_modules/lucide-react/dist/esm/icons/alert-triangle.js","../../node_modules/lucide-react/dist/esm/icons/briefcase.js","../../node_modules/lucide-react/dist/esm/icons/code.js","../../node_modules/lucide-react/dist/esm/icons/home.js","../../node_modules/lucide-react/dist/esm/icons/loader-2.js","../../node_modules/lucide-react/dist/esm/icons/mail.js","../../node_modules/lucide-react/dist/esm/icons/menu.js","../../node_modules/lucide-react/dist/esm/icons/monitor.js","../../node_modules/lucide-react/dist/esm/icons/moon.js","../../node_modules/lucide-react/dist/esm/icons/refresh-cw.js","../../node_modules/lucide-react/dist/esm/icons/sun.js","../../node_modules/lucide-react/dist/esm/icons/user.js","../../node_modules/lucide-react/dist/esm/icons/x.js","../../node_modules/zustand/esm/middleware.mjs","../../src/stores/appStore.ts","../../src/utils/cn.ts","../../src/components/layout/Navbar.tsx","../../src/components/ui/LoadingSpinner.tsx","../../node_modules/lenis/dist/lenis.mjs","../../src/components/common/SmoothScrolling.tsx","../../src/components/3d/ParticleBackground.tsx","../../src/components/common/ErrorBoundary.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["/**\n * @remix-run/router v1.23.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Actions represent the type of change to a location value.\n */\nvar Action;\n(function (Action) {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Action[\"Push\"] = \"PUSH\";\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\nconst PopStateEventType = \"popstate\";\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    initialEntries = [\"/\"],\n    initialIndex,\n    v5Compat = false\n  } = options;\n  let entries; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) => createMemoryLocation(entry, typeof entry === \"string\" ? null : entry.state, index === 0 ? \"default\" : undefined));\n  let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\n  let action = Action.Pop;\n  let listener = null;\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation() {\n    return entries[index];\n  }\n  function createMemoryLocation(to, state, key) {\n    if (state === void 0) {\n      state = null;\n    }\n    let location = createLocation(entries ? getCurrentLocation().pathname : \"/\", to, state, key);\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in memory history: \" + JSON.stringify(to));\n    return location;\n  }\n  function createHref(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  let history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 1\n        });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 0\n        });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta\n        });\n      }\n    },\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n  };\n  return history;\n}\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createBrowserLocation(window, globalHistory) {\n    let {\n      pathname,\n      search,\n      hash\n    } = window.location;\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createBrowserHref(window, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createHashLocation(window, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window.location.hash.substr(1));\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createHashHref(window, to) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n  function validateHashLocation(location, to) {\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\");\n  }\n  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\n/**\n * Creates a Location object with a unique key from the given Path\n */\nfunction createLocation(current, to, state, key) {\n  if (state === void 0) {\n    state = null;\n  }\n  let location = _extends({\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\"\n  }, typeof to === \"string\" ? parsePath(to) : to, {\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  });\n  return location;\n}\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nfunction createPath(_ref) {\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\"\n  } = _ref;\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    window = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener = null;\n  let index = getIndex();\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || {\n      idx: null\n    };\n    return state.idx;\n  }\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }\n  function push(to, state) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 1\n      });\n    }\n  }\n  function replace(to, state) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 0\n      });\n    }\n  }\n  function createURL(to) {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\n    let href = typeof to === \"string\" ? to : createPath(to);\n    // Treating this as a full URL will strip any trailing spaces so we need to\n    // pre-encode them since they might be part of a matching splat param from\n    // an ancestor route\n    href = href.replace(/ $/, \"%20\");\n    invariant(base, \"No window.location.(origin|href) available to create URL for href: \" + href);\n    return new URL(href, base);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\n//#endregion\n\nvar ResultType;\n(function (ResultType) {\n  ResultType[\"data\"] = \"data\";\n  ResultType[\"deferred\"] = \"deferred\";\n  ResultType[\"redirect\"] = \"redirect\";\n  ResultType[\"error\"] = \"error\";\n})(ResultType || (ResultType = {}));\nconst immutableRouteKeys = new Set([\"lazy\", \"caseSensitive\", \"path\", \"id\", \"index\", \"children\"]);\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties, parentPath, manifest) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  if (manifest === void 0) {\n    manifest = {};\n  }\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(route.index !== true || !route.children, \"Cannot specify children on an index route\");\n    invariant(!manifest[id], \"Found a route id collision on id \\\"\" + id + \"\\\".  Route \" + \"id's must be globally unique within Data Router usages\");\n    if (isIndexRoute(route)) {\n      let indexRoute = _extends({}, route, mapRouteProperties(route), {\n        id\n      });\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = _extends({}, route, mapRouteProperties(route), {\n        id,\n        children: undefined\n      });\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties, treePath, manifest);\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/v6/utils/match-routes\n */\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\nfunction matchRoutesImpl(routes, locationArg, basename, allowPartial) {\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch(branches[i], decoded, allowPartial);\n  }\n  return matches;\n}\nfunction convertRouteMatchToUiMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(meta.relativePath.startsWith(parentPath), \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\");\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n      // Our types know better, but runtime JS may not!\n      // @ts-expect-error\n      route.index !== true, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\"));\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    var _route$path;\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !((_route$path = route.path) != null && _route$path.includes(\"?\"))) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(...restExploded.map(subpath => subpath === \"\" ? required : [required, subpath].join(\"/\")));\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map(exploded => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded);\n}\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\nconst paramRe = /^:[\\w-]+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = s => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ?\n  // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] :\n  // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\nfunction matchRouteBranch(branch, pathname, allowPartial) {\n  if (allowPartial === void 0) {\n    allowPartial = false;\n  }\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    let route = meta.route;\n    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {\n      match = matchPath({\n        path: meta.relativePath,\n        caseSensitive: meta.caseSensitive,\n        end: false\n      }, remainingPathname);\n    }\n    if (!match) {\n      return null;\n    }\n    Object.assign(matchedParams, match.params);\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/v6/utils/generate-path\n */\nfunction generatePath(originalPath, params) {\n  if (params === void 0) {\n    params = {};\n  }\n  let path = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(false, \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n    path = path.replace(/\\*$/, \"/*\");\n  }\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n  const stringify = p => p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1;\n    // only apply the splat if it's the last segment\n    if (isLastSegment && segment === \"*\") {\n      const star = \"*\";\n      // Apply the splat\n      return stringify(params[star]);\n    }\n    const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n      invariant(optional === \"?\" || param != null, \"Missing \\\":\" + key + \"\\\" param\");\n      return stringify(param);\n    }\n    // Remove any optional markers from optional static segments\n    return segment.replace(/\\?$/g, \"\");\n  })\n  // Remove empty segments\n  .filter(segment => !!segment);\n  return prefix + segments.join(\"/\");\n}\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/v6/utils/match-path\n */\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n  let [matcher, compiledParams] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = compiledParams.reduce((memo, _ref, index) => {\n    let {\n      paramName,\n      isOptional\n    } = _ref;\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n    const value = captureGroups[index];\n    if (isOptional && !value) {\n      memo[paramName] = undefined;\n    } else {\n      memo[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n    }\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n  if (end === void 0) {\n    end = true;\n  }\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n  let params = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/\\/:([\\w-]+)(\\?)?/g, (_, paramName, isOptional) => {\n    params.push({\n      paramName,\n      isOptional: isOptional != null\n    });\n    return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n  });\n  if (path.endsWith(\"*\")) {\n    params.push({\n      paramName: \"*\"\n    });\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else ;\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, params];\n}\nfunction decodePath(value) {\n  try {\n    return value.split(\"/\").map(v => decodeURIComponent(v).replace(/\\//g, \"%2F\")).join(\"/\");\n  } catch (error) {\n    warning(false, \"The URL path \\\"\" + value + \"\\\" could not be decoded because it is is a \" + \"malformed URL segment. This is probably due to a bad percent \" + (\"encoding (\" + error + \").\"));\n    return value;\n  }\n}\n/**\n * @private\n */\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/v6/utils/resolve-path\n */\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return \"Cannot include a '\" + char + \"' character in a manually specified \" + (\"`to.\" + field + \"` field [\" + JSON.stringify(path) + \"].  Please separate it out to the \") + (\"`to.\" + dest + \"` field. Alternatively you may provide the full path as \") + \"a string in <Link to=\\\"...\\\"> and the router will parse it for you.\";\n}\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);\n}\n// Return the array of pathnames for the current route matches - used to\n// generate the routePathnames input for resolveTo()\nfunction getResolveToMatches(matches, v7_relativeSplatPath) {\n  let pathMatches = getPathContributingMatches(matches);\n  // When v7_relativeSplatPath is enabled, use the full pathname for the leaf\n  // match so we include splat values for \".\" links.  See:\n  // https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329\n  if (v7_relativeSplatPath) {\n    return pathMatches.map((match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase);\n  }\n  return pathMatches.map(match => match.pathnameBase);\n}\n/**\n * @private\n */\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {\n  if (isPathRelative === void 0) {\n    isPathRelative = false;\n  }\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = _extends({}, toArg);\n    invariant(!to.pathname || !to.pathname.includes(\"?\"), getInvalidPathError(\"?\", \"pathname\", \"search\", to));\n    invariant(!to.pathname || !to.pathname.includes(\"#\"), getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\n    invariant(!to.search || !to.search.includes(\"#\"), getInvalidPathError(\"#\", \"search\", \"hash\", to));\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    // With relative=\"route\" (the default), each leading .. segment means\n    // \"go up one route\" instead of \"go up one URL segment\".  This is a key\n    // difference from how <a href> works and a major reason we call this a\n    // \"to\" value instead of a \"href\".\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\n/**\n * @private\n */\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\n/**\n * @private\n */\nconst joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n/**\n * @private\n */\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n/**\n * @private\n */\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n/**\n * @private\n */\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n *\n * @deprecated The `json` method is deprecated in favor of returning raw objects.\n * This method will be removed in v7.\n */\nconst json = function json(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n  return new Response(JSON.stringify(data), _extends({}, responseInit, {\n    headers\n  }));\n};\nclass DataWithResponseInit {\n  constructor(data, init) {\n    this.type = \"DataWithResponseInit\";\n    this.data = data;\n    this.init = init || null;\n  }\n}\n/**\n * Create \"responses\" that contain `status`/`headers` without forcing\n * serialization into an actual `Response` - used by Remix single fetch\n */\nfunction data(data, init) {\n  return new DataWithResponseInit(data, typeof init === \"number\" ? {\n    status: init\n  } : init);\n}\nclass AbortedDeferredError extends Error {}\nclass DeferredData {\n  constructor(data, responseInit) {\n    this.pendingKeysSet = new Set();\n    this.subscribers = new Set();\n    this.deferredKeys = [];\n    invariant(data && typeof data === \"object\" && !Array.isArray(data), \"defer() only accepts plain objects\");\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject;\n    this.abortPromise = new Promise((_, r) => reject = r);\n    this.controller = new AbortController();\n    let onAbort = () => reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () => this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n    this.data = Object.entries(data).reduce((acc, _ref2) => {\n      let [key, value] = _ref2;\n      return Object.assign(acc, {\n        [key]: this.trackPromise(key, value)\n      });\n    }, {});\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n    this.init = responseInit;\n  }\n  trackPromise(key, value) {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise = Promise.race([value, this.abortPromise]).then(data => this.onSettle(promise, key, undefined, data), error => this.onSettle(promise, key, error));\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n    Object.defineProperty(promise, \"_tracked\", {\n      get: () => true\n    });\n    return promise;\n  }\n  onSettle(promise, key, error, data) {\n    if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      return Promise.reject(error);\n    }\n    this.pendingKeysSet.delete(key);\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\"Deferred data for key \\\"\" + key + \"\\\" resolved/rejected with `undefined`, \" + \"you must resolve/reject with a value or `null`.\");\n      Object.defineProperty(promise, \"_error\", {\n        get: () => undefinedError\n      });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n    Object.defineProperty(promise, \"_data\", {\n      get: () => data\n    });\n    this.emit(false, key);\n    return data;\n  }\n  emit(aborted, settledKey) {\n    this.subscribers.forEach(subscriber => subscriber(aborted, settledKey));\n  }\n  subscribe(fn) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n  async resolveData(signal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise(resolve => {\n        this.subscribe(aborted => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n  get unwrappedData() {\n    invariant(this.data !== null && this.done, \"Can only unwrap data on initialized and settled deferreds\");\n    return Object.entries(this.data).reduce((acc, _ref3) => {\n      let [key, value] = _ref3;\n      return Object.assign(acc, {\n        [key]: unwrapTrackedPromise(value)\n      });\n    }, {});\n  }\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\nfunction isTrackedPromise(value) {\n  return value instanceof Promise && value._tracked === true;\n}\nfunction unwrapTrackedPromise(value) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n/**\n * @deprecated The `defer` method is deprecated in favor of returning raw\n * objects. This method will be removed in v7.\n */\nconst defer = function defer(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  return new DeferredData(data, responseInit);\n};\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirect = function redirect(url, init) {\n  if (init === void 0) {\n    init = 302;\n  }\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, _extends({}, responseInit, {\n    headers\n  }));\n};\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirectDocument = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n/**\n * A redirect response that will perform a `history.replaceState` instead of a\n * `history.pushState` for client-side navigation redirects.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst replace = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Replace\", \"true\");\n  return response;\n};\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n *\n * We don't export the class for public use since it's an implementation\n * detail, but we export the interface above so folks can build their own\n * abstractions around instances via isRouteErrorResponse()\n */\nclass ErrorResponseImpl {\n  constructor(status, statusText, data, internal) {\n    if (internal === void 0) {\n      internal = false;\n    }\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\nconst validMutationMethodsArr = [\"post\", \"put\", \"patch\", \"delete\"];\nconst validMutationMethods = new Set(validMutationMethodsArr);\nconst validRequestMethodsArr = [\"get\", ...validMutationMethodsArr];\nconst validRequestMethods = new Set(validRequestMethodsArr);\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\nconst IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_FETCHER = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined\n};\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nconst defaultMapRouteProperties = route => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a router and listen to history POP navigations\n */\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : undefined;\n  const isBrowser = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  let mapRouteProperties;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Routes keyed by ID\n  let manifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties, undefined, manifest);\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  let dataStrategyImpl = init.dataStrategy || defaultDataStrategy;\n  let patchRoutesOnNavigationImpl = init.patchRoutesOnNavigation;\n  // Config driven behavior flags\n  let future = _extends({\n    v7_fetcherPersist: false,\n    v7_normalizeFormMethod: false,\n    v7_partialHydration: false,\n    v7_prependBasename: false,\n    v7_relativeSplatPath: false,\n    v7_skipActionErrorRevalidation: false\n  }, init.future);\n  // Cleanup function for history\n  let unlistenHistory = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialMatchesIsFOW = false;\n  let initialErrors = null;\n  if (initialMatches == null && !patchRoutesOnNavigationImpl) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  }\n  // In SPA apps, if the user provided a patchRoutesOnNavigation implementation and\n  // our initial match is a splat route, clear them out so we run through lazy\n  // discovery on hydration in case there's a more accurate lazy route match.\n  // In SSR apps (with `hydrationData`), we expect that the server will send\n  // up the proper matched routes so we don't want to run lazy discovery on\n  // initial hydration and want to hydrate into the splat route.\n  if (initialMatches && !init.hydrationData) {\n    let fogOfWar = checkFogOfWar(initialMatches, dataRoutes, init.history.location.pathname);\n    if (fogOfWar.active) {\n      initialMatches = null;\n    }\n  }\n  let initialized;\n  if (!initialMatches) {\n    initialized = false;\n    initialMatches = [];\n    // If partial hydration and fog of war is enabled, we will be running\n    // `patchRoutesOnNavigation` during hydration so include any partial matches as\n    // the initial matches so we can properly render `HydrateFallback`'s\n    if (future.v7_partialHydration) {\n      let fogOfWar = checkFogOfWar(null, dataRoutes, init.history.location.pathname);\n      if (fogOfWar.active && fogOfWar.matches) {\n        initialMatchesIsFOW = true;\n        initialMatches = fogOfWar.matches;\n      }\n    }\n  } else if (initialMatches.some(m => m.route.lazy)) {\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    initialized = false;\n  } else if (!initialMatches.some(m => m.route.loader)) {\n    // If we've got no loaders to run, then we're good to go\n    initialized = true;\n  } else if (future.v7_partialHydration) {\n    // If partial hydration is enabled, we're initialized so long as we were\n    // provided with hydrationData for every route with a loader, and no loaders\n    // were marked for explicit hydration\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    // If errors exist, don't consider routes below the boundary\n    if (errors) {\n      let idx = initialMatches.findIndex(m => errors[m.route.id] !== undefined);\n      initialized = initialMatches.slice(0, idx + 1).every(m => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    } else {\n      initialized = initialMatches.every(m => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    }\n  } else {\n    // Without partial hydration - we're initialized if we were provided any\n    // hydrationData - which is expected to be complete\n    initialized = init.hydrationData != null;\n  }\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map()\n  };\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction = Action.Pop;\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n  // AbortController for the active navigation\n  let pendingNavigationController;\n  // Should the current navigation enable document.startViewTransition?\n  let pendingViewTransitionEnabled = false;\n  // Store applied view transitions so we can apply them on POP\n  let appliedViewTransitions = new Map();\n  // Cleanup function for persisting applied transitions to sessionStorage\n  let removePageHideEventListener = null;\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes = [];\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads = new Set();\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map();\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map();\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set();\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map();\n  // Ref-count mounted fetchers so we know when it's ok to clean them up\n  let activeFetchers = new Map();\n  // Fetchers that have requested a delete when using v7_fetcherPersist,\n  // they'll be officially removed after they return to idle\n  let deletedFetchers = new Set();\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map();\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map();\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let unblockBlockerHistoryUpdate = undefined;\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(_ref => {\n      let {\n        action: historyAction,\n        location,\n        delta\n      } = _ref;\n      // Ignore this event if it was just us resetting the URL from a\n      // blocked POP navigation\n      if (unblockBlockerHistoryUpdate) {\n        unblockBlockerHistoryUpdate();\n        unblockBlockerHistoryUpdate = undefined;\n        return;\n      }\n      warning(blockerFunctions.size === 0 || delta != null, \"You are trying to use a blocker on a POP navigation to a location \" + \"that was not created by @remix-run/router. This will fail silently in \" + \"production. This can happen if you are navigating outside the router \" + \"via `window.history.pushState`/`window.location.hash` instead of using \" + \"router navigation APIs.  This can also happen if you are using \" + \"createHashRouter and the user manually changes the URL.\");\n      let blockerKey = shouldBlockNavigation({\n        currentLocation: state.location,\n        nextLocation: location,\n        historyAction\n      });\n      if (blockerKey && delta != null) {\n        // Restore the URL to match the current UI, but don't update router state\n        let nextHistoryUpdatePromise = new Promise(resolve => {\n          unblockBlockerHistoryUpdate = resolve;\n        });\n        init.history.go(delta * -1);\n        // Put the blocker into a blocked state\n        updateBlocker(blockerKey, {\n          state: \"blocked\",\n          location,\n          proceed() {\n            updateBlocker(blockerKey, {\n              state: \"proceeding\",\n              proceed: undefined,\n              reset: undefined,\n              location\n            });\n            // Re-do the same POP navigation we just blocked, after the url\n            // restoration is also complete.  See:\n            // https://github.com/remix-run/react-router/issues/11613\n            nextHistoryUpdatePromise.then(() => init.history.go(delta));\n          },\n          reset() {\n            let blockers = new Map(state.blockers);\n            blockers.set(blockerKey, IDLE_BLOCKER);\n            updateState({\n              blockers\n            });\n          }\n        });\n        return;\n      }\n      return startNavigation(historyAction, location);\n    });\n    if (isBrowser) {\n      // FIXME: This feels gross.  How can we cleanup the lines between\n      // scrollRestoration/appliedTransitions persistance?\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(Action.Pop, state.location, {\n        initialHydration: true\n      });\n    }\n    return router;\n  }\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  // Subscribe to state updates for the router\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  // Update our state and notify the calling context of the change\n  function updateState(newState, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state = _extends({}, state, newState);\n    // Prep fetcher cleanup so we can tell the UI which fetcher data entries\n    // can be removed\n    let completedFetchers = [];\n    let deletedFetchersKeys = [];\n    if (future.v7_fetcherPersist) {\n      state.fetchers.forEach((fetcher, key) => {\n        if (fetcher.state === \"idle\") {\n          if (deletedFetchers.has(key)) {\n            // Unmounted from the UI and can be totally removed\n            deletedFetchersKeys.push(key);\n          } else {\n            // Returned to idle but still mounted in the UI, so semi-remains for\n            // revalidations and such\n            completedFetchers.push(key);\n          }\n        }\n      });\n    }\n    // Remove any lingering deleted fetchers that have already been removed\n    // from state.fetchers\n    deletedFetchers.forEach(key => {\n      if (!state.fetchers.has(key) && !fetchControllers.has(key)) {\n        deletedFetchersKeys.push(key);\n      }\n    });\n    // Iterate over a local copy so that if flushSync is used and we end up\n    // removing and adding a new subscriber due to the useCallback dependencies,\n    // we don't get ourselves into a loop calling the new subscriber immediately\n    [...subscribers].forEach(subscriber => subscriber(state, {\n      deletedFetchers: deletedFetchersKeys,\n      viewTransitionOpts: opts.viewTransitionOpts,\n      flushSync: opts.flushSync === true\n    }));\n    // Remove idle fetchers from state since we only care about in-flight fetchers.\n    if (future.v7_fetcherPersist) {\n      completedFetchers.forEach(key => state.fetchers.delete(key));\n      deletedFetchersKeys.forEach(key => deleteFetcher(key));\n    } else {\n      // We already called deleteFetcher() on these, can remove them from this\n      // Set now that we've handed the keys off to the data layer\n      deletedFetchersKeys.forEach(key => deletedFetchers.delete(key));\n    }\n  }\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(location, newState, _temp) {\n    var _location$state, _location$state2;\n    let {\n      flushSync\n    } = _temp === void 0 ? {} : _temp;\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== true;\n    // Commit any in-flight routes at the end of the HMR revalidation \"navigation\"\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n    if (isUninterruptedRevalidation) ; else if (pendingAction === Action.Pop) ; else if (pendingAction === Action.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === Action.Replace) {\n      init.history.replace(location, location.state);\n    }\n    let viewTransitionOpts;\n    // On POP, enable transitions if they were enabled on the original navigation\n    if (pendingAction === Action.Pop) {\n      // Forward takes precedence so they behave like the original navigation\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        // If we don't have a previous forward nav, assume we're popping back to\n        // the new location and enable if that location previously enabled\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      // Store the applied transition on PUSH/REPLACE\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = new Set([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location\n      };\n    }\n    updateState(_extends({}, newState, {\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset,\n      blockers\n    }), {\n      viewTransitionOpts,\n      flushSync: flushSync === true\n    });\n    // Reset stateful navigation vars\n    pendingAction = Action.Pop;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n  }\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, to, future.v7_relativeSplatPath, opts == null ? void 0 : opts.fromRouteId, opts == null ? void 0 : opts.relative);\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, false, normalizedPath, opts);\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = _extends({}, nextLocation, init.history.encodeLocation(nextLocation));\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n    let historyAction = Action.Push;\n    if (userReplace === true) {\n      historyAction = Action.Replace;\n    } else if (userReplace === false) ; else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = Action.Replace;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : undefined;\n    let flushSync = (opts && opts.flushSync) === true;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({\n            blockers\n          });\n        }\n      });\n      return;\n    }\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.viewTransition,\n      flushSync\n    });\n  }\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    });\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return;\n    }\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation,\n      // Proxy through any rending view transition\n      enableViewTransition: pendingViewTransitionEnabled === true\n    });\n  }\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(historyAction, location, opts) {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = opts != null && opts.initialHydration && state.matches && state.matches.length > 0 && !initialMatchesIsFOW ?\n    // `matchRoutes()` has already been called if we're in here via `router.initialize()`\n    state.matches : matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial hydration will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (matches && state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, {\n        matches\n      }, {\n        flushSync\n      });\n      return;\n    }\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let {\n        error,\n        notFoundMatches,\n        route\n      } = handleNavigational404(location.pathname);\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      }, {\n        flushSync\n      });\n      return;\n    }\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);\n    let pendingActionResult;\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingActionResult = [findNearestBoundary(matches).route.id, {\n        type: ResultType.error,\n        error: opts.pendingError\n      }];\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      // Call action if we received an action submission\n      let actionResult = await handleAction(request, location, opts.submission, matches, fogOfWar.active, {\n        replace: opts.replace,\n        flushSync\n      });\n      if (actionResult.shortCircuited) {\n        return;\n      }\n      // If we received a 404 from handleAction, it's because we couldn't lazily\n      // discover the destination route so we don't want to call loaders\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {\n          pendingNavigationController = null;\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error\n            }\n          });\n          return;\n        }\n      }\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      // No need to do fog of war matching again on loader execution\n      fogOfWar.active = false;\n      // Create a GET request for the loaders\n      request = createClientSideRequest(init.history, request.url, request.signal);\n    }\n    // Call loaders\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, fogOfWar.active, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, opts && opts.initialHydration === true, flushSync, pendingActionResult);\n    if (shortCircuited) {\n      return;\n    }\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n    completeNavigation(location, _extends({\n      matches: updatedMatches || matches\n    }, getActionDataForCommit(pendingActionResult), {\n      loaderData,\n      errors\n    }));\n  }\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(request, location, submission, matches, isFogOfWar, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    interruptActiveLoads();\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({\n      navigation\n    }, {\n      flushSync: opts.flushSync === true\n    });\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [boundaryId, {\n            type: ResultType.error,\n            error: discoverResult.error\n          }]\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          notFoundMatches,\n          error,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [route.id, {\n            type: ResultType.error,\n            error\n          }]\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    // Call our action and get the result\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      let results = await callDataStrategy(\"action\", state, request, [actionMatch], matches, null);\n      result = results[actionMatch.route.id];\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        let location = normalizeRedirectLocation(result.response.headers.get(\"Location\"), new URL(request.url), basename);\n        replace = location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, true, {\n        submission,\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      // By default, all submissions to the current location are REPLACE\n      // navigations, but if the action threw an error that'll be rendered in\n      // an errorElement, we fall back to PUSH so that the user can use the\n      // back button to get back to the pre-submission form location to try\n      // again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = Action.Push;\n      }\n      return {\n        matches,\n        pendingActionResult: [boundaryMatch.route.id, result]\n      };\n    }\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result]\n    };\n  }\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(request, location, matches, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace, initialHydration, flushSync, pendingActionResult) {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    // If we have partialHydration enabled, then don't update the state for the\n    // initial data load since it's not a \"navigation\"\n    let shouldUpdateNavigationState = !isUninterruptedRevalidation && (!future.v7_partialHydration || !initialHydration);\n    // When fog of war is enabled, we enter our `loading` state earlier so we\n    // can discover new routes during the `loading` state.  We skip this if\n    // we've already run actions since we would have done our matching already.\n    // If the children() function threw then, we want to proceed with the\n    // partial matches it discovered.\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState(_extends({\n          navigation: loadingNavigation\n        }, actionData !== undefined ? {\n          actionData\n        } : {}), {\n          flushSync\n        });\n      }\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: discoverResult.error\n          }\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          error,\n          notFoundMatches,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, future.v7_partialHydration && initialHydration === true, future.v7_skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult);\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(routeId => !(matches && matches.some(m => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some(m => m.route.id === routeId));\n    pendingNavigationLoadId = ++incrementingLoadId;\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, _extends({\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null\n      }, getActionDataForCommit(pendingActionResult), updatedFetchers ? {\n        fetchers: new Map(state.fetchers)\n      } : {}), {\n        flushSync\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (shouldUpdateNavigationState) {\n      let updates = {};\n      if (!isFogOfWar) {\n        // Only update navigation/actionNData if we didn't already do it above\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== undefined) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, {\n        flushSync\n      });\n    }\n    revalidatingFetchers.forEach(rf => {\n      abortFetcher(rf.key);\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(f => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state, matches, matchesToLoad, revalidatingFetchers, request);\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    }\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    revalidatingFetchers.forEach(rf => fetchControllers.delete(rf.key));\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, loaderResults, pendingActionResult, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe(aborted => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n    // Preserve SSR errors during partial hydration\n    if (future.v7_partialHydration && initialHydration && state.errors) {\n      errors = _extends({}, state.errors, errors);\n    }\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return _extends({\n      matches,\n      loaderData,\n      errors\n    }, shouldUpdateFetchers ? {\n      fetchers: new Map(state.fetchers)\n    } : {});\n  }\n  function getUpdatedActionData(pendingActionResult) {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      // This is cast to `any` currently because `RouteData`uses any and it\n      // would be a breaking change to use any.\n      // TODO: v7 - change `RouteData` to use `unknown` instead of `any`\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {\n    revalidatingFetchers.forEach(rf => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(undefined, fetcher ? fetcher.data : undefined);\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(key, routeId, href, opts) {\n    if (isServer) {\n      throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \" + \"You are likely calling a useFetcher() method in the body of your component. \" + \"Try moving it to a useEffect or a callback.\");\n    }\n    abortFetcher(key);\n    let flushSync = (opts && opts.flushSync) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, href, future.v7_relativeSplatPath, routeId, opts == null ? void 0 : opts.relative);\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      setFetcherError(key, routeId, getInternalRouterError(404, {\n        pathname: normalizedPath\n      }), {\n        flushSync\n      });\n      return;\n    }\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, true, normalizedPath, opts);\n    if (error) {\n      setFetcherError(key, routeId, error, {\n        flushSync\n      });\n      return;\n    }\n    let match = getTargetMatch(matches, path);\n    let preventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, fogOfWar.active, flushSync, preventScrollReset, submission);\n      return;\n    }\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, {\n      routeId,\n      path\n    });\n    handleFetcherLoader(key, routeId, path, match, matches, fogOfWar.active, flushSync, preventScrollReset, submission);\n  }\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, isFogOfWar, flushSync, preventScrollReset, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    function detectAndHandle405Error(m) {\n      if (!m.route.action && !m.route.lazy) {\n        let error = getInternalRouterError(405, {\n          method: submission.formMethod,\n          pathname: path,\n          routeId: routeId\n        });\n        setFetcherError(key, routeId, error, {\n          flushSync\n        });\n        return true;\n      }\n      return false;\n    }\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\n      return;\n    }\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(requestMatches, new URL(fetchRequest.url).pathname, fetchRequest.signal, key);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, {\n          flushSync\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync\n        });\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n        match = getTargetMatch(requestMatches, path);\n        if (detectAndHandle405Error(match)) {\n          return;\n        }\n      }\n    }\n    // Call the action for the fetcher\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let actionResults = await callDataStrategy(\"action\", state, fetchRequest, [match], requestMatches, key);\n    let actionResult = actionResults[match.route.id];\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    // When using v7_fetcherPersist, we don't want errors bubbling up to the UI\n    // or redirects processed for unmounted fetchers so we just revert them to\n    // idle\n    if (future.v7_fetcherPersist && deletedFetchers.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      }\n      // Let SuccessResult's fall through for revalidation\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          // A new navigation was kicked off after our action started, so that\n          // should take precedence over this redirect navigation.  We already\n          // set isRevalidationRequired so all loaders for the new route should\n          // fire unless opted out via shouldRevalidate\n          updateFetcherState(key, getDoneFetcher(undefined));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\n            fetcherSubmission: submission,\n            preventScrollReset\n          });\n        }\n      }\n      // Process any non-redirect errors thrown\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, submission, nextLocation, false, future.v7_skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, [match.route.id, actionResult]);\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers.filter(rf => rf.key !== key).forEach(rf => {\n      let staleKey = rf.key;\n      let existingFetcher = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(undefined, existingFetcher ? existingFetcher.data : undefined);\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      abortFetcher(staleKey);\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(rf => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(r => fetchControllers.delete(r.key));\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      return startRedirectNavigation(revalidationRequest, redirect.result, false, {\n        preventScrollReset\n      });\n    }\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      return startRedirectNavigation(revalidationRequest, redirect.result, false, {\n        preventScrollReset\n      });\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    abortStaleFetchLoads(loadId);\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors),\n        fetchers: new Map(state.fetchers)\n      });\n      isRevalidationRequired = false;\n    }\n  }\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(key, routeId, path, match, matches, isFogOfWar, flushSync, preventScrollReset, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getLoadingFetcher(submission, existingFetcher ? existingFetcher.data : undefined), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, new URL(fetchRequest.url).pathname, fetchRequest.signal, key);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, {\n          flushSync\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync\n        });\n        return;\n      } else {\n        matches = discoverResult.matches;\n        match = getTargetMatch(matches, path);\n      }\n    }\n    // Call the loader for this fetcher route match\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let results = await callDataStrategy(\"loader\", state, fetchRequest, [match], matches, key);\n    let result = results[match.route.id];\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result = (await resolveDeferredData(result, fetchRequest.signal, true)) || result;\n    }\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    // We don't want errors bubbling up or redirects followed for unmounted\n    // fetchers, so short circuit here if it was removed from the UI\n    if (deletedFetchers.has(key)) {\n      updateFetcherState(key, getDoneFetcher(undefined));\n      return;\n    }\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result, false, {\n          preventScrollReset\n        });\n        return;\n      }\n    }\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n    // Put the fetcher back into an idle state\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(request, redirect, isNavigation, _temp2) {\n    let {\n      submission,\n      fetcherSubmission,\n      preventScrollReset,\n      replace\n    } = _temp2 === void 0 ? {} : _temp2;\n    if (redirect.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n    let location = redirect.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(location, new URL(request.url), basename);\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true\n    });\n    if (isBrowser) {\n      let isDocumentReload = false;\n      if (redirect.response.headers.has(\"X-Remix-Reload-Document\")) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\n        const url = init.history.createURL(location);\n        isDocumentReload =\n        // Hard reload if it's an absolute URL to a new origin\n        url.origin !== routerWindow.location.origin ||\n        // Hard reload if it's an absolute URL that does not match our basename\n        stripBasename(url.pathname, basename) == null;\n      }\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n    let redirectHistoryAction = replace === true || redirect.response.headers.has(\"X-Remix-Replace\") ? Action.Replace : Action.Push;\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let {\n      formMethod,\n      formAction,\n      formEncType\n    } = state.navigation;\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (redirectPreserveMethodStatusCodes.has(redirect.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: _extends({}, activeSubmission, {\n          formAction: location\n        }),\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : undefined\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(redirectLocation, submission);\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : undefined\n      });\n    }\n  }\n  // Utility wrapper for calling dataStrategy client-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(type, state, request, matchesToLoad, matches, fetcherKey) {\n    let results;\n    let dataResults = {};\n    try {\n      results = await callDataStrategyImpl(dataStrategyImpl, type, state, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties);\n    } catch (e) {\n      // If the outer dataStrategy method throws, just return the error for all\n      // matches - and it'll naturally bubble to the root\n      matchesToLoad.forEach(m => {\n        dataResults[m.route.id] = {\n          type: ResultType.error,\n          error: e\n        };\n      });\n      return dataResults;\n    }\n    for (let [routeId, result] of Object.entries(results)) {\n      if (isRedirectDataStrategyResultResult(result)) {\n        let response = result.result;\n        dataResults[routeId] = {\n          type: ResultType.redirect,\n          response: normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename, future.v7_relativeSplatPath)\n        };\n      } else {\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(result);\n      }\n    }\n    return dataResults;\n  }\n  async function callLoadersAndMaybeResolveData(state, matches, matchesToLoad, fetchersToLoad, request) {\n    let currentMatches = state.matches;\n    // Kick off loaders and fetchers in parallel\n    let loaderResultsPromise = callDataStrategy(\"loader\", state, request, matchesToLoad, matches, null);\n    let fetcherResultsPromise = Promise.all(fetchersToLoad.map(async f => {\n      if (f.matches && f.match && f.controller) {\n        let results = await callDataStrategy(\"loader\", state, createClientSideRequest(init.history, f.path, f.controller.signal), [f.match], f.matches, f.key);\n        let result = results[f.match.route.id];\n        // Fetcher results are keyed by fetcher key from here on out, not routeId\n        return {\n          [f.key]: result\n        };\n      } else {\n        return Promise.resolve({\n          [f.key]: {\n            type: ResultType.error,\n            error: getInternalRouterError(404, {\n              pathname: f.path\n            })\n          }\n        });\n      }\n    }));\n    let loaderResults = await loaderResultsPromise;\n    let fetcherResults = (await fetcherResultsPromise).reduce((acc, r) => Object.assign(acc, r), {});\n    await Promise.all([resolveNavigationDeferredResults(matches, loaderResults, request.signal, currentMatches, state.loaderData), resolveFetcherDeferredResults(matches, fetcherResults, fetchersToLoad)]);\n    return {\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.add(key);\n      }\n      abortFetcher(key);\n    });\n  }\n  function updateFetcherState(key, fetcher, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function setFetcherError(key, routeId, error, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function getFetcher(key) {\n    activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n    // If this fetcher was previously marked for deletion, unmark it since we\n    // have a new instance\n    if (deletedFetchers.has(key)) {\n      deletedFetchers.delete(key);\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    // If we opted into the flag we can clear this now since we're calling\n    // deleteFetcher() at the end of updateState() and we've already handed the\n    // deleted fetcher keys off to the data layer.\n    // If not, we're eagerly calling deleteFetcher() and we need to keep this\n    // Set populated until the next updateState call, and we'll clear\n    // `deletedFetchers` then\n    if (future.v7_fetcherPersist) {\n      deletedFetchers.delete(key);\n    }\n    cancelledFetcherLoads.delete(key);\n    state.fetchers.delete(key);\n  }\n  function deleteFetcherAndUpdateState(key) {\n    let count = (activeFetchers.get(key) || 0) - 1;\n    if (count <= 0) {\n      activeFetchers.delete(key);\n      deletedFetchers.add(key);\n      if (!future.v7_fetcherPersist) {\n        deleteFetcher(key);\n      }\n    } else {\n      activeFetchers.set(key, count);\n    }\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    if (controller) {\n      controller.abort();\n      fetchControllers.delete(key);\n    }\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, \"Expected fetcher: \" + key);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, \"Expected fetcher: \" + key);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\", \"Invalid blocker state transition: \" + blocker.state + \" -> \" + newBlocker.state);\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({\n      blockers\n    });\n  }\n  function shouldBlockNavigation(_ref2) {\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = _ref2;\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({\n      currentLocation,\n      nextLocation,\n      historyAction\n    })) {\n      return blockerKey;\n    }\n  }\n  function handleNavigational404(pathname) {\n    let error = getInternalRouterError(404, {\n      pathname\n    });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(routesToUse);\n    // Cancel all pending deferred on 404s since we don't keep any routes\n    cancelActiveDeferreds();\n    return {\n      notFoundMatches: matches,\n      route,\n      error\n    };\n  }\n  function cancelActiveDeferreds(predicate) {\n    let cancelledRouteIds = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(location, matches.map(m => convertRouteMatchToUiMatch(m, state.loaderData)));\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function checkFogOfWar(matches, routesToUse, pathname) {\n    if (patchRoutesOnNavigationImpl) {\n      if (!matches) {\n        let fogMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n        return {\n          active: true,\n          matches: fogMatches || []\n        };\n      } else {\n        if (Object.keys(matches[0].params).length > 0) {\n          // If we matched a dynamic param or a splat, it might only be because\n          // we haven't yet discovered other routes that would match with a\n          // higher score.  Call patchRoutesOnNavigation just to be sure\n          let partialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n          return {\n            active: true,\n            matches: partialMatches\n          };\n        }\n      }\n    }\n    return {\n      active: false,\n      matches: null\n    };\n  }\n  async function discoverRoutes(matches, pathname, signal, fetcherKey) {\n    if (!patchRoutesOnNavigationImpl) {\n      return {\n        type: \"success\",\n        matches\n      };\n    }\n    let partialMatches = matches;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      let localManifest = manifest;\n      try {\n        await patchRoutesOnNavigationImpl({\n          signal,\n          path: pathname,\n          matches: partialMatches,\n          fetcherKey,\n          patch: (routeId, children) => {\n            if (signal.aborted) return;\n            patchRoutesImpl(routeId, children, routesToUse, localManifest, mapRouteProperties);\n          }\n        });\n      } catch (e) {\n        return {\n          type: \"error\",\n          error: e,\n          partialMatches\n        };\n      } finally {\n        // If we are not in the middle of an HMR revalidation and we changed the\n        // routes, provide a new identity so when we `updateState` at the end of\n        // this navigation/fetch `router.routes` will be a new identity and\n        // trigger a re-run of memoized `router.routes` dependencies.\n        // HMR will already update the identity and reflow when it lands\n        // `inFlightDataRoutes` in `completeNavigation`\n        if (isNonHMR && !signal.aborted) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n      if (signal.aborted) {\n        return {\n          type: \"aborted\"\n        };\n      }\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      if (newMatches) {\n        return {\n          type: \"success\",\n          matches: newMatches\n        };\n      }\n      let newPartialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n      // Avoid loops if the second pass results in the same partial matches\n      if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every((m, i) => m.route.id === newPartialMatches[i].route.id)) {\n        return {\n          type: \"success\",\n          matches: null\n        };\n      }\n      partialMatches = newPartialMatches;\n    }\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties, undefined, manifest);\n  }\n  function patchRoutes(routeId, children) {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties);\n    // If we are not in the middle of an HMR revalidation and we changed the\n    // routes, provide a new identity and trigger a reflow via `updateState`\n    // to re-run memoized `router.routes` dependencies.\n    // HMR will already update the identity and reflow when it lands\n    // `inFlightDataRoutes` in `completeNavigation`\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: to => init.history.createHref(to),\n    encodeLocation: to => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: deleteFetcherAndUpdateState,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes\n  };\n  return router;\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\nconst UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\nfunction createStaticHandler(routes, opts) {\n  invariant(routes.length > 0, \"You must provide a non-empty routes array to createStaticHandler\");\n  let manifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties;\n  if (opts != null && opts.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts != null && opts.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Config driven behavior flags\n  let future = _extends({\n    v7_relativeSplatPath: false,\n    v7_throwAbortReason: false\n  }, opts ? opts.future : null);\n  let dataRoutes = convertRoutesToDataRoutes(routes, mapRouteProperties, undefined, manifest);\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   *\n   * - `opts.requestContext` is an optional server context that will be passed\n   *   to actions/loaders in the `context` parameter\n   * - `opts.skipLoaderErrorBubbling` is an optional parameter that will prevent\n   *   the bubbling of errors which allows single-fetch-type implementations\n   *   where the client will handle the bubbling and we may need to return data\n   *   for the handling route\n   */\n  async function query(request, _temp3) {\n    let {\n      requestContext,\n      skipLoaderErrorBubbling,\n      dataStrategy\n    } = _temp3 === void 0 ? {} : _temp3;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, {\n        method\n      });\n      let {\n        matches: methodNotAllowedMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let result = await queryImpl(request, location, matches, requestContext, dataStrategy || null, skipLoaderErrorBubbling === true, null);\n    if (isResponse(result)) {\n      return result;\n    }\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return _extends({\n      location,\n      basename\n    }, result);\n  }\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   *\n   * - `opts.routeId` allows you to specify the specific route handler to call.\n   *   If not provided the handler will determine the proper route by matching\n   *   against `request.url`\n   * - `opts.requestContext` is an optional server context that will be passed\n   *    to actions/loaders in the `context` parameter\n   */\n  async function queryRoute(request, _temp4) {\n    let {\n      routeId,\n      requestContext,\n      dataStrategy\n    } = _temp4 === void 0 ? {} : _temp4;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, {\n        method\n      });\n    } else if (!matches) {\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let match = routeId ? matches.find(m => m.route.id === routeId) : getTargetMatch(matches, location);\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let result = await queryImpl(request, location, matches, requestContext, dataStrategy || null, false, match);\n    if (isResponse(result)) {\n      return result;\n    }\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n    if (result.loaderData) {\n      var _result$activeDeferre;\n      let data = Object.values(result.loaderData)[0];\n      if ((_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n    return undefined;\n  }\n  async function queryImpl(request, location, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch) {\n    invariant(request.signal, \"query()/queryRoute() requests must contain an AbortController signal\");\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch != null);\n        return result;\n      }\n      let result = await loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch);\n      return isResponse(result) ? result : _extends({}, result, {\n        actionData: null,\n        actionHeaders: {}\n      });\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction for a\n      // `queryRoute` call, we throw the `DataStrategyResult` to bail out early\n      // and then return or throw the raw Response here accordingly\n      if (isDataStrategyResult(e) && isResponse(e.result)) {\n        if (e.type === ResultType.error) {\n          throw e.result;\n        }\n        return e.result;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n  async function submit(request, matches, actionMatch, requestContext, dataStrategy, skipLoaderErrorBubbling, isRouteRequest) {\n    let result;\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    } else {\n      let results = await callDataStrategy(\"action\", request, [actionMatch], matches, isRouteRequest, requestContext, dataStrategy);\n      result = results[actionMatch.route.id];\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest, future);\n      }\n    }\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.response.status,\n        headers: {\n          Location: result.response.headers.get(\"Location\")\n        }\n      });\n    }\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    }\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: {\n          [actionMatch.route.id]: result.data\n        },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(loaderRequest, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, null, [boundaryMatch.route.id, result]);\n      // action status codes take precedence over loader status codes\n      return _extends({}, context, {\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\n        actionData: null,\n        actionHeaders: _extends({}, result.headers ? {\n          [actionMatch.route.id]: result.headers\n        } : {})\n      });\n    }\n    let context = await loadRouteData(loaderRequest, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, null);\n    return _extends({}, context, {\n      actionData: {\n        [actionMatch.route.id]: result.data\n      }\n    }, result.statusCode ? {\n      statusCode: result.statusCode\n    } : {}, {\n      actionHeaders: result.headers ? {\n        [actionMatch.route.id]: result.headers\n      } : {}\n    });\n  }\n  async function loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, pendingActionResult) {\n    let isRouteRequest = routeMatch != null;\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy)) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch == null ? void 0 : routeMatch.route.id\n      });\n    }\n    let requestMatches = routeMatch ? [routeMatch] : pendingActionResult && isErrorResult(pendingActionResult[1]) ? getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]) : matches;\n    let matchesToLoad = requestMatches.filter(m => m.route.loader || m.route.lazy);\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce((acc, m) => Object.assign(acc, {\n          [m.route.id]: null\n        }), {}),\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let results = await callDataStrategy(\"loader\", request, matchesToLoad, matches, isRouteRequest, requestContext, dataStrategy);\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest, future);\n    }\n    // Process and commit output from loaders\n    let activeDeferreds = new Map();\n    let context = processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, skipLoaderErrorBubbling);\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set(matchesToLoad.map(match => match.route.id));\n    matches.forEach(match => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n    return _extends({}, context, {\n      matches,\n      activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null\n    });\n  }\n  // Utility wrapper for calling dataStrategy server-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(type, request, matchesToLoad, matches, isRouteRequest, requestContext, dataStrategy) {\n    let results = await callDataStrategyImpl(dataStrategy || defaultDataStrategy, type, null, request, matchesToLoad, matches, null, manifest, mapRouteProperties, requestContext);\n    let dataResults = {};\n    await Promise.all(matches.map(async match => {\n      if (!(match.route.id in results)) {\n        return;\n      }\n      let result = results[match.route.id];\n      if (isRedirectDataStrategyResultResult(result)) {\n        let response = result.result;\n        // Throw redirects and let the server handle them with an HTTP redirect\n        throw normalizeRelativeRoutingRedirectResponse(response, request, match.route.id, matches, basename, future.v7_relativeSplatPath);\n      }\n      if (isResponse(result.result) && isRouteRequest) {\n        // For SSR single-route requests, we want to hand Responses back\n        // directly without unwrapping\n        throw result;\n      }\n      dataResults[match.route.id] = await convertDataStrategyResultToDataResult(result);\n    }));\n    return dataResults;\n  }\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nfunction getStaticContextFromError(routes, context, error) {\n  let newContext = _extends({}, context, {\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\n    }\n  });\n  return newContext;\n}\nfunction throwStaticHandlerAbortedError(request, isRouteRequest, future) {\n  if (future.v7_throwAbortReason && request.signal.reason !== undefined) {\n    throw request.signal.reason;\n  }\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(method + \"() call aborted: \" + request.method + \" \" + request.url);\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== undefined);\n}\nfunction normalizeTo(location, matches, basename, prependBasename, to, v7_relativeSplatPath, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId) {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  // Resolve the relative path\n  let path = resolveTo(to ? to : \".\", getResolveToMatches(contextualMatches, v7_relativeSplatPath), stripBasename(location.pathname, basename) || location.pathname, relative === \"path\");\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  // Account for `?index` params when routing to the current location\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch) {\n    let nakedIndex = hasNakedIndexQuery(path.search);\n    if (activeRouteMatch.route.index && !nakedIndex) {\n      // Add one when we're targeting an index route\n      path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n    } else if (!activeRouteMatch.route.index && nakedIndex) {\n      // Remove existing ones when we're not\n      let params = new URLSearchParams(path.search);\n      let indexValues = params.getAll(\"index\");\n      params.delete(\"index\");\n      indexValues.filter(v => v).forEach(v => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? \"?\" + qs : \"\";\n    }\n  }\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(normalizeFormMethod, isFetcher, path, opts) {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return {\n      path\n    };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, {\n        method: opts.formMethod\n      })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, {\n      type: \"invalid-body\"\n    })\n  });\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod ? rawFormMethod.toUpperCase() : rawFormMethod.toLowerCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ?\n      // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n      Array.from(opts.body.entries()).reduce((acc, _ref3) => {\n        let [name, value] = _ref3;\n        return \"\" + acc + name + \"=\" + value + \"\\n\";\n      }, \"\") : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(typeof FormData === \"function\", \"FormData is not available in this environment\");\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return {\n      path,\n      submission\n    };\n  }\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = \"?\" + searchParams;\n  return {\n    path: createPath(parsedPath),\n    submission\n  };\n}\n// Filter out all routes at/below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId, includeBoundary) {\n  if (includeBoundary === void 0) {\n    includeBoundary = false;\n  }\n  let index = matches.findIndex(m => m.route.id === boundaryId);\n  if (index >= 0) {\n    return matches.slice(0, includeBoundary ? index + 1 : index);\n  }\n  return matches;\n}\nfunction getMatchesToLoad(history, state, matches, submission, location, initialHydration, skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult) {\n  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryMatches = matches;\n  if (initialHydration && state.errors) {\n    // On initial hydration, only consider matches up to _and including_ the boundary.\n    // This is inclusive to handle cases where a server loader ran successfully,\n    // a child server loader bubbled up to this route, but this route has\n    // `clientLoader.hydrate` so we want to still run the `clientLoader` so that\n    // we have a complete version of `loaderData`\n    boundaryMatches = getLoaderMatchesUntilBoundary(matches, Object.keys(state.errors)[0], true);\n  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {\n    // If an action threw an error, we call loaders up to, but not including the\n    // boundary\n    boundaryMatches = getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]);\n  }\n  // Don't revalidate loaders by default after action 4xx/5xx responses\n  // when the flag is enabled.  They can still opt-into revalidation via\n  // `shouldRevalidate` via `actionResult`\n  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : undefined;\n  let shouldSkipRevalidation = skipActionErrorRevalidation && actionStatus && actionStatus >= 400;\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    let {\n      route\n    } = match;\n    if (route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (route.loader == null) {\n      return false;\n    }\n    if (initialHydration) {\n      return shouldLoadRouteOnHydration(route, state.loaderData, state.errors);\n    }\n    // Always call the loader on new route instances and pending defer cancellations\n    if (isNewLoader(state.loaderData, state.matches[index], match) || cancelledDeferredRoutes.some(id => id === match.route.id)) {\n      return true;\n    }\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n    return shouldRevalidateLoader(match, _extends({\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params\n    }, submission, {\n      actionResult,\n      actionStatus,\n      defaultShouldRevalidate: shouldSkipRevalidation ? false :\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search ||\n      // Search params affect all loaders\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\n    }));\n  });\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate:\n    //  - on initial hydration (shouldn't be any fetchers then anyway)\n    //  - if fetcher won't be present in the subsequent render\n    //    - no longer matches the URL (v7_fetcherPersist=false)\n    //    - was unmounted but persisted due to v7_fetcherPersist=true\n    if (initialHydration || !matches.some(m => m.route.id === f.routeId) || deletedFetchers.has(key)) {\n      return;\n    }\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null\n      });\n      return;\n    }\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.has(key)) {\n      // Always mark for revalidation if the fetcher was cancelled\n      cancelledFetcherLoads.delete(key);\n      shouldRevalidate = true;\n    } else if (fetcher && fetcher.state !== \"idle\" && fetcher.data === undefined) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, _extends({\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params\n      }, submission, {\n        actionResult,\n        actionStatus,\n        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired\n      }));\n    }\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController()\n      });\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\nfunction shouldLoadRouteOnHydration(route, loaderData, errors) {\n  // We dunno if we have a loader - gotta find out!\n  if (route.lazy) {\n    return true;\n  }\n  // No loader, nothing to initialize\n  if (!route.loader) {\n    return false;\n  }\n  let hasData = loaderData != null && loaderData[route.id] !== undefined;\n  let hasError = errors != null && errors[route.id] !== undefined;\n  // Don't run if we error'd during SSR\n  if (!hasData && hasError) {\n    return false;\n  }\n  // Explicitly opting-in to running on hydration\n  if (typeof route.loader === \"function\" && route.loader.hydrate === true) {\n    return true;\n  }\n  // Otherwise, run if we're not yet initialized with anything\n  return !hasData && !hasError;\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew =\n  // [a] -> [a, b]\n  !currentMatch ||\n  // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id;\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\nfunction patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties) {\n  var _childrenToPatch;\n  let childrenToPatch;\n  if (routeId) {\n    let route = manifest[routeId];\n    invariant(route, \"No route found to patch children into: routeId = \" + routeId);\n    if (!route.children) {\n      route.children = [];\n    }\n    childrenToPatch = route.children;\n  } else {\n    childrenToPatch = routesToUse;\n  }\n  // Don't patch in routes we already know about so that `patch` is idempotent\n  // to simplify user-land code. This is useful because we re-call the\n  // `patchRoutesOnNavigation` function for matched routes with params.\n  let uniqueChildren = children.filter(newRoute => !childrenToPatch.some(existingRoute => isSameRoute(newRoute, existingRoute)));\n  let newRoutes = convertRoutesToDataRoutes(uniqueChildren, mapRouteProperties, [routeId || \"_\", \"patch\", String(((_childrenToPatch = childrenToPatch) == null ? void 0 : _childrenToPatch.length) || \"0\")], manifest);\n  childrenToPatch.push(...newRoutes);\n}\nfunction isSameRoute(newRoute, existingRoute) {\n  // Most optimal check is by id\n  if (\"id\" in newRoute && \"id\" in existingRoute && newRoute.id === existingRoute.id) {\n    return true;\n  }\n  // Second is by pathing differences\n  if (!(newRoute.index === existingRoute.index && newRoute.path === existingRoute.path && newRoute.caseSensitive === existingRoute.caseSensitive)) {\n    return false;\n  }\n  // Pathless layout routes are trickier since we need to check children.\n  // If they have no children then they're the same as far as we can tell\n  if ((!newRoute.children || newRoute.children.length === 0) && (!existingRoute.children || existingRoute.children.length === 0)) {\n    return true;\n  }\n  // Otherwise, we look to see if every child in the new route is already\n  // represented in the existing route's children\n  return newRoute.children.every((aChild, i) => {\n    var _existingRoute$childr;\n    return (_existingRoute$childr = existingRoute.children) == null ? void 0 : _existingRoute$childr.some(bChild => isSameRoute(aChild, bChild));\n  });\n}\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(route, mapRouteProperties, manifest) {\n  if (!route.lazy) {\n    return;\n  }\n  let lazyRoute = await route.lazy();\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue = routeToUpdate[lazyRouteProperty];\n    let isPropertyStaticallyDefined = staticRouteValue !== undefined &&\n    // This property isn't static since it should always be updated based\n    // on the route updates\n    lazyRouteProperty !== \"hasErrorBoundary\";\n    warning(!isPropertyStaticallyDefined, \"Route \\\"\" + routeToUpdate.id + \"\\\" has a static property \\\"\" + lazyRouteProperty + \"\\\" \" + \"defined but its lazy function is also returning a value for this property. \" + (\"The lazy route property \\\"\" + lazyRouteProperty + \"\\\" will be ignored.\"));\n    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {\n      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];\n    }\n  }\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, _extends({}, mapRouteProperties(routeToUpdate), {\n    lazy: undefined\n  }));\n}\n// Default implementation of `dataStrategy` which fetches all loaders in parallel\nasync function defaultDataStrategy(_ref4) {\n  let {\n    matches\n  } = _ref4;\n  let matchesToLoad = matches.filter(m => m.shouldLoad);\n  let results = await Promise.all(matchesToLoad.map(m => m.resolve()));\n  return results.reduce((acc, result, i) => Object.assign(acc, {\n    [matchesToLoad[i].route.id]: result\n  }), {});\n}\nasync function callDataStrategyImpl(dataStrategyImpl, type, state, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties, requestContext) {\n  let loadRouteDefinitionsPromises = matches.map(m => m.route.lazy ? loadLazyRouteModule(m.route, mapRouteProperties, manifest) : undefined);\n  let dsMatches = matches.map((match, i) => {\n    let loadRoutePromise = loadRouteDefinitionsPromises[i];\n    let shouldLoad = matchesToLoad.some(m => m.route.id === match.route.id);\n    // `resolve` encapsulates route.lazy(), executing the loader/action,\n    // and mapping return values/thrown errors to a `DataStrategyResult`.  Users\n    // can pass a callback to take fine-grained control over the execution\n    // of the loader/action\n    let resolve = async handlerOverride => {\n      if (handlerOverride && request.method === \"GET\" && (match.route.lazy || match.route.loader)) {\n        shouldLoad = true;\n      }\n      return shouldLoad ? callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, requestContext) : Promise.resolve({\n        type: ResultType.data,\n        result: undefined\n      });\n    };\n    return _extends({}, match, {\n      shouldLoad,\n      resolve\n    });\n  });\n  // Send all matches here to allow for a middleware-type implementation.\n  // handler will be a no-op for unneeded routes and we filter those results\n  // back out below.\n  let results = await dataStrategyImpl({\n    matches: dsMatches,\n    request,\n    params: matches[0].params,\n    fetcherKey,\n    context: requestContext\n  });\n  // Wait for all routes to load here but 'swallow the error since we want\n  // it to bubble up from the `await loadRoutePromise` in `callLoaderOrAction` -\n  // called from `match.resolve()`\n  try {\n    await Promise.all(loadRouteDefinitionsPromises);\n  } catch (e) {\n    // No-op\n  }\n  return results;\n}\n// Default logic for calling a loader/action is the user has no specified a dataStrategy\nasync function callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, staticContext) {\n  let result;\n  let onReject;\n  let runHandler = handler => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject;\n    // This will never resolve so safe to type it as Promise<DataStrategyResult> to\n    // satisfy the function return value\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    let actualHandler = ctx => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(new Error(\"You cannot call the handler for a route which defines a boolean \" + (\"\\\"\" + type + \"\\\" [routeId: \" + match.route.id + \"]\")));\n      }\n      return handler({\n        request,\n        params: match.params,\n        context: staticContext\n      }, ...(ctx !== undefined ? [ctx] : []));\n    };\n    let handlerPromise = (async () => {\n      try {\n        let val = await (handlerOverride ? handlerOverride(ctx => actualHandler(ctx)) : actualHandler());\n        return {\n          type: \"data\",\n          result: val\n        };\n      } catch (e) {\n        return {\n          type: \"error\",\n          result: e\n        };\n      }\n    })();\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n  try {\n    let handler = match.route[type];\n    // If we have a route.lazy promise, await that first\n    if (loadRoutePromise) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let [value] = await Promise.all([\n        // If the handler throws, don't let it immediately bubble out,\n        // since we need to let the lazy() execution finish so we know if this\n        // route has a boundary that can handle the error\n        runHandler(handler).catch(e => {\n          handlerError = e;\n        }), loadRoutePromise]);\n        if (handlerError !== undefined) {\n          throw handlerError;\n        }\n        result = value;\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadRoutePromise;\n        handler = match.route[type];\n        if (handler) {\n          // Handler still runs even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return {\n            type: ResultType.data,\n            result: undefined\n          };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n    invariant(result.result !== undefined, \"You defined \" + (type === \"action\" ? \"an action\" : \"a loader\") + \" for route \" + (\"\\\"\" + match.route.id + \"\\\" but didn't return anything from your `\" + type + \"` \") + \"function. Please return a value or `null`.\");\n  } catch (e) {\n    // We should already be catching and converting normal handler executions to\n    // DataStrategyResults and returning them, so anything that throws here is an\n    // unexpected error we still need to wrap\n    return {\n      type: ResultType.error,\n      result: e\n    };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  return result;\n}\nasync function convertDataStrategyResultToDataResult(dataStrategyResult) {\n  let {\n    result,\n    type\n  } = dataStrategyResult;\n  if (isResponse(result)) {\n    let data;\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      // Check between word boundaries instead of startsWith() due to the last\n      // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data = null;\n        } else {\n          data = await result.json();\n        }\n      } else {\n        data = await result.text();\n      }\n    } catch (e) {\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n    if (type === ResultType.error) {\n      return {\n        type: ResultType.error,\n        error: new ErrorResponseImpl(result.status, result.statusText, data),\n        statusCode: result.status,\n        headers: result.headers\n      };\n    }\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (type === ResultType.error) {\n    if (isDataWithResponseInit(result)) {\n      var _result$init3, _result$init4;\n      if (result.data instanceof Error) {\n        var _result$init, _result$init2;\n        return {\n          type: ResultType.error,\n          error: result.data,\n          statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status,\n          headers: (_result$init2 = result.init) != null && _result$init2.headers ? new Headers(result.init.headers) : undefined\n        };\n      }\n      // Convert thrown data() to ErrorResponse instances\n      return {\n        type: ResultType.error,\n        error: new ErrorResponseImpl(((_result$init3 = result.init) == null ? void 0 : _result$init3.status) || 500, undefined, result.data),\n        statusCode: isRouteErrorResponse(result) ? result.status : undefined,\n        headers: (_result$init4 = result.init) != null && _result$init4.headers ? new Headers(result.init.headers) : undefined\n      };\n    }\n    return {\n      type: ResultType.error,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : undefined\n    };\n  }\n  if (isDeferredData(result)) {\n    var _result$init5, _result$init6;\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: (_result$init5 = result.init) == null ? void 0 : _result$init5.status,\n      headers: ((_result$init6 = result.init) == null ? void 0 : _result$init6.headers) && new Headers(result.init.headers)\n    };\n  }\n  if (isDataWithResponseInit(result)) {\n    var _result$init7, _result$init8;\n    return {\n      type: ResultType.data,\n      data: result.data,\n      statusCode: (_result$init7 = result.init) == null ? void 0 : _result$init7.status,\n      headers: (_result$init8 = result.init) != null && _result$init8.headers ? new Headers(result.init.headers) : undefined\n    };\n  }\n  return {\n    type: ResultType.data,\n    data: result\n  };\n}\n// Support relative routing in internal redirects\nfunction normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename, v7_relativeSplatPath) {\n  let location = response.headers.get(\"Location\");\n  invariant(location, \"Redirects returned/thrown from loaders/actions must have a Location header\");\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\n    let trimmedMatches = matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1);\n    location = normalizeTo(new URL(request.url), trimmedMatches, basename, true, location, v7_relativeSplatPath);\n    response.headers.set(\"Location\", location);\n  }\n  return response;\n}\nfunction normalizeRedirectLocation(location, currentUrl, basename) {\n  if (ABSOLUTE_URL_REGEX.test(location)) {\n    // Strip off the protocol+origin for same-origin + same-basename absolute redirects\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = {\n    signal\n  };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let {\n      formMethod,\n      formEncType\n    } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({\n        \"Content-Type\": formEncType\n      });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, skipLoaderErrorBubbling) {\n  // Fill in loaderData/errors from our loaders\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : undefined;\n  // Process loader results into state.loaderData/state.errors\n  matches.forEach(match => {\n    if (!(match.route.id in results)) {\n      return;\n    }\n    let id = match.route.id;\n    let result = results[id];\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n    if (isErrorResult(result)) {\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError !== undefined) {\n        error = pendingError;\n        pendingError = undefined;\n      }\n      errors = errors || {};\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        // Look upwards from the matched route for the closest ancestor error\n        // boundary, defaulting to the root match.  Prefer higher error values\n        // if lower errors bubble to the same boundary\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode != null && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      } else {\n        loaderData[id] = result.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      }\n    }\n  });\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError !== undefined && pendingActionResult) {\n    errors = {\n      [pendingActionResult[0]]: pendingError\n    };\n    loaderData[pendingActionResult[0]] = undefined;\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, results, pendingActionResult, revalidatingFetchers, fetcherResults, activeDeferreds) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, false // This method is only called client side so we always want to bubble\n  );\n  // Process results from our revalidating fetchers\n  revalidatingFetchers.forEach(rf => {\n    let {\n      key,\n      match,\n      controller\n    } = rf;\n    let result = fetcherResults[key];\n    invariant(result, \"Did not find corresponding fetcher result\");\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      return;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = _extends({}, errors, {\n          [boundaryMatch.route.id]: result.error\n        });\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  });\n  return {\n    loaderData,\n    errors\n  };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = _extends({}, newLoaderData);\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\nfunction getActionDataForCommit(pendingActionResult) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1]) ? {\n    // Clear out prior actionData on errors\n    actionData: {}\n  } : {\n    actionData: {\n      [pendingActionResult[0]]: pendingActionResult[1].data\n    }\n  };\n}\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.length === 1 ? routes[0] : routes.find(r => r.index || !r.path || r.path === \"/\") || {\n    id: \"__shim-error-route__\"\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route\n    }],\n    route\n  };\n}\nfunction getInternalRouterError(status, _temp5) {\n  let {\n    pathname,\n    routeId,\n    method,\n    type,\n    message\n  } = _temp5 === void 0 ? {} : _temp5;\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide a `loader` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = \"Route \\\"\" + routeId + \"\\\" does not match URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = \"No route matches URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method.toUpperCase() + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide an `action` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (method) {\n      errorMessage = \"Invalid request method \\\"\" + method.toUpperCase() + \"\\\"\";\n    }\n  }\n  return new ErrorResponseImpl(status || 500, statusText, new Error(errorMessage), true);\n}\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results) {\n  let entries = Object.entries(results);\n  for (let i = entries.length - 1; i >= 0; i--) {\n    let [key, result] = entries[i];\n    if (isRedirectResult(result)) {\n      return {\n        key,\n        result\n      };\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath(_extends({}, parsedPath, {\n    hash: \"\"\n  }));\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\nfunction isDataStrategyResult(result) {\n  return result != null && typeof result === \"object\" && \"type\" in result && \"result\" in result && (result.type === ResultType.data || result.type === ResultType.error);\n}\nfunction isRedirectDataStrategyResultResult(result) {\n  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);\n}\nfunction isDeferredResult(result) {\n  return result.type === ResultType.deferred;\n}\nfunction isErrorResult(result) {\n  return result.type === ResultType.error;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === ResultType.redirect;\n}\nfunction isDataWithResponseInit(value) {\n  return typeof value === \"object\" && value != null && \"type\" in value && \"data\" in value && \"init\" in value && value.type === \"DataWithResponseInit\";\n}\nfunction isDeferredData(value) {\n  let deferred = value;\n  return deferred && typeof deferred === \"object\" && typeof deferred.data === \"object\" && typeof deferred.subscribe === \"function\" && typeof deferred.cancel === \"function\" && typeof deferred.resolveData === \"function\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isRedirectResponse(result) {\n  if (!isResponse(result)) {\n    return false;\n  }\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toLowerCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toLowerCase());\n}\nasync function resolveNavigationDeferredResults(matches, results, signal, currentMatches, currentLoaderData) {\n  let entries = Object.entries(results);\n  for (let index = 0; index < entries.length; index++) {\n    let [routeId, result] = entries[index];\n    let match = matches.find(m => (m == null ? void 0 : m.route.id) === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    let currentMatch = currentMatches.find(m => m.route.id === match.route.id);\n    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n    if (isDeferredResult(result) && isRevalidatingLoader) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      await resolveDeferredData(result, signal, false).then(result => {\n        if (result) {\n          results[routeId] = result;\n        }\n      });\n    }\n  }\n}\nasync function resolveFetcherDeferredResults(matches, results, revalidatingFetchers) {\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let {\n      key,\n      routeId,\n      controller\n    } = revalidatingFetchers[index];\n    let result = results[key];\n    let match = matches.find(m => (m == null ? void 0 : m.route.id) === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    if (isDeferredResult(result)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      invariant(controller, \"Expected an AbortController for revalidating fetcher deferred result\");\n      await resolveDeferredData(result, controller.signal, true).then(result => {\n        if (result) {\n          results[key] = result;\n        }\n      });\n    }\n  }\n}\nasync function resolveDeferredData(result, signal, unwrap) {\n  if (unwrap === void 0) {\n    unwrap = false;\n  }\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n  }\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data\n  };\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some(v => v === \"\");\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let {\n    formMethod,\n    formAction,\n    formEncType,\n    text,\n    formData,\n    json\n  } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data\n  };\n  return fetcher;\n}\nfunction restoreAppliedTransitions(_window, transitions) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(TRANSITIONS_STORAGE_KEY);\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n    // no-op, use default empty object\n  }\n}\nfunction persistAppliedTransitions(_window, transitions) {\n  if (transitions.size > 0) {\n    let json = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(TRANSITIONS_STORAGE_KEY, JSON.stringify(json));\n    } catch (error) {\n      warning(false, \"Failed to save applied view transitions in sessionStorage (\" + error + \").\");\n    }\n  }\n}\n//#endregion\n\nexport { AbortedDeferredError, Action, IDLE_BLOCKER, IDLE_FETCHER, IDLE_NAVIGATION, UNSAFE_DEFERRED_SYMBOL, DeferredData as UNSAFE_DeferredData, ErrorResponseImpl as UNSAFE_ErrorResponseImpl, convertRouteMatchToUiMatch as UNSAFE_convertRouteMatchToUiMatch, convertRoutesToDataRoutes as UNSAFE_convertRoutesToDataRoutes, decodePath as UNSAFE_decodePath, getResolveToMatches as UNSAFE_getResolveToMatches, invariant as UNSAFE_invariant, warning as UNSAFE_warning, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, createRouter, createStaticHandler, data, defer, generatePath, getStaticContextFromError, getToPathname, isDataWithResponseInit, isDeferredData, isRouteErrorResponse, joinPaths, json, matchPath, matchRoutes, normalizePathname, parsePath, redirect, redirectDocument, replace, resolvePath, resolveTo, stripBasename };\n//# sourceMappingURL=router.js.map\n","/**\n * React Router v6.30.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_invariant, joinPaths, matchPath, UNSAFE_decodePath, UNSAFE_getResolveToMatches, UNSAFE_warning, resolveTo, parsePath, matchRoutes, Action, UNSAFE_convertRouteMatchToUiMatch, stripBasename, IDLE_BLOCKER, isRouteErrorResponse, createMemoryHistory, AbortedDeferredError, createRouter } from '@remix-run/router';\nexport { AbortedDeferredError, Action as NavigationType, createPath, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, replace, resolvePath } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nconst DataRouterContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterContext.displayName = \"DataRouter\";\n}\nconst DataRouterStateContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\nconst AwaitContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  AwaitContext.displayName = \"Await\";\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level `<Router>` API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\n\nconst NavigationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\nconst LocationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\nconst RouteContext = /*#__PURE__*/React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\nconst RouteErrorContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/v6/hooks/use-href\n */\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n\n/**\n * Returns true if this component is a descendant of a `<Router>`.\n *\n * @see https://reactrouter.com/v6/hooks/use-in-router-context\n */\nfunction useInRouterContext() {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/v6/hooks/use-location\n */\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/v6/hooks/use-navigation-type\n */\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * `<NavLink>`.\n *\n * @see https://reactrouter.com/v6/hooks/use-match\n */\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return React.useMemo(() => matchPath(pattern, UNSAFE_decodePath(pathname)), [pathname, pattern]);\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\nconst navigateEffectWarning = \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\";\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by `<Link>`s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/v6/hooks/use-navigate\n */\nfunction useNavigate() {\n  let {\n    isDataRoute\n  } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\nfunction useNavigateUnstable() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let {\n    basename,\n    future,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath));\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our history listener yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\");\n\n    // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history (but only if we're not in a data router,\n    // otherwise it'll prepend the basename inside of the router).\n    // If this is a root navigation, then we navigate to the raw basename\n    // which allows the basename to have full control over the presence of a\n    // trailing slash on root links\n    if (dataRouterContext == null && basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n    }\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname, dataRouterContext]);\n  return navigate;\n}\nconst OutletContext = /*#__PURE__*/React.createContext(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/v6/hooks/use-outlet-context\n */\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by `<Outlet>` to render child routes.\n *\n * @see https://reactrouter.com/v6/hooks/use-outlet\n */\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/v6/hooks/use-params\n */\nfunction useParams() {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/v6/hooks/use-resolved-path\n */\nfunction useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    future\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath));\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an `<Outlet>` to render their child route's\n * element.\n *\n * @see https://reactrouter.com/v6/hooks/use-routes\n */\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nfunction useRoutesImpl(routes, locationArg, dataRouterState, future) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches: parentMatches\n  } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : UNSAFE_invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    // Determine the remaining pathname by removing the # of URL segments the\n    // parentPathnameBase has, instead of removing based on character count.\n    // This is because we can't guarantee that incoming/outgoing encodings/\n    // decodings will match exactly.\n    // We decode paths before matching on a per-segment basis with\n    // decodeURIComponent(), but we re-encode pathnames via `new URL()` so they\n    // match what `window.location.pathname` would reflect.  Those don't 100%\n    // align when it comes to encoded URI characters such as % and &.\n    //\n    // So we may end up with:\n    //   pathname:           \"/descendant/a%25b/match\"\n    //   parentPathnameBase: \"/descendant/a%b\"\n    //\n    // And the direct substring removal approach won't work :/\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(matches == null || matches[matches.length - 1].route.element !== undefined || matches[matches.length - 1].route.Component !== undefined || matches[matches.length - 1].route.lazy !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \" + \"does not have an element or Component. This means it will render an <Outlet /> with a \" + \"null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterState, future);\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return /*#__PURE__*/React.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: Action.Pop\n      }\n    }, renderedMatches);\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  let devInfo = null;\n  if (process.env.NODE_ENV !== \"production\") {\n    console.error(\"Error handled by React Router default ErrorBoundary:\", error);\n    devInfo = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"ErrorBoundary\"), \" or\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unexpected Application Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/React.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\nconst defaultErrorElement = /*#__PURE__*/React.createElement(DefaultErrorComponent, null);\nclass RenderErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error !== undefined ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    return this.state.error !== undefined ? /*#__PURE__*/React.createElement(RouteContext.Provider, {\n      value: this.props.routeContext\n    }, /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    })) : this.props.children;\n  }\n}\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /*#__PURE__*/React.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\nfunction _renderMatches(matches, parentMatches, dataRouterState, future) {\n  var _dataRouterState;\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n  if (dataRouterState === void 0) {\n    dataRouterState = null;\n  }\n  if (future === void 0) {\n    future = null;\n  }\n  if (matches == null) {\n    var _future;\n    if (!dataRouterState) {\n      return null;\n    }\n    if (dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else if ((_future = future) != null && _future.v7_partialHydration && parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) {\n      // Don't bail if we're initializing with partial hydration and we have\n      // router matches.  That means we're actively running `patchRoutesOnNavigation`\n      // so we should render down the partial matches to the appropriate\n      // `HydrateFallback`.  We only do this if `parentMatches` is empty so it\n      // only impacts the root matches for `RouterProvider` and no descendant\n      // `<Routes>`\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = (_dataRouterState = dataRouterState) == null ? void 0 : _dataRouterState.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]) !== undefined);\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"Could not find a matching route for errors on route IDs: \" + Object.keys(errors).join(\",\")) : UNSAFE_invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n\n  // If we're in a partial hydration mode, detect if we need to render down to\n  // a given HydrateFallback while we load the rest of the hydration data\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState && future && future.v7_partialHydration) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      // Track the deepest fallback up until the first route without data\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n      if (match.route.id) {\n        let {\n          loaderData,\n          errors\n        } = dataRouterState;\n        let needsToRunLoader = match.route.loader && loaderData[match.route.id] === undefined && (!errors || errors[match.route.id] === undefined);\n        if (match.route.lazy || needsToRunLoader) {\n          // We found the first route that's not ready to render (waiting on\n          // lazy, or has a loader that hasn't run yet).  Flag that we need to\n          // render a fallback and render up until the appropriate fallback\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    // Only data routers handle errors/fallbacks\n    let error;\n    let shouldRenderHydrateFallback = false;\n    let errorElement = null;\n    let hydrateFallbackElement = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : undefined;\n      errorElement = match.route.errorElement || defaultErrorElement;\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\"route-fallback\", false, \"No `HydrateFallback` element provided to render during initial hydration\");\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = /*#__PURE__*/React.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return /*#__PURE__*/React.createElement(RenderedRoute, {\n        match: match,\n        routeContext: {\n          outlet,\n          matches,\n          isDataRoute: dataRouterState != null\n        },\n        children: children\n      });\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      revalidation: dataRouterState.revalidation,\n      component: errorElement,\n      error: error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches,\n        isDataRoute: true\n      }\n    }) : getChildren();\n  }, null);\n}\nvar DataRouterHook = /*#__PURE__*/function (DataRouterHook) {\n  DataRouterHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterHook[\"UseNavigateStable\"] = \"useNavigate\";\n  return DataRouterHook;\n}(DataRouterHook || {});\nvar DataRouterStateHook = /*#__PURE__*/function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterStateHook[\"UseNavigateStable\"] = \"useNavigate\";\n  DataRouterStateHook[\"UseRouteId\"] = \"useRouteId\";\n  return DataRouterStateHook;\n}(DataRouterStateHook || {});\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, hookName + \" can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nfunction useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(() => ({\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  }), [dataRouterContext.router.revalidate, state.revalidation]);\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterStateHook.UseMatches);\n  return React.useMemo(() => matches.map(m => UNSAFE_convertRouteMatchToUiMatch(m, loaderData)), [matches, loaderData]);\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\"You cannot `useLoaderData` in an errorElement (routeId: \" + routeId + \")\");\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  return state.actionData ? state.actionData[routeId] : undefined;\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nfunction useRouteError() {\n  var _state$errors;\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error !== undefined) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor `<Await />` value\n */\nfunction useAsyncValue() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n\n/**\n * Returns the error from the nearest ancestor `<Await />` value\n */\nfunction useAsyncError() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nfunction useBlocker(shouldBlock) {\n  let {\n    router,\n    basename\n  } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback(arg => {\n    if (typeof shouldBlock !== \"function\") {\n      return !!shouldBlock;\n    }\n    if (basename === \"/\") {\n      return shouldBlock(arg);\n    }\n\n    // If they provided us a function and we've got an active basename, strip\n    // it from the locations we expose to the user to match the behavior of\n    // useLocation\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = arg;\n    return shouldBlock({\n      currentLocation: _extends({}, currentLocation, {\n        pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\n      }),\n      nextLocation: _extends({}, nextLocation, {\n        pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\n      }),\n      historyAction\n    });\n  }, [basename, shouldBlock]);\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our router subscriber yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      router.navigate(to);\n    } else {\n      router.navigate(to, _extends({\n        fromRouteId: id\n      }, options));\n    }\n  }, [router, id]);\n  return navigate;\n}\nconst alreadyWarned$1 = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned$1[key]) {\n    alreadyWarned$1[key] = true;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, message) : void 0;\n  }\n}\n\nconst alreadyWarned = {};\nfunction warnOnce(key, message) {\n  if (process.env.NODE_ENV !== \"production\" && !alreadyWarned[message]) {\n    alreadyWarned[message] = true;\n    console.warn(message);\n  }\n}\nconst logDeprecation = (flag, msg, link) => warnOnce(flag, \"\\u26A0\\uFE0F React Router Future Flag Warning: \" + msg + \". \" + (\"You can use the `\" + flag + \"` future flag to opt-in early. \") + (\"For more information, see \" + link + \".\"));\nfunction logV6DeprecationWarnings(renderFuture, routerFuture) {\n  if ((renderFuture == null ? void 0 : renderFuture.v7_startTransition) === undefined) {\n    logDeprecation(\"v7_startTransition\", \"React Router will begin wrapping state updates in `React.startTransition` in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_starttransition\");\n  }\n  if ((renderFuture == null ? void 0 : renderFuture.v7_relativeSplatPath) === undefined && (!routerFuture || routerFuture.v7_relativeSplatPath === undefined)) {\n    logDeprecation(\"v7_relativeSplatPath\", \"Relative route resolution within Splat routes is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_relativesplatpath\");\n  }\n  if (routerFuture) {\n    if (routerFuture.v7_fetcherPersist === undefined) {\n      logDeprecation(\"v7_fetcherPersist\", \"The persistence behavior of fetchers is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_fetcherpersist\");\n    }\n    if (routerFuture.v7_normalizeFormMethod === undefined) {\n      logDeprecation(\"v7_normalizeFormMethod\", \"Casing of `formMethod` fields is being normalized to uppercase in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_normalizeformmethod\");\n    }\n    if (routerFuture.v7_partialHydration === undefined) {\n      logDeprecation(\"v7_partialHydration\", \"`RouterProvider` hydration behavior is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_partialhydration\");\n    }\n    if (routerFuture.v7_skipActionErrorRevalidation === undefined) {\n      logDeprecation(\"v7_skipActionErrorRevalidation\", \"The revalidation behavior after 4xx/5xx `action` responses is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_skipactionerrorrevalidation\");\n    }\n  }\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    if (v7_startTransition && startTransitionImpl) {\n      startTransitionImpl(() => setStateImpl(newState));\n    } else {\n      setStateImpl(newState);\n    }\n  }, [setStateImpl, v7_startTransition]);\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  React.useEffect(() => {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(fallbackElement == null || !router.future.v7_partialHydration, \"`<RouterProvider fallbackElement>` is deprecated when using \" + \"`v7_partialHydration`, use a `HydrateFallback` component instead\") : void 0;\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n  React.useEffect(() => logV6DeprecationWarnings(future, router.future), [router, future]);\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator,\n    future: {\n      v7_relativeSplatPath: router.future.v7_relativeSplatPath\n    }\n  }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    future: router.future,\n    state: state\n  }) : fallbackElement))), null);\n}\nfunction DataRoutes(_ref2) {\n  let {\n    routes,\n    future,\n    state\n  } = _ref2;\n  return useRoutesImpl(routes, undefined, state, future);\n}\n/**\n * A `<Router>` that stores all entries in memory.\n *\n * @see https://reactrouter.com/v6/router-components/memory-router\n */\nfunction MemoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex,\n    future\n  } = _ref3;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/v6/components/navigate\n */\nfunction Navigate(_ref4) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref4;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    future,\n    static: isStatic\n  } = React.useContext(NavigationContext);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(!isStatic, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(to, UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath), locationPathname, relative === \"path\");\n  let jsonPath = JSON.stringify(path);\n  React.useEffect(() => navigate(JSON.parse(jsonPath), {\n    replace,\n    state,\n    relative\n  }), [navigate, jsonPath, relative, replace, state]);\n  return null;\n}\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/v6/components/outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/v6/components/route\n */\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : UNSAFE_invariant(false) ;\n}\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a `<Router>` directly. Instead, you'll render a\n * router that is more specific to your environment such as a `<BrowserRouter>`\n * in web browsers or a `<StaticRouter>` for server rendering.\n *\n * @see https://reactrouter.com/v6/router-components/router\n */\nfunction Router(_ref5) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false,\n    future\n  } = _ref5;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : UNSAFE_invariant(false) : void 0;\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp,\n    future: _extends({\n      v7_relativeSplatPath: false\n    }, future)\n  }), [basename, future, navigator, staticProp]);\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(locationContext != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n  if (locationContext == null) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\n    children: children,\n    value: locationContext\n  }));\n}\n/**\n * A container for a nested tree of `<Route>` elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/v6/components/routes\n */\nfunction Routes(_ref6) {\n  let {\n    children,\n    location\n  } = _ref6;\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nfunction Await(_ref7) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref7;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\nvar AwaitRenderStatus = /*#__PURE__*/function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n  return AwaitRenderStatus;\n}(AwaitRenderStatus || {});\nconst neverSettledPromise = new Promise(() => {});\nclass AwaitErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_data\", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_error\", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = \"_error\" in promise ? AwaitRenderStatus.error : \"_data\" in promise ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, \"_error\", {\n        get: () => error\n      }));\n    }\n    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on `<Await>`\n */\nfunction ResolveAwait(_ref8) {\n  let {\n    children\n  } = _ref8;\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, toRender);\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/v6/utils/create-routes-from-children\n */\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  let routes = [];\n  React.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n    let treePath = [...parentPath, index];\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));\n      return;\n    }\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : UNSAFE_invariant(false) : void 0;\n    !(!element.props.index || !element.props.children) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"An index route cannot have child routes.\") : UNSAFE_invariant(false) : void 0;\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n    routes.push(route);\n  });\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.element) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `Component` and `element` on your route - \" + \"`Component` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      element: /*#__PURE__*/React.createElement(route.Component),\n      Component: undefined\n    });\n  }\n  if (route.HydrateFallback) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.hydrateFallbackElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - \" + \"`HydrateFallback` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      hydrateFallbackElement: /*#__PURE__*/React.createElement(route.HydrateFallback),\n      HydrateFallback: undefined\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.errorElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" + \"`ErrorBoundary` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      errorElement: /*#__PURE__*/React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined\n    });\n  }\n  return updates;\n}\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes,\n    mapRouteProperties,\n    dataStrategy: opts == null ? void 0 : opts.dataStrategy,\n    patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation\n  }).initialize();\n}\n\nexport { Await, MemoryRouter, Navigate, Outlet, Route, Router, RouterProvider, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, logV6DeprecationWarnings as UNSAFE_logV6DeprecationWarnings, mapRouteProperties as UNSAFE_mapRouteProperties, useRouteId as UNSAFE_useRouteId, useRoutesImpl as UNSAFE_useRoutesImpl, createMemoryRouter, createRoutesFromChildren, createRoutesFromChildren as createRoutesFromElements, renderMatches, useActionData, useAsyncError, useAsyncValue, useBlocker, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };\n//# sourceMappingURL=index.js.map\n","/**\n * React Router DOM v6.30.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { UNSAFE_mapRouteProperties, UNSAFE_logV6DeprecationWarnings, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, Router, UNSAFE_useRoutesImpl, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, useNavigate, createPath, UNSAFE_useRouteId, UNSAFE_RouteContext, useMatches, useNavigation, useBlocker } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_useRouteId, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, renderMatches, replace, resolvePath, useActionData, useAsyncError, useAsyncValue, useBlocker, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { stripBasename, UNSAFE_warning, createRouter, createBrowserHistory, createHashHistory, UNSAFE_ErrorResponseImpl, UNSAFE_invariant, joinPaths, IDLE_FETCHER, matchPath } from '@remix-run/router';\nexport { UNSAFE_ErrorResponseImpl } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && (\n  // Ignore everything but left clicks\n  !target || target === \"_self\") &&\n  // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n  return searchParams;\n}\n// One-time check for submitter support\nlet _formDataSupportsSubmitter = null;\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(document.createElement(\"form\"),\n      // @ts-expect-error if FormData supports the submitter parameter, this will throw\n      0);\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\nconst supportedFormEncTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"\\\"\" + encType + \"\\\" is not a valid `encType` for `<Form>`/`<fetcher.Form>` \" + (\"and will default to \\\"\" + defaultEncType + \"\\\"\")) : void 0;\n    return null;\n  }\n  return encType;\n}\nfunction getFormSubmissionInfo(target, basename) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n  let body;\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    }\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let {\n        name,\n        type,\n        value\n      } = target;\n      if (type === \"image\") {\n        let prefix = name ? name + \".\" : \"\";\n        formData.append(prefix + \"x\", \"0\");\n        formData.append(prefix + \"y\", \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n  return {\n    action,\n    method: method.toLowerCase(),\n    encType,\n    formData,\n    body\n  };\n}\n\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\", \"viewTransition\"],\n  _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"viewTransition\", \"children\"],\n  _excluded3 = [\"fetcherKey\", \"navigate\", \"reloadDocument\", \"replace\", \"state\", \"method\", \"action\", \"onSubmit\", \"relative\", \"preventScrollReset\", \"viewTransition\"];\n// HEY YOU! DON'T TOUCH THIS VARIABLE!\n//\n// It is replaced with the proper version at build time via a babel plugin in\n// the rollup config.\n//\n// Export a global property onto the window for React Router detection by the\n// Core Web Vitals Technology Report.  This way they can configure the `wappalyzer`\n// to detect and properly classify live websites as being built with React Router:\n// https://github.com/HTTPArchive/wappalyzer/blob/main/src/technologies/r.json\nconst REACT_ROUTER_VERSION = \"6\";\ntry {\n  window.__reactRouterVersion = REACT_ROUTER_VERSION;\n} catch (e) {\n  // no-op\n}\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    dataStrategy: opts == null ? void 0 : opts.dataStrategy,\n    patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    dataStrategy: opts == null ? void 0 : opts.dataStrategy,\n    patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction parseHydrationData() {\n  var _window;\n  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n  return state;\n}\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new UNSAFE_ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nconst ViewTransitionContext = /*#__PURE__*/React.createContext({\n  isTransitioning: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\nconst FetchersContext = /*#__PURE__*/React.createContext(new Map());\nif (process.env.NODE_ENV !== \"production\") {\n  FetchersContext.displayName = \"Fetchers\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\nconst FLUSH_SYNC = \"flushSync\";\nconst flushSyncImpl = ReactDOM[FLUSH_SYNC];\nconst USE_ID = \"useId\";\nconst useIdImpl = React[USE_ID];\nfunction startTransitionSafe(cb) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\nfunction flushSyncSafe(cb) {\n  if (flushSyncImpl) {\n    flushSyncImpl(cb);\n  } else {\n    cb();\n  }\n}\nclass Deferred {\n  constructor() {\n    this.status = \"pending\";\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = value => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = reason => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState();\n  let [vtContext, setVtContext] = React.useState({\n    isTransitioning: false\n  });\n  let [renderDfd, setRenderDfd] = React.useState();\n  let [transition, setTransition] = React.useState();\n  let [interruption, setInterruption] = React.useState();\n  let fetcherData = React.useRef(new Map());\n  let {\n    v7_startTransition\n  } = future || {};\n  let optInStartTransition = React.useCallback(cb => {\n    if (v7_startTransition) {\n      startTransitionSafe(cb);\n    } else {\n      cb();\n    }\n  }, [v7_startTransition]);\n  let setState = React.useCallback((newState, _ref2) => {\n    let {\n      deletedFetchers,\n      flushSync: flushSync,\n      viewTransitionOpts: viewTransitionOpts\n    } = _ref2;\n    newState.fetchers.forEach((fetcher, key) => {\n      if (fetcher.data !== undefined) {\n        fetcherData.current.set(key, fetcher.data);\n      }\n    });\n    deletedFetchers.forEach(key => fetcherData.current.delete(key));\n    let isViewTransitionUnavailable = router.window == null || router.window.document == null || typeof router.window.document.startViewTransition !== \"function\";\n    // If this isn't a view transition or it's not available in this browser,\n    // just update and be done with it\n    if (!viewTransitionOpts || isViewTransitionUnavailable) {\n      if (flushSync) {\n        flushSyncSafe(() => setStateImpl(newState));\n      } else {\n        optInStartTransition(() => setStateImpl(newState));\n      }\n      return;\n    }\n    // flushSync + startViewTransition\n    if (flushSync) {\n      // Flush through the context to mark DOM elements as transition=ing\n      flushSyncSafe(() => {\n        // Cancel any pending transitions\n        if (transition) {\n          renderDfd && renderDfd.resolve();\n          transition.skipTransition();\n        }\n        setVtContext({\n          isTransitioning: true,\n          flushSync: true,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      });\n      // Update the DOM\n      let t = router.window.document.startViewTransition(() => {\n        flushSyncSafe(() => setStateImpl(newState));\n      });\n      // Clean up after the animation completes\n      t.finished.finally(() => {\n        flushSyncSafe(() => {\n          setRenderDfd(undefined);\n          setTransition(undefined);\n          setPendingState(undefined);\n          setVtContext({\n            isTransitioning: false\n          });\n        });\n      });\n      flushSyncSafe(() => setTransition(t));\n      return;\n    }\n    // startTransition + startViewTransition\n    if (transition) {\n      // Interrupting an in-progress transition, cancel and let everything flush\n      // out, and then kick off a new transition from the interruption state\n      renderDfd && renderDfd.resolve();\n      transition.skipTransition();\n      setInterruption({\n        state: newState,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    } else {\n      // Completed navigation update with opted-in view transitions, let 'er rip\n      setPendingState(newState);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    }\n  }, [router.window, transition, renderDfd, fetcherData, optInStartTransition]);\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred());\n    }\n  }, [vtContext]);\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({\n          isTransitioning: false\n        });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n  React.useEffect(() => {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(fallbackElement == null || !router.future.v7_partialHydration, \"`<RouterProvider fallbackElement>` is deprecated when using \" + \"`v7_partialHydration`, use a `HydrateFallback` component instead\") : void 0;\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n  let routerFuture = React.useMemo(() => ({\n    v7_relativeSplatPath: router.future.v7_relativeSplatPath\n  }), [router.future.v7_relativeSplatPath]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future, router.future), [future, router.future]);\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UNSAFE_DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(UNSAFE_DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(FetchersContext.Provider, {\n    value: fetcherData.current\n  }, /*#__PURE__*/React.createElement(ViewTransitionContext.Provider, {\n    value: vtContext\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator,\n    future: routerFuture\n  }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/React.createElement(MemoizedDataRoutes, {\n    routes: router.routes,\n    future: router.future,\n    state: state\n  }) : fallbackElement))))), null);\n}\n// Memoize to avoid re-renders when updating `ViewTransitionContext`\nconst MemoizedDataRoutes = /*#__PURE__*/React.memo(DataRoutes);\nfunction DataRoutes(_ref3) {\n  let {\n    routes,\n    future,\n    state\n  } = _ref3;\n  return UNSAFE_useRoutesImpl(routes, undefined, state, future);\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nfunction BrowserRouter(_ref4) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref4;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nfunction HashRouter(_ref5) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref5;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter(_ref6) {\n  let {\n    basename,\n    children,\n    future,\n    history\n  } = _ref6;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref7, ref) {\n  let {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      viewTransition\n    } = _ref7,\n    rest = _objectWithoutPropertiesLoose(_ref7, _excluded);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  // Rendered into <a href> for absolute URLs\n  let absoluteHref;\n  let isExternal = false;\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to;\n    // Only check for external origins client-side\n    if (isBrowser) {\n      try {\n        let currentUrl = new URL(window.location.href);\n        let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n        let path = stripBasename(targetUrl.pathname, basename);\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can't do external URL detection without a valid URL\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") : void 0;\n      }\n    }\n  }\n  // Rendered into <a href> for relative URLs\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative,\n    viewTransition\n  });\n  function handleClick(event) {\n    if (onClick) onClick(event);\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref8, ref) {\n  let {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      viewTransition,\n      children\n    } = _ref8,\n    rest = _objectWithoutPropertiesLoose(_ref8, _excluded2);\n  let path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  let location = useLocation();\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let {\n    navigator,\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let isTransitioning = routerState != null &&\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  useViewTransitionState(path) && viewTransition === true;\n  let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  let locationPathname = location.pathname;\n  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n  if (nextLocationPathname && basename) {\n    nextLocationPathname = stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n  }\n  // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n  // we're looking for a slash _after_ what's in `to`.  For example:\n  //\n  // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n  // both want to look for a / at index 6 to match URL `/users/matt`\n  const endSlashPosition = toPathname !== \"/\" && toPathname.endsWith(\"/\") ? toPathname.length - 1 : toPathname.length;\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === \"/\";\n  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  let renderProps = {\n    isActive,\n    isPending,\n    isTransitioning\n  };\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp(renderProps);\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null, isTransitioning ? \"transitioning\" : null].filter(Boolean).join(\" \");\n  }\n  let style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to,\n    viewTransition: viewTransition\n  }), typeof children === \"function\" ? children(renderProps) : children);\n});\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nconst Form = /*#__PURE__*/React.forwardRef((_ref9, forwardedRef) => {\n  let {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      viewTransition\n    } = _ref9,\n    props = _objectWithoutPropertiesLoose(_ref9, _excluded3);\n  let submit = useSubmit();\n  let formAction = useFormAction(action, {\n    relative\n  });\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      fetcherKey,\n      method: submitMethod,\n      navigate,\n      replace,\n      state,\n      relative,\n      preventScrollReset,\n      viewTransition\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nfunction ScrollRestoration(_ref10) {\n  let {\n    getKey,\n    storageKey\n  } = _ref10;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\nvar DataRouterHook;\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmit\"] = \"useSubmit\";\n  DataRouterHook[\"UseSubmitFetcher\"] = \"useSubmitFetcher\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterHook[\"useViewTransitionState\"] = \"useViewTransitionState\";\n})(DataRouterHook || (DataRouterHook = {}));\nvar DataRouterStateHook;\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\n// Internal hooks\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n// External hooks\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    viewTransition\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault();\n      // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative,\n        viewTransition\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative, viewTransition]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n  let location = useLocation();\n  let searchParams = React.useMemo(() =>\n  // Only merge in the defaults if we haven't yet called setSearchParams.\n  // Once we call that we want those to take precedence, otherwise you can't\n  // remove a param with setSearchParams({}) if it has an initial value\n  getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n  }\n}\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => \"__\" + String(++fetcherId) + \"__\";\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nfunction useSubmit() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let currentRouteId = UNSAFE_useRouteId();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n    if (options.navigate === false) {\n      let key = options.fetcherKey || getUniqueFetcherId();\n      router.fetch(key, currentRouteId, options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        flushSync: options.flushSync\n      });\n    } else {\n      router.navigate(options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        replace: options.replace,\n        state: options.state,\n        fromRouteId: currentRouteId,\n        flushSync: options.flushSync,\n        viewTransition: options.viewTransition\n      });\n    }\n  }, [router, basename, currentRouteId]);\n}\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative\n  }));\n  // If no action was specified, browsers will persist current search params\n  // when determining the path, so match that behavior\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n    // When grabbing search params from the URL, remove any included ?index param\n    // since it might not apply to our contextual route.  We add it back based\n    // on match.route.index below\n    let params = new URLSearchParams(path.search);\n    let indexValues = params.getAll(\"index\");\n    let hasNakedIndexParam = indexValues.some(v => v === \"\");\n    if (hasNakedIndexParam) {\n      params.delete(\"index\");\n      indexValues.filter(v => v).forEach(v => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? \"?\" + qs : \"\";\n    }\n  }\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nfunction useFetcher(_temp3) {\n  var _route$matches;\n  let {\n    key\n  } = _temp3 === void 0 ? {} : _temp3;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(UNSAFE_RouteContext);\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !fetcherData ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a FetchersContext\") : UNSAFE_invariant(false) : void 0;\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  // Fetcher key handling\n  // OK to call conditionally to feature detect `useId`\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let defaultKey = useIdImpl ? useIdImpl() : \"\";\n  let [fetcherKey, setFetcherKey] = React.useState(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  } else if (!fetcherKey) {\n    // We will only fall through here when `useId` is not available\n    setFetcherKey(getUniqueFetcherId());\n  }\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  // Fetcher additions\n  let load = React.useCallback((href, opts) => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href, opts);\n  }, [fetcherKey, routeId, router]);\n  let submitImpl = useSubmit();\n  let submit = React.useCallback((target, opts) => {\n    submitImpl(target, _extends({}, opts, {\n      navigate: false,\n      fetcherKey\n    }));\n  }, [fetcherKey, submitImpl]);\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n      return /*#__PURE__*/React.createElement(Form, _extends({}, props, {\n        navigate: false,\n        fetcherKey: fetcherKey,\n        ref: ref\n      }));\n    });\n    if (process.env.NODE_ENV !== \"production\") {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form: FetcherForm,\n    submit,\n    load\n  }, fetcher, {\n    data\n  }), [FetcherForm, submit, load, fetcher, data]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nfunction useFetchers() {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(_ref11 => {\n    let [key, fetcher] = _ref11;\n    return _extends({}, fetcher, {\n      key\n    });\n  });\n}\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration(_temp4) {\n  let {\n    getKey,\n    storageKey\n  } = _temp4 === void 0 ? {} : _temp4;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n  // Save positions on pagehide\n  usePageHide(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n    try {\n      sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    } catch (error) {\n      process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (\" + error + \").\") : void 0;\n    }\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches]));\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename = getKey && basename !== \"/\" ? (location, matches) => getKey( // Strip the basename to match useLocation()\n      _extends({}, location, {\n        pathname: stripBasename(location.pathname, basename) || location.pathname\n      }), matches) : getKey;\n      let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKeyWithoutBasename);\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction useBeforeUnload(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt(_ref12) {\n  let {\n    when,\n    message\n  } = _ref12;\n  let blocker = useBlocker(when);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(to, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  let vtContext = React.useContext(ViewTransitionContext);\n  !(vtContext != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" + \"Did you accidentally import `RouterProvider` from `react-router`?\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename\n  } = useDataRouterContext(DataRouterHook.useViewTransitionState);\n  let path = useResolvedPath(to, {\n    relative: opts.relative\n  });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\n  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;\n}\n//#endregion\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, RouterProvider, ScrollRestoration, FetchersContext as UNSAFE_FetchersContext, ViewTransitionContext as UNSAFE_ViewTransitionContext, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit, useViewTransitionState };\n//# sourceMappingURL=index.js.map\n","// src/subscribable.ts\nvar Subscribable = class {\n  constructor() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.subscribe = this.subscribe.bind(this);\n  }\n  subscribe(listener) {\n    this.listeners.add(listener);\n    this.onSubscribe();\n    return () => {\n      this.listeners.delete(listener);\n      this.onUnsubscribe();\n    };\n  }\n  hasListeners() {\n    return this.listeners.size > 0;\n  }\n  onSubscribe() {\n  }\n  onUnsubscribe() {\n  }\n};\nexport {\n  Subscribable\n};\n//# sourceMappingURL=subscribable.js.map","// src/timeoutManager.ts\nvar defaultTimeoutProvider = {\n  // We need the wrapper function syntax below instead of direct references to\n  // global setTimeout etc.\n  //\n  // BAD: `setTimeout: setTimeout`\n  // GOOD: `setTimeout: (cb, delay) => setTimeout(cb, delay)`\n  //\n  // If we use direct references here, then anything that wants to spy on or\n  // replace the global setTimeout (like tests) won't work since we'll already\n  // have a hard reference to the original implementation at the time when this\n  // file was imported.\n  setTimeout: (callback, delay) => setTimeout(callback, delay),\n  clearTimeout: (timeoutId) => clearTimeout(timeoutId),\n  setInterval: (callback, delay) => setInterval(callback, delay),\n  clearInterval: (intervalId) => clearInterval(intervalId)\n};\nvar TimeoutManager = class {\n  // We cannot have TimeoutManager<T> as we must instantiate it with a concrete\n  // type at app boot; and if we leave that type, then any new timer provider\n  // would need to support ReturnType<typeof setTimeout>, which is infeasible.\n  //\n  // We settle for type safety for the TimeoutProvider type, and accept that\n  // this class is unsafe internally to allow for extension.\n  #provider = defaultTimeoutProvider;\n  #providerCalled = false;\n  setTimeoutProvider(provider) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (this.#providerCalled && provider !== this.#provider) {\n        console.error(\n          `[timeoutManager]: Switching provider after calls to previous provider might result in unexpected behavior.`,\n          { previous: this.#provider, provider }\n        );\n      }\n    }\n    this.#provider = provider;\n    if (process.env.NODE_ENV !== \"production\") {\n      this.#providerCalled = false;\n    }\n  }\n  setTimeout(callback, delay) {\n    if (process.env.NODE_ENV !== \"production\") {\n      this.#providerCalled = true;\n    }\n    return this.#provider.setTimeout(callback, delay);\n  }\n  clearTimeout(timeoutId) {\n    this.#provider.clearTimeout(timeoutId);\n  }\n  setInterval(callback, delay) {\n    if (process.env.NODE_ENV !== \"production\") {\n      this.#providerCalled = true;\n    }\n    return this.#provider.setInterval(callback, delay);\n  }\n  clearInterval(intervalId) {\n    this.#provider.clearInterval(intervalId);\n  }\n};\nvar timeoutManager = new TimeoutManager();\nfunction systemSetTimeoutZero(callback) {\n  setTimeout(callback, 0);\n}\nexport {\n  TimeoutManager,\n  defaultTimeoutProvider,\n  systemSetTimeoutZero,\n  timeoutManager\n};\n//# sourceMappingURL=timeoutManager.js.map","// src/utils.ts\nimport { timeoutManager } from \"./timeoutManager.js\";\nvar isServer = typeof window === \"undefined\" || \"Deno\" in globalThis;\nfunction noop() {\n}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === \"function\" ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === \"number\" && value >= 0 && value !== Infinity;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction resolveStaleTime(staleTime, query) {\n  return typeof staleTime === \"function\" ? staleTime(query) : staleTime;\n}\nfunction resolveEnabled(enabled, query) {\n  return typeof enabled === \"function\" ? enabled(query) : enabled;\n}\nfunction matchQuery(filters, query) {\n  const {\n    type = \"all\",\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n  if (queryKey) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n  if (type !== \"all\") {\n    const isActive = query.isActive();\n    if (type === \"active\" && !isActive) {\n      return false;\n    }\n    if (type === \"inactive\" && isActive) {\n      return false;\n    }\n  }\n  if (typeof stale === \"boolean\" && query.isStale() !== stale) {\n    return false;\n  }\n  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  const { exact, status, predicate, mutationKey } = filters;\n  if (mutationKey) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n    if (exact) {\n      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n  if (status && mutation.state.status !== status) {\n    return false;\n  }\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = options?.queryKeyHashFn || hashKey;\n  return hashFn(queryKey);\n}\nfunction hashKey(queryKey) {\n  return JSON.stringify(\n    queryKey,\n    (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n      result[key] = val[key];\n      return result;\n    }, {}) : val\n  );\n}\nfunction partialMatchKey(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    return Object.keys(b).every((key) => partialMatchKey(a[key], b[key]));\n  }\n  return false;\n}\nvar hasOwn = Object.prototype.hasOwnProperty;\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n  const array = isPlainArray(a) && isPlainArray(b);\n  if (!array && !(isPlainObject(a) && isPlainObject(b))) return b;\n  const aItems = array ? a : Object.keys(a);\n  const aSize = aItems.length;\n  const bItems = array ? b : Object.keys(b);\n  const bSize = bItems.length;\n  const copy = array ? new Array(bSize) : {};\n  let equalItems = 0;\n  for (let i = 0; i < bSize; i++) {\n    const key = array ? i : bItems[i];\n    const aItem = a[key];\n    const bItem = b[key];\n    if (aItem === bItem) {\n      copy[key] = aItem;\n      if (array ? i < aSize : hasOwn.call(a, key)) equalItems++;\n      continue;\n    }\n    if (aItem === null || bItem === null || typeof aItem !== \"object\" || typeof bItem !== \"object\") {\n      copy[key] = bItem;\n      continue;\n    }\n    const v = replaceEqualDeep(aItem, bItem);\n    copy[key] = v;\n    if (v === aItem) equalItems++;\n  }\n  return aSize === bSize && equalItems === aSize ? a : copy;\n}\nfunction shallowEqualObjects(a, b) {\n  if (!b || Object.keys(a).length !== Object.keys(b).length) {\n    return false;\n  }\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n}\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n  const ctor = o.constructor;\n  if (ctor === void 0) {\n    return true;\n  }\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n  if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\n    return false;\n  }\n  if (Object.getPrototypeOf(o) !== Object.prototype) {\n    return false;\n  }\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction sleep(timeout) {\n  return new Promise((resolve) => {\n    timeoutManager.setTimeout(resolve, timeout);\n  });\n}\nfunction replaceData(prevData, data, options) {\n  if (typeof options.structuralSharing === \"function\") {\n    return options.structuralSharing(prevData, data);\n  } else if (options.structuralSharing !== false) {\n    if (process.env.NODE_ENV !== \"production\") {\n      try {\n        return replaceEqualDeep(prevData, data);\n      } catch (error) {\n        console.error(\n          `Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${options.queryHash}]: ${error}`\n        );\n        throw error;\n      }\n    }\n    return replaceEqualDeep(prevData, data);\n  }\n  return data;\n}\nfunction keepPreviousData(previousData) {\n  return previousData;\n}\nfunction addToEnd(items, item, max = 0) {\n  const newItems = [...items, item];\n  return max && newItems.length > max ? newItems.slice(1) : newItems;\n}\nfunction addToStart(items, item, max = 0) {\n  const newItems = [item, ...items];\n  return max && newItems.length > max ? newItems.slice(0, -1) : newItems;\n}\nvar skipToken = Symbol();\nfunction ensureQueryFn(options, fetchOptions) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (options.queryFn === skipToken) {\n      console.error(\n        `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`\n      );\n    }\n  }\n  if (!options.queryFn && fetchOptions?.initialPromise) {\n    return () => fetchOptions.initialPromise;\n  }\n  if (!options.queryFn || options.queryFn === skipToken) {\n    return () => Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`));\n  }\n  return options.queryFn;\n}\nfunction shouldThrowError(throwOnError, params) {\n  if (typeof throwOnError === \"function\") {\n    return throwOnError(...params);\n  }\n  return !!throwOnError;\n}\nexport {\n  addToEnd,\n  addToStart,\n  ensureQueryFn,\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  isPlainArray,\n  isPlainObject,\n  isServer,\n  isValidTimeout,\n  keepPreviousData,\n  matchMutation,\n  matchQuery,\n  noop,\n  partialMatchKey,\n  replaceData,\n  replaceEqualDeep,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  shouldThrowError,\n  skipToken,\n  sleep,\n  timeUntilStale\n};\n//# sourceMappingURL=utils.js.map","// src/focusManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar FocusManager = class extends Subscribable {\n  #focused;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onFocus) => {\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus();\n        window.addEventListener(\"visibilitychange\", listener, false);\n        return () => {\n          window.removeEventListener(\"visibilitychange\", listener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup((focused) => {\n      if (typeof focused === \"boolean\") {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n  setFocused(focused) {\n    const changed = this.#focused !== focused;\n    if (changed) {\n      this.#focused = focused;\n      this.onFocus();\n    }\n  }\n  onFocus() {\n    const isFocused = this.isFocused();\n    this.listeners.forEach((listener) => {\n      listener(isFocused);\n    });\n  }\n  isFocused() {\n    if (typeof this.#focused === \"boolean\") {\n      return this.#focused;\n    }\n    return globalThis.document?.visibilityState !== \"hidden\";\n  }\n};\nvar focusManager = new FocusManager();\nexport {\n  FocusManager,\n  focusManager\n};\n//# sourceMappingURL=focusManager.js.map","// src/notifyManager.ts\nimport { systemSetTimeoutZero } from \"./timeoutManager.js\";\nvar defaultScheduler = systemSetTimeoutZero;\nfunction createNotifyManager() {\n  let queue = [];\n  let transactions = 0;\n  let notifyFn = (callback) => {\n    callback();\n  };\n  let batchNotifyFn = (callback) => {\n    callback();\n  };\n  let scheduleFn = defaultScheduler;\n  const schedule = (callback) => {\n    if (transactions) {\n      queue.push(callback);\n    } else {\n      scheduleFn(() => {\n        notifyFn(callback);\n      });\n    }\n  };\n  const flush = () => {\n    const originalQueue = queue;\n    queue = [];\n    if (originalQueue.length) {\n      scheduleFn(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback);\n          });\n        });\n      });\n    }\n  };\n  return {\n    batch: (callback) => {\n      let result;\n      transactions++;\n      try {\n        result = callback();\n      } finally {\n        transactions--;\n        if (!transactions) {\n          flush();\n        }\n      }\n      return result;\n    },\n    /**\n     * All calls to the wrapped function will be batched.\n     */\n    batchCalls: (callback) => {\n      return (...args) => {\n        schedule(() => {\n          callback(...args);\n        });\n      };\n    },\n    schedule,\n    /**\n     * Use this method to set a custom notify function.\n     * This can be used to for example wrap notifications with `React.act` while running tests.\n     */\n    setNotifyFunction: (fn) => {\n      notifyFn = fn;\n    },\n    /**\n     * Use this method to set a custom function to batch notifications together into a single tick.\n     * By default React Query will use the batch function provided by ReactDOM or React Native.\n     */\n    setBatchNotifyFunction: (fn) => {\n      batchNotifyFn = fn;\n    },\n    setScheduler: (fn) => {\n      scheduleFn = fn;\n    }\n  };\n}\nvar notifyManager = createNotifyManager();\nexport {\n  createNotifyManager,\n  defaultScheduler,\n  notifyManager\n};\n//# sourceMappingURL=notifyManager.js.map","// src/onlineManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar OnlineManager = class extends Subscribable {\n  #online = true;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onOnline) => {\n      if (!isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true);\n        const offlineListener = () => onOnline(false);\n        window.addEventListener(\"online\", onlineListener, false);\n        window.addEventListener(\"offline\", offlineListener, false);\n        return () => {\n          window.removeEventListener(\"online\", onlineListener);\n          window.removeEventListener(\"offline\", offlineListener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup(this.setOnline.bind(this));\n  }\n  setOnline(online) {\n    const changed = this.#online !== online;\n    if (changed) {\n      this.#online = online;\n      this.listeners.forEach((listener) => {\n        listener(online);\n      });\n    }\n  }\n  isOnline() {\n    return this.#online;\n  }\n};\nvar onlineManager = new OnlineManager();\nexport {\n  OnlineManager,\n  onlineManager\n};\n//# sourceMappingURL=onlineManager.js.map","// src/retryer.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport { isServer, sleep } from \"./utils.js\";\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1e3 * 2 ** failureCount, 3e4);\n}\nfunction canFetch(networkMode) {\n  return (networkMode ?? \"online\") === \"online\" ? onlineManager.isOnline() : true;\n}\nvar CancelledError = class extends Error {\n  constructor(options) {\n    super(\"CancelledError\");\n    this.revert = options?.revert;\n    this.silent = options?.silent;\n  }\n};\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let continueFn;\n  const thenable = pendingThenable();\n  const isResolved = () => thenable.status !== \"pending\";\n  const cancel = (cancelOptions) => {\n    if (!isResolved()) {\n      const error = new CancelledError(cancelOptions);\n      reject(error);\n      config.onCancel?.(error);\n    }\n  };\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n  const canContinue = () => focusManager.isFocused() && (config.networkMode === \"always\" || onlineManager.isOnline()) && config.canRun();\n  const canStart = () => canFetch(config.networkMode) && config.canRun();\n  const resolve = (value) => {\n    if (!isResolved()) {\n      continueFn?.();\n      thenable.resolve(value);\n    }\n  };\n  const reject = (value) => {\n    if (!isResolved()) {\n      continueFn?.();\n      thenable.reject(value);\n    }\n  };\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        if (isResolved() || canContinue()) {\n          continueResolve(value);\n        }\n      };\n      config.onPause?.();\n    }).then(() => {\n      continueFn = void 0;\n      if (!isResolved()) {\n        config.onContinue?.();\n      }\n    });\n  };\n  const run = () => {\n    if (isResolved()) {\n      return;\n    }\n    let promiseOrValue;\n    const initialPromise = failureCount === 0 ? config.initialPromise : void 0;\n    try {\n      promiseOrValue = initialPromise ?? config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n    Promise.resolve(promiseOrValue).then(resolve).catch((error) => {\n      if (isResolved()) {\n        return;\n      }\n      const retry = config.retry ?? (isServer ? 0 : 3);\n      const retryDelay = config.retryDelay ?? defaultRetryDelay;\n      const delay = typeof retryDelay === \"function\" ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === \"number\" && failureCount < retry || typeof retry === \"function\" && retry(failureCount, error);\n      if (isRetryCancelled || !shouldRetry) {\n        reject(error);\n        return;\n      }\n      failureCount++;\n      config.onFail?.(failureCount, error);\n      sleep(delay).then(() => {\n        return canContinue() ? void 0 : pause();\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  };\n  return {\n    promise: thenable,\n    status: () => thenable.status,\n    cancel,\n    continue: () => {\n      continueFn?.();\n      return thenable;\n    },\n    cancelRetry,\n    continueRetry,\n    canStart,\n    start: () => {\n      if (canStart()) {\n        run();\n      } else {\n        pause().then(run);\n      }\n      return thenable;\n    }\n  };\n}\nexport {\n  CancelledError,\n  canFetch,\n  createRetryer,\n  isCancelledError\n};\n//# sourceMappingURL=retryer.js.map","// src/thenable.ts\nimport { noop } from \"./utils.js\";\nfunction pendingThenable() {\n  let resolve;\n  let reject;\n  const thenable = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  thenable.status = \"pending\";\n  thenable.catch(() => {\n  });\n  function finalize(data) {\n    Object.assign(thenable, data);\n    delete thenable.resolve;\n    delete thenable.reject;\n  }\n  thenable.resolve = (value) => {\n    finalize({\n      status: \"fulfilled\",\n      value\n    });\n    resolve(value);\n  };\n  thenable.reject = (reason) => {\n    finalize({\n      status: \"rejected\",\n      reason\n    });\n    reject(reason);\n  };\n  return thenable;\n}\nfunction tryResolveSync(promise) {\n  let data;\n  promise.then((result) => {\n    data = result;\n    return result;\n  }, noop)?.catch(noop);\n  if (data !== void 0) {\n    return { data };\n  }\n  return void 0;\n}\nexport {\n  pendingThenable,\n  tryResolveSync\n};\n//# sourceMappingURL=thenable.js.map","// src/removable.ts\nimport { timeoutManager } from \"./timeoutManager.js\";\nimport { isServer, isValidTimeout } from \"./utils.js\";\nvar Removable = class {\n  #gcTimeout;\n  destroy() {\n    this.clearGcTimeout();\n  }\n  scheduleGc() {\n    this.clearGcTimeout();\n    if (isValidTimeout(this.gcTime)) {\n      this.#gcTimeout = timeoutManager.setTimeout(() => {\n        this.optionalRemove();\n      }, this.gcTime);\n    }\n  }\n  updateGcTime(newGcTime) {\n    this.gcTime = Math.max(\n      this.gcTime || 0,\n      newGcTime ?? (isServer ? Infinity : 5 * 60 * 1e3)\n    );\n  }\n  clearGcTimeout() {\n    if (this.#gcTimeout) {\n      timeoutManager.clearTimeout(this.#gcTimeout);\n      this.#gcTimeout = void 0;\n    }\n  }\n};\nexport {\n  Removable\n};\n//# sourceMappingURL=removable.js.map","// src/query.ts\nimport {\n  ensureQueryFn,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  skipToken,\n  timeUntilStale\n} from \"./utils.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { CancelledError, canFetch, createRetryer } from \"./retryer.js\";\nimport { Removable } from \"./removable.js\";\nvar Query = class extends Removable {\n  #initialState;\n  #revertState;\n  #cache;\n  #client;\n  #retryer;\n  #defaultOptions;\n  #abortSignalConsumed;\n  constructor(config) {\n    super();\n    this.#abortSignalConsumed = false;\n    this.#defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.#client = config.client;\n    this.#cache = this.#client.getQueryCache();\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.#initialState = getDefaultState(this.options);\n    this.state = config.state ?? this.#initialState;\n    this.scheduleGc();\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  get promise() {\n    return this.#retryer?.promise;\n  }\n  setOptions(options) {\n    this.options = { ...this.#defaultOptions, ...options };\n    this.updateGcTime(this.options.gcTime);\n    if (this.state && this.state.data === void 0) {\n      const defaultState = getDefaultState(this.options);\n      if (defaultState.data !== void 0) {\n        this.setData(defaultState.data, {\n          updatedAt: defaultState.dataUpdatedAt,\n          manual: true\n        });\n        this.#initialState = defaultState;\n      }\n    }\n  }\n  optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === \"idle\") {\n      this.#cache.remove(this);\n    }\n  }\n  setData(newData, options) {\n    const data = replaceData(this.state.data, newData, this.options);\n    this.#dispatch({\n      data,\n      type: \"success\",\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual\n    });\n    return data;\n  }\n  setState(state, setStateOptions) {\n    this.#dispatch({ type: \"setState\", state, setStateOptions });\n  }\n  cancel(options) {\n    const promise = this.#retryer?.promise;\n    this.#retryer?.cancel(options);\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n  }\n  destroy() {\n    super.destroy();\n    this.cancel({ silent: true });\n  }\n  reset() {\n    this.destroy();\n    this.setState(this.#initialState);\n  }\n  isActive() {\n    return this.observers.some(\n      (observer) => resolveEnabled(observer.options.enabled, this) !== false\n    );\n  }\n  isDisabled() {\n    if (this.getObserversCount() > 0) {\n      return !this.isActive();\n    }\n    return this.options.queryFn === skipToken || this.state.dataUpdateCount + this.state.errorUpdateCount === 0;\n  }\n  isStatic() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => resolveStaleTime(observer.options.staleTime, this) === \"static\"\n      );\n    }\n    return false;\n  }\n  isStale() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => observer.getCurrentResult().isStale\n      );\n    }\n    return this.state.data === void 0 || this.state.isInvalidated;\n  }\n  isStaleByTime(staleTime = 0) {\n    if (this.state.data === void 0) {\n      return true;\n    }\n    if (staleTime === \"static\") {\n      return false;\n    }\n    if (this.state.isInvalidated) {\n      return true;\n    }\n    return !timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  }\n  onFocus() {\n    const observer = this.observers.find((x) => x.shouldFetchOnWindowFocus());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  onOnline() {\n    const observer = this.observers.find((x) => x.shouldFetchOnReconnect());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer);\n      this.clearGcTimeout();\n      this.#cache.notify({ type: \"observerAdded\", query: this, observer });\n    }\n  }\n  removeObserver(observer) {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter((x) => x !== observer);\n      if (!this.observers.length) {\n        if (this.#retryer) {\n          if (this.#abortSignalConsumed) {\n            this.#retryer.cancel({ revert: true });\n          } else {\n            this.#retryer.cancelRetry();\n          }\n        }\n        this.scheduleGc();\n      }\n      this.#cache.notify({ type: \"observerRemoved\", query: this, observer });\n    }\n  }\n  getObserversCount() {\n    return this.observers.length;\n  }\n  invalidate() {\n    if (!this.state.isInvalidated) {\n      this.#dispatch({ type: \"invalidate\" });\n    }\n  }\n  async fetch(options, fetchOptions) {\n    if (this.state.fetchStatus !== \"idle\" && // If the promise in the retyer is already rejected, we have to definitely\n    // re-start the fetch; there is a chance that the query is still in a\n    // pending state when that happens\n    this.#retryer?.status() !== \"rejected\") {\n      if (this.state.data !== void 0 && fetchOptions?.cancelRefetch) {\n        this.cancel({ silent: true });\n      } else if (this.#retryer) {\n        this.#retryer.continueRetry();\n        return this.#retryer.promise;\n      }\n    }\n    if (options) {\n      this.setOptions(options);\n    }\n    if (!this.options.queryFn) {\n      const observer = this.observers.find((x) => x.options.queryFn);\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!Array.isArray(this.options.queryKey)) {\n        console.error(\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`\n        );\n      }\n    }\n    const abortController = new AbortController();\n    const addSignalProperty = (object) => {\n      Object.defineProperty(object, \"signal\", {\n        enumerable: true,\n        get: () => {\n          this.#abortSignalConsumed = true;\n          return abortController.signal;\n        }\n      });\n    };\n    const fetchFn = () => {\n      const queryFn = ensureQueryFn(this.options, fetchOptions);\n      const createQueryFnContext = () => {\n        const queryFnContext2 = {\n          client: this.#client,\n          queryKey: this.queryKey,\n          meta: this.meta\n        };\n        addSignalProperty(queryFnContext2);\n        return queryFnContext2;\n      };\n      const queryFnContext = createQueryFnContext();\n      this.#abortSignalConsumed = false;\n      if (this.options.persister) {\n        return this.options.persister(\n          queryFn,\n          queryFnContext,\n          this\n        );\n      }\n      return queryFn(queryFnContext);\n    };\n    const createFetchContext = () => {\n      const context2 = {\n        fetchOptions,\n        options: this.options,\n        queryKey: this.queryKey,\n        client: this.#client,\n        state: this.state,\n        fetchFn\n      };\n      addSignalProperty(context2);\n      return context2;\n    };\n    const context = createFetchContext();\n    this.options.behavior?.onFetch(context, this);\n    this.#revertState = this.state;\n    if (this.state.fetchStatus === \"idle\" || this.state.fetchMeta !== context.fetchOptions?.meta) {\n      this.#dispatch({ type: \"fetch\", meta: context.fetchOptions?.meta });\n    }\n    this.#retryer = createRetryer({\n      initialPromise: fetchOptions?.initialPromise,\n      fn: context.fetchFn,\n      onCancel: (error) => {\n        if (error instanceof CancelledError && error.revert) {\n          this.setState({\n            ...this.#revertState,\n            fetchStatus: \"idle\"\n          });\n        }\n        abortController.abort();\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue: () => {\n        this.#dispatch({ type: \"continue\" });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n      canRun: () => true\n    });\n    try {\n      const data = await this.#retryer.start();\n      if (data === void 0) {\n        if (process.env.NODE_ENV !== \"production\") {\n          console.error(\n            `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`\n          );\n        }\n        throw new Error(`${this.queryHash} data is undefined`);\n      }\n      this.setData(data);\n      this.#cache.config.onSuccess?.(data, this);\n      this.#cache.config.onSettled?.(\n        data,\n        this.state.error,\n        this\n      );\n      return data;\n    } catch (error) {\n      if (error instanceof CancelledError) {\n        if (error.silent) {\n          return this.#retryer.promise;\n        } else if (error.revert) {\n          if (this.state.data === void 0) {\n            throw error;\n          }\n          return this.state.data;\n        }\n      }\n      this.#dispatch({\n        type: \"error\",\n        error\n      });\n      this.#cache.config.onError?.(\n        error,\n        this\n      );\n      this.#cache.config.onSettled?.(\n        this.state.data,\n        error,\n        this\n      );\n      throw error;\n    } finally {\n      this.scheduleGc();\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            fetchStatus: \"paused\"\n          };\n        case \"continue\":\n          return {\n            ...state,\n            fetchStatus: \"fetching\"\n          };\n        case \"fetch\":\n          return {\n            ...state,\n            ...fetchState(state.data, this.options),\n            fetchMeta: action.meta ?? null\n          };\n        case \"success\":\n          const newState = {\n            ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: \"success\",\n            ...!action.manual && {\n              fetchStatus: \"idle\",\n              fetchFailureCount: 0,\n              fetchFailureReason: null\n            }\n          };\n          this.#revertState = action.manual ? newState : void 0;\n          return newState;\n        case \"error\":\n          const error = action.error;\n          return {\n            ...state,\n            error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: \"idle\",\n            status: \"error\"\n          };\n        case \"invalidate\":\n          return {\n            ...state,\n            isInvalidated: true\n          };\n        case \"setState\":\n          return {\n            ...state,\n            ...action.state\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onQueryUpdate();\n      });\n      this.#cache.notify({ query: this, type: \"updated\", action });\n    });\n  }\n};\nfunction fetchState(data, options) {\n  return {\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchStatus: canFetch(options.networkMode) ? \"fetching\" : \"paused\",\n    ...data === void 0 && {\n      error: null,\n      status: \"pending\"\n    }\n  };\n}\nfunction getDefaultState(options) {\n  const data = typeof options.initialData === \"function\" ? options.initialData() : options.initialData;\n  const hasData = data !== void 0;\n  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === \"function\" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? \"success\" : \"pending\",\n    fetchStatus: \"idle\"\n  };\n}\nexport {\n  Query,\n  fetchState\n};\n//# sourceMappingURL=query.js.map","// src/infiniteQueryBehavior.ts\nimport { addToEnd, addToStart, ensureQueryFn } from \"./utils.js\";\nfunction infiniteQueryBehavior(pages) {\n  return {\n    onFetch: (context, query) => {\n      const options = context.options;\n      const direction = context.fetchOptions?.meta?.fetchMore?.direction;\n      const oldPages = context.state.data?.pages || [];\n      const oldPageParams = context.state.data?.pageParams || [];\n      let result = { pages: [], pageParams: [] };\n      let currentPage = 0;\n      const fetchFn = async () => {\n        let cancelled = false;\n        const addSignalProperty = (object) => {\n          Object.defineProperty(object, \"signal\", {\n            enumerable: true,\n            get: () => {\n              if (context.signal.aborted) {\n                cancelled = true;\n              } else {\n                context.signal.addEventListener(\"abort\", () => {\n                  cancelled = true;\n                });\n              }\n              return context.signal;\n            }\n          });\n        };\n        const queryFn = ensureQueryFn(context.options, context.fetchOptions);\n        const fetchPage = async (data, param, previous) => {\n          if (cancelled) {\n            return Promise.reject();\n          }\n          if (param == null && data.pages.length) {\n            return Promise.resolve(data);\n          }\n          const createQueryFnContext = () => {\n            const queryFnContext2 = {\n              client: context.client,\n              queryKey: context.queryKey,\n              pageParam: param,\n              direction: previous ? \"backward\" : \"forward\",\n              meta: context.options.meta\n            };\n            addSignalProperty(queryFnContext2);\n            return queryFnContext2;\n          };\n          const queryFnContext = createQueryFnContext();\n          const page = await queryFn(queryFnContext);\n          const { maxPages } = context.options;\n          const addTo = previous ? addToStart : addToEnd;\n          return {\n            pages: addTo(data.pages, page, maxPages),\n            pageParams: addTo(data.pageParams, param, maxPages)\n          };\n        };\n        if (direction && oldPages.length) {\n          const previous = direction === \"backward\";\n          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam;\n          const oldData = {\n            pages: oldPages,\n            pageParams: oldPageParams\n          };\n          const param = pageParamFn(options, oldData);\n          result = await fetchPage(oldData, param, previous);\n        } else {\n          const remainingPages = pages ?? oldPages.length;\n          do {\n            const param = currentPage === 0 ? oldPageParams[0] ?? options.initialPageParam : getNextPageParam(options, result);\n            if (currentPage > 0 && param == null) {\n              break;\n            }\n            result = await fetchPage(result, param);\n            currentPage++;\n          } while (currentPage < remainingPages);\n        }\n        return result;\n      };\n      if (context.options.persister) {\n        context.fetchFn = () => {\n          return context.options.persister?.(\n            fetchFn,\n            {\n              client: context.client,\n              queryKey: context.queryKey,\n              meta: context.options.meta,\n              signal: context.signal\n            },\n            query\n          );\n        };\n      } else {\n        context.fetchFn = fetchFn;\n      }\n    }\n  };\n}\nfunction getNextPageParam(options, { pages, pageParams }) {\n  const lastIndex = pages.length - 1;\n  return pages.length > 0 ? options.getNextPageParam(\n    pages[lastIndex],\n    pages,\n    pageParams[lastIndex],\n    pageParams\n  ) : void 0;\n}\nfunction getPreviousPageParam(options, { pages, pageParams }) {\n  return pages.length > 0 ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams) : void 0;\n}\nfunction hasNextPage(options, data) {\n  if (!data) return false;\n  return getNextPageParam(options, data) != null;\n}\nfunction hasPreviousPage(options, data) {\n  if (!data || !options.getPreviousPageParam) return false;\n  return getPreviousPageParam(options, data) != null;\n}\nexport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior\n};\n//# sourceMappingURL=infiniteQueryBehavior.js.map","// src/mutation.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Removable } from \"./removable.js\";\nimport { createRetryer } from \"./retryer.js\";\nvar Mutation = class extends Removable {\n  #observers;\n  #mutationCache;\n  #retryer;\n  constructor(config) {\n    super();\n    this.mutationId = config.mutationId;\n    this.#mutationCache = config.mutationCache;\n    this.#observers = [];\n    this.state = config.state || getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n  setOptions(options) {\n    this.options = options;\n    this.updateGcTime(this.options.gcTime);\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  addObserver(observer) {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer);\n      this.clearGcTimeout();\n      this.#mutationCache.notify({\n        type: \"observerAdded\",\n        mutation: this,\n        observer\n      });\n    }\n  }\n  removeObserver(observer) {\n    this.#observers = this.#observers.filter((x) => x !== observer);\n    this.scheduleGc();\n    this.#mutationCache.notify({\n      type: \"observerRemoved\",\n      mutation: this,\n      observer\n    });\n  }\n  optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === \"pending\") {\n        this.scheduleGc();\n      } else {\n        this.#mutationCache.remove(this);\n      }\n    }\n  }\n  continue() {\n    return this.#retryer?.continue() ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n    this.execute(this.state.variables);\n  }\n  async execute(variables) {\n    const onContinue = () => {\n      this.#dispatch({ type: \"continue\" });\n    };\n    this.#retryer = createRetryer({\n      fn: () => {\n        if (!this.options.mutationFn) {\n          return Promise.reject(new Error(\"No mutationFn found\"));\n        }\n        return this.options.mutationFn(variables);\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue,\n      retry: this.options.retry ?? 0,\n      retryDelay: this.options.retryDelay,\n      networkMode: this.options.networkMode,\n      canRun: () => this.#mutationCache.canRun(this)\n    });\n    const restored = this.state.status === \"pending\";\n    const isPaused = !this.#retryer.canStart();\n    try {\n      if (restored) {\n        onContinue();\n      } else {\n        this.#dispatch({ type: \"pending\", variables, isPaused });\n        await this.#mutationCache.config.onMutate?.(\n          variables,\n          this\n        );\n        const context = await this.options.onMutate?.(variables);\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: \"pending\",\n            context,\n            variables,\n            isPaused\n          });\n        }\n      }\n      const data = await this.#retryer.start();\n      await this.#mutationCache.config.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSuccess?.(data, variables, this.state.context);\n      await this.#mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSettled?.(data, null, variables, this.state.context);\n      this.#dispatch({ type: \"success\", data });\n      return data;\n    } catch (error) {\n      try {\n        await this.#mutationCache.config.onError?.(\n          error,\n          variables,\n          this.state.context,\n          this\n        );\n        await this.options.onError?.(\n          error,\n          variables,\n          this.state.context\n        );\n        await this.#mutationCache.config.onSettled?.(\n          void 0,\n          error,\n          this.state.variables,\n          this.state.context,\n          this\n        );\n        await this.options.onSettled?.(\n          void 0,\n          error,\n          variables,\n          this.state.context\n        );\n        throw error;\n      } finally {\n        this.#dispatch({ type: \"error\", error });\n      }\n    } finally {\n      this.#mutationCache.runNext(this);\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            isPaused: true\n          };\n        case \"continue\":\n          return {\n            ...state,\n            isPaused: false\n          };\n        case \"pending\":\n          return {\n            ...state,\n            context: action.context,\n            data: void 0,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: action.isPaused,\n            status: \"pending\",\n            variables: action.variables,\n            submittedAt: Date.now()\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: \"success\",\n            isPaused: false\n          };\n        case \"error\":\n          return {\n            ...state,\n            data: void 0,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: \"error\"\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onMutationUpdate(action);\n      });\n      this.#mutationCache.notify({\n        mutation: this,\n        type: \"updated\",\n        action\n      });\n    });\n  }\n};\nfunction getDefaultState() {\n  return {\n    context: void 0,\n    data: void 0,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: \"idle\",\n    variables: void 0,\n    submittedAt: 0\n  };\n}\nexport {\n  Mutation,\n  getDefaultState\n};\n//# sourceMappingURL=mutation.js.map","// src/mutationCache.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Mutation } from \"./mutation.js\";\nimport { matchMutation, noop } from \"./utils.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar MutationCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#mutations = /* @__PURE__ */ new Set();\n    this.#scopes = /* @__PURE__ */ new Map();\n    this.#mutationId = 0;\n  }\n  #mutations;\n  #scopes;\n  #mutationId;\n  build(client, options, state) {\n    const mutation = new Mutation({\n      mutationCache: this,\n      mutationId: ++this.#mutationId,\n      options: client.defaultMutationOptions(options),\n      state\n    });\n    this.add(mutation);\n    return mutation;\n  }\n  add(mutation) {\n    this.#mutations.add(mutation);\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const scopedMutations = this.#scopes.get(scope);\n      if (scopedMutations) {\n        scopedMutations.push(mutation);\n      } else {\n        this.#scopes.set(scope, [mutation]);\n      }\n    }\n    this.notify({ type: \"added\", mutation });\n  }\n  remove(mutation) {\n    if (this.#mutations.delete(mutation)) {\n      const scope = scopeFor(mutation);\n      if (typeof scope === \"string\") {\n        const scopedMutations = this.#scopes.get(scope);\n        if (scopedMutations) {\n          if (scopedMutations.length > 1) {\n            const index = scopedMutations.indexOf(mutation);\n            if (index !== -1) {\n              scopedMutations.splice(index, 1);\n            }\n          } else if (scopedMutations[0] === mutation) {\n            this.#scopes.delete(scope);\n          }\n        }\n      }\n    }\n    this.notify({ type: \"removed\", mutation });\n  }\n  canRun(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const mutationsWithSameScope = this.#scopes.get(scope);\n      const firstPendingMutation = mutationsWithSameScope?.find(\n        (m) => m.state.status === \"pending\"\n      );\n      return !firstPendingMutation || firstPendingMutation === mutation;\n    } else {\n      return true;\n    }\n  }\n  runNext(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const foundMutation = this.#scopes.get(scope)?.find((m) => m !== mutation && m.state.isPaused);\n      return foundMutation?.continue() ?? Promise.resolve();\n    } else {\n      return Promise.resolve();\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.#mutations.forEach((mutation) => {\n        this.notify({ type: \"removed\", mutation });\n      });\n      this.#mutations.clear();\n      this.#scopes.clear();\n    });\n  }\n  getAll() {\n    return Array.from(this.#mutations);\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (mutation) => matchMutation(defaultedFilters, mutation)\n    );\n  }\n  findAll(filters = {}) {\n    return this.getAll().filter((mutation) => matchMutation(filters, mutation));\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  resumePausedMutations() {\n    const pausedMutations = this.getAll().filter((x) => x.state.isPaused);\n    return notifyManager.batch(\n      () => Promise.all(\n        pausedMutations.map((mutation) => mutation.continue().catch(noop))\n      )\n    );\n  }\n};\nfunction scopeFor(mutation) {\n  return mutation.options.scope?.id;\n}\nexport {\n  MutationCache\n};\n//# sourceMappingURL=mutationCache.js.map","// src/queryCache.ts\nimport { hashQueryKeyByOptions, matchQuery } from \"./utils.js\";\nimport { Query } from \"./query.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar QueryCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#queries = /* @__PURE__ */ new Map();\n  }\n  #queries;\n  build(client, options, state) {\n    const queryKey = options.queryKey;\n    const queryHash = options.queryHash ?? hashQueryKeyByOptions(queryKey, options);\n    let query = this.get(queryHash);\n    if (!query) {\n      query = new Query({\n        client,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n    return query;\n  }\n  add(query) {\n    if (!this.#queries.has(query.queryHash)) {\n      this.#queries.set(query.queryHash, query);\n      this.notify({\n        type: \"added\",\n        query\n      });\n    }\n  }\n  remove(query) {\n    const queryInMap = this.#queries.get(query.queryHash);\n    if (queryInMap) {\n      query.destroy();\n      if (queryInMap === query) {\n        this.#queries.delete(query.queryHash);\n      }\n      this.notify({ type: \"removed\", query });\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        this.remove(query);\n      });\n    });\n  }\n  get(queryHash) {\n    return this.#queries.get(queryHash);\n  }\n  getAll() {\n    return [...this.#queries.values()];\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (query) => matchQuery(defaultedFilters, query)\n    );\n  }\n  findAll(filters = {}) {\n    const queries = this.getAll();\n    return Object.keys(filters).length > 0 ? queries.filter((query) => matchQuery(filters, query)) : queries;\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  onFocus() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onFocus();\n      });\n    });\n  }\n  onOnline() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onOnline();\n      });\n    });\n  }\n};\nexport {\n  QueryCache\n};\n//# sourceMappingURL=queryCache.js.map","// src/queryClient.ts\nimport {\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  noop,\n  partialMatchKey,\n  resolveStaleTime,\n  skipToken\n} from \"./utils.js\";\nimport { QueryCache } from \"./queryCache.js\";\nimport { MutationCache } from \"./mutationCache.js\";\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { infiniteQueryBehavior } from \"./infiniteQueryBehavior.js\";\nvar QueryClient = class {\n  #queryCache;\n  #mutationCache;\n  #defaultOptions;\n  #queryDefaults;\n  #mutationDefaults;\n  #mountCount;\n  #unsubscribeFocus;\n  #unsubscribeOnline;\n  constructor(config = {}) {\n    this.#queryCache = config.queryCache || new QueryCache();\n    this.#mutationCache = config.mutationCache || new MutationCache();\n    this.#defaultOptions = config.defaultOptions || {};\n    this.#queryDefaults = /* @__PURE__ */ new Map();\n    this.#mutationDefaults = /* @__PURE__ */ new Map();\n    this.#mountCount = 0;\n  }\n  mount() {\n    this.#mountCount++;\n    if (this.#mountCount !== 1) return;\n    this.#unsubscribeFocus = focusManager.subscribe(async (focused) => {\n      if (focused) {\n        await this.resumePausedMutations();\n        this.#queryCache.onFocus();\n      }\n    });\n    this.#unsubscribeOnline = onlineManager.subscribe(async (online) => {\n      if (online) {\n        await this.resumePausedMutations();\n        this.#queryCache.onOnline();\n      }\n    });\n  }\n  unmount() {\n    this.#mountCount--;\n    if (this.#mountCount !== 0) return;\n    this.#unsubscribeFocus?.();\n    this.#unsubscribeFocus = void 0;\n    this.#unsubscribeOnline?.();\n    this.#unsubscribeOnline = void 0;\n  }\n  isFetching(filters) {\n    return this.#queryCache.findAll({ ...filters, fetchStatus: \"fetching\" }).length;\n  }\n  isMutating(filters) {\n    return this.#mutationCache.findAll({ ...filters, status: \"pending\" }).length;\n  }\n  /**\n   * Imperative (non-reactive) way to retrieve data for a QueryKey.\n   * Should only be used in callbacks or functions where reading the latest data is necessary, e.g. for optimistic updates.\n   *\n   * Hint: Do not use this function inside a component, because it won't receive updates.\n   * Use `useQuery` to create a `QueryObserver` that subscribes to changes.\n   */\n  getQueryData(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(options.queryHash)?.state.data;\n  }\n  ensureQueryData(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    const query = this.#queryCache.build(this, defaultedOptions);\n    const cachedData = query.state.data;\n    if (cachedData === void 0) {\n      return this.fetchQuery(options);\n    }\n    if (options.revalidateIfStale && query.isStaleByTime(resolveStaleTime(defaultedOptions.staleTime, query))) {\n      void this.prefetchQuery(defaultedOptions);\n    }\n    return Promise.resolve(cachedData);\n  }\n  getQueriesData(filters) {\n    return this.#queryCache.findAll(filters).map(({ queryKey, state }) => {\n      const data = state.data;\n      return [queryKey, data];\n    });\n  }\n  setQueryData(queryKey, updater, options) {\n    const defaultedOptions = this.defaultQueryOptions({ queryKey });\n    const query = this.#queryCache.get(\n      defaultedOptions.queryHash\n    );\n    const prevData = query?.state.data;\n    const data = functionalUpdate(updater, prevData);\n    if (data === void 0) {\n      return void 0;\n    }\n    return this.#queryCache.build(this, defaultedOptions).setData(data, { ...options, manual: true });\n  }\n  setQueriesData(filters, updater, options) {\n    return notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map(({ queryKey }) => [\n        queryKey,\n        this.setQueryData(queryKey, updater, options)\n      ])\n    );\n  }\n  getQueryState(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(\n      options.queryHash\n    )?.state;\n  }\n  removeQueries(filters) {\n    const queryCache = this.#queryCache;\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        queryCache.remove(query);\n      });\n    });\n  }\n  resetQueries(filters, options) {\n    const queryCache = this.#queryCache;\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        query.reset();\n      });\n      return this.refetchQueries(\n        {\n          type: \"active\",\n          ...filters\n        },\n        options\n      );\n    });\n  }\n  cancelQueries(filters, cancelOptions = {}) {\n    const defaultedCancelOptions = { revert: true, ...cancelOptions };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map((query) => query.cancel(defaultedCancelOptions))\n    );\n    return Promise.all(promises).then(noop).catch(noop);\n  }\n  invalidateQueries(filters, options = {}) {\n    return notifyManager.batch(() => {\n      this.#queryCache.findAll(filters).forEach((query) => {\n        query.invalidate();\n      });\n      if (filters?.refetchType === \"none\") {\n        return Promise.resolve();\n      }\n      return this.refetchQueries(\n        {\n          ...filters,\n          type: filters?.refetchType ?? filters?.type ?? \"active\"\n        },\n        options\n      );\n    });\n  }\n  refetchQueries(filters, options = {}) {\n    const fetchOptions = {\n      ...options,\n      cancelRefetch: options.cancelRefetch ?? true\n    };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).filter((query) => !query.isDisabled() && !query.isStatic()).map((query) => {\n        let promise = query.fetch(void 0, fetchOptions);\n        if (!fetchOptions.throwOnError) {\n          promise = promise.catch(noop);\n        }\n        return query.state.fetchStatus === \"paused\" ? Promise.resolve() : promise;\n      })\n    );\n    return Promise.all(promises).then(noop);\n  }\n  fetchQuery(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    if (defaultedOptions.retry === void 0) {\n      defaultedOptions.retry = false;\n    }\n    const query = this.#queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(\n      resolveStaleTime(defaultedOptions.staleTime, query)\n    ) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  }\n  prefetchQuery(options) {\n    return this.fetchQuery(options).then(noop).catch(noop);\n  }\n  fetchInfiniteQuery(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.fetchQuery(options);\n  }\n  prefetchInfiniteQuery(options) {\n    return this.fetchInfiniteQuery(options).then(noop).catch(noop);\n  }\n  ensureInfiniteQueryData(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.ensureQueryData(options);\n  }\n  resumePausedMutations() {\n    if (onlineManager.isOnline()) {\n      return this.#mutationCache.resumePausedMutations();\n    }\n    return Promise.resolve();\n  }\n  getQueryCache() {\n    return this.#queryCache;\n  }\n  getMutationCache() {\n    return this.#mutationCache;\n  }\n  getDefaultOptions() {\n    return this.#defaultOptions;\n  }\n  setDefaultOptions(options) {\n    this.#defaultOptions = options;\n  }\n  setQueryDefaults(queryKey, options) {\n    this.#queryDefaults.set(hashKey(queryKey), {\n      queryKey,\n      defaultOptions: options\n    });\n  }\n  getQueryDefaults(queryKey) {\n    const defaults = [...this.#queryDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(queryKey, queryDefault.queryKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  setMutationDefaults(mutationKey, options) {\n    this.#mutationDefaults.set(hashKey(mutationKey), {\n      mutationKey,\n      defaultOptions: options\n    });\n  }\n  getMutationDefaults(mutationKey) {\n    const defaults = [...this.#mutationDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(mutationKey, queryDefault.mutationKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  defaultQueryOptions(options) {\n    if (options._defaulted) {\n      return options;\n    }\n    const defaultedOptions = {\n      ...this.#defaultOptions.queries,\n      ...this.getQueryDefaults(options.queryKey),\n      ...options,\n      _defaulted: true\n    };\n    if (!defaultedOptions.queryHash) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(\n        defaultedOptions.queryKey,\n        defaultedOptions\n      );\n    }\n    if (defaultedOptions.refetchOnReconnect === void 0) {\n      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== \"always\";\n    }\n    if (defaultedOptions.throwOnError === void 0) {\n      defaultedOptions.throwOnError = !!defaultedOptions.suspense;\n    }\n    if (!defaultedOptions.networkMode && defaultedOptions.persister) {\n      defaultedOptions.networkMode = \"offlineFirst\";\n    }\n    if (defaultedOptions.queryFn === skipToken) {\n      defaultedOptions.enabled = false;\n    }\n    return defaultedOptions;\n  }\n  defaultMutationOptions(options) {\n    if (options?._defaulted) {\n      return options;\n    }\n    return {\n      ...this.#defaultOptions.mutations,\n      ...options?.mutationKey && this.getMutationDefaults(options.mutationKey),\n      ...options,\n      _defaulted: true\n    };\n  }\n  clear() {\n    this.#queryCache.clear();\n    this.#mutationCache.clear();\n  }\n};\nexport {\n  QueryClient\n};\n//# sourceMappingURL=queryClient.js.map","\"use client\";\n\n// src/QueryClientProvider.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar QueryClientContext = React.createContext(\n  void 0\n);\nvar useQueryClient = (queryClient) => {\n  const client = React.useContext(QueryClientContext);\n  if (queryClient) {\n    return queryClient;\n  }\n  if (!client) {\n    throw new Error(\"No QueryClient set, use QueryClientProvider to set one\");\n  }\n  return client;\n};\nvar QueryClientProvider = ({\n  client,\n  children\n}) => {\n  React.useEffect(() => {\n    client.mount();\n    return () => {\n      client.unmount();\n    };\n  }, [client]);\n  return /* @__PURE__ */ jsx(QueryClientContext.Provider, { value: client, children });\n};\nexport {\n  QueryClientContext,\n  QueryClientProvider,\n  useQueryClient\n};\n//# sourceMappingURL=QueryClientProvider.js.map","/* global Map:readonly, Set:readonly, ArrayBuffer:readonly */\n\nvar hasElementType = typeof Element !== 'undefined';\nvar hasMap = typeof Map === 'function';\nvar hasSet = typeof Set === 'function';\nvar hasArrayBuffer = typeof ArrayBuffer === 'function' && !!ArrayBuffer.isView;\n\n// Note: We **don't** need `envHasBigInt64Array` in fde es6/index.js\n\nfunction equal(a, b) {\n  // START: fast-deep-equal es6/index.js 3.1.3\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    // START: Modifications:\n    // 1. Extra `has<Type> &&` helpers in initial condition allow es6 code\n    //    to co-exist with es5.\n    // 2. Replace `for of` with es5 compliant iteration using `for`.\n    //    Basically, take:\n    //\n    //    ```js\n    //    for (i of a.entries())\n    //      if (!b.has(i[0])) return false;\n    //    ```\n    //\n    //    ... and convert to:\n    //\n    //    ```js\n    //    it = a.entries();\n    //    while (!(i = it.next()).done)\n    //      if (!b.has(i.value[0])) return false;\n    //    ```\n    //\n    //    **Note**: `i` access switches to `i.value`.\n    var it;\n    if (hasMap && (a instanceof Map) && (b instanceof Map)) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!b.has(i.value[0])) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!equal(i.value[1], b.get(i.value[0]))) return false;\n      return true;\n    }\n\n    if (hasSet && (a instanceof Set) && (b instanceof Set)) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!b.has(i.value[0])) return false;\n      return true;\n    }\n    // END: Modifications\n\n    if (hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (a[i] !== b[i]) return false;\n      return true;\n    }\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    // START: Modifications:\n    // Apply guards for `Object.create(null)` handling. See:\n    // - https://github.com/FormidableLabs/react-fast-compare/issues/64\n    // - https://github.com/epoberezkin/fast-deep-equal/issues/49\n    if (a.valueOf !== Object.prototype.valueOf && typeof a.valueOf === 'function' && typeof b.valueOf === 'function') return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString && typeof a.toString === 'function' && typeof b.toString === 'function') return a.toString() === b.toString();\n    // END: Modifications\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    // END: fast-deep-equal\n\n    // START: react-fast-compare\n    // custom handling for DOM elements\n    if (hasElementType && a instanceof Element) return false;\n\n    // custom handling for React/Preact\n    for (i = length; i-- !== 0;) {\n      if ((keys[i] === '_owner' || keys[i] === '__v' || keys[i] === '__o') && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner\n        // Preact-specific: avoid traversing Preact elements' __v and __o\n        //    __v = $_original / $_vnode\n        //    __o = $_owner\n        // These properties contain circular references and are not needed when\n        // comparing the actual elements (and not their owners)\n        // .$$typeof and ._store on just reasonable markers of elements\n\n        continue;\n      }\n\n      // all other properties should be traversed as usual\n      if (!equal(a[keys[i]], b[keys[i]])) return false;\n    }\n    // END: react-fast-compare\n\n    // START: fast-deep-equal\n    return true;\n  }\n\n  return a !== a && b !== b;\n}\n// end fast-deep-equal\n\nmodule.exports = function isEqual(a, b) {\n  try {\n    return equal(a, b);\n  } catch (error) {\n    if (((error.message || '').match(/stack|recursion/i))) {\n      // warn on circular references, don't crash\n      // browsers give this different errors name and messages:\n      // chrome/safari: \"RangeError\", \"Maximum call stack size exceeded\"\n      // firefox: \"InternalError\", too much recursion\"\n      // edge: \"Error\", \"Out of stack space\"\n      console.warn('react-fast-compare cannot handle circular refs');\n      return false;\n    }\n    // some other error. we should definitely know about these\n    throw error;\n  }\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","//\n\nmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n  if (ret !== void 0) {\n    return !!ret;\n  }\n\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== \"object\" || !objA || typeof objB !== \"object\" || !objB) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n\n  // Test for A's keys different from B.\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n\n    var valueA = objA[key];\n    var valueB = objB[key];\n\n    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n\n    if (ret === false || (ret === void 0 && valueA !== valueB)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n","import t,{Component as e}from\"react\";import r from\"prop-types\";import n from\"react-fast-compare\";import i from\"invariant\";import o from\"shallowequal\";function a(){return a=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}return t},a.apply(this,arguments)}function s(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,c(t,e)}function c(t,e){return c=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},c(t,e)}function u(t,e){if(null==t)return{};var r,n,i={},o=Object.keys(t);for(n=0;n<o.length;n++)e.indexOf(r=o[n])>=0||(i[r]=t[r]);return i}var l={BASE:\"base\",BODY:\"body\",HEAD:\"head\",HTML:\"html\",LINK:\"link\",META:\"meta\",NOSCRIPT:\"noscript\",SCRIPT:\"script\",STYLE:\"style\",TITLE:\"title\",FRAGMENT:\"Symbol(react.fragment)\"},p={rel:[\"amphtml\",\"canonical\",\"alternate\"]},f={type:[\"application/ld+json\"]},d={charset:\"\",name:[\"robots\",\"description\"],property:[\"og:type\",\"og:title\",\"og:url\",\"og:image\",\"og:image:alt\",\"og:description\",\"twitter:url\",\"twitter:title\",\"twitter:description\",\"twitter:image\",\"twitter:image:alt\",\"twitter:card\",\"twitter:site\"]},h=Object.keys(l).map(function(t){return l[t]}),m={accesskey:\"accessKey\",charset:\"charSet\",class:\"className\",contenteditable:\"contentEditable\",contextmenu:\"contextMenu\",\"http-equiv\":\"httpEquiv\",itemprop:\"itemProp\",tabindex:\"tabIndex\"},y=Object.keys(m).reduce(function(t,e){return t[m[e]]=e,t},{}),T=function(t,e){for(var r=t.length-1;r>=0;r-=1){var n=t[r];if(Object.prototype.hasOwnProperty.call(n,e))return n[e]}return null},g=function(t){var e=T(t,l.TITLE),r=T(t,\"titleTemplate\");if(Array.isArray(e)&&(e=e.join(\"\")),r&&e)return r.replace(/%s/g,function(){return e});var n=T(t,\"defaultTitle\");return e||n||void 0},b=function(t){return T(t,\"onChangeClientState\")||function(){}},v=function(t,e){return e.filter(function(e){return void 0!==e[t]}).map(function(e){return e[t]}).reduce(function(t,e){return a({},t,e)},{})},A=function(t,e){return e.filter(function(t){return void 0!==t[l.BASE]}).map(function(t){return t[l.BASE]}).reverse().reduce(function(e,r){if(!e.length)for(var n=Object.keys(r),i=0;i<n.length;i+=1){var o=n[i].toLowerCase();if(-1!==t.indexOf(o)&&r[o])return e.concat(r)}return e},[])},C=function(t,e,r){var n={};return r.filter(function(e){return!!Array.isArray(e[t])||(void 0!==e[t]&&console&&\"function\"==typeof console.warn&&console.warn(\"Helmet: \"+t+' should be of type \"Array\". Instead found type \"'+typeof e[t]+'\"'),!1)}).map(function(e){return e[t]}).reverse().reduce(function(t,r){var i={};r.filter(function(t){for(var r,o=Object.keys(t),a=0;a<o.length;a+=1){var s=o[a],c=s.toLowerCase();-1===e.indexOf(c)||\"rel\"===r&&\"canonical\"===t[r].toLowerCase()||\"rel\"===c&&\"stylesheet\"===t[c].toLowerCase()||(r=c),-1===e.indexOf(s)||\"innerHTML\"!==s&&\"cssText\"!==s&&\"itemprop\"!==s||(r=s)}if(!r||!t[r])return!1;var u=t[r].toLowerCase();return n[r]||(n[r]={}),i[r]||(i[r]={}),!n[r][u]&&(i[r][u]=!0,!0)}).reverse().forEach(function(e){return t.push(e)});for(var o=Object.keys(i),s=0;s<o.length;s+=1){var c=o[s],u=a({},n[c],i[c]);n[c]=u}return t},[]).reverse()},O=function(t,e){if(Array.isArray(t)&&t.length)for(var r=0;r<t.length;r+=1)if(t[r][e])return!0;return!1},S=function(t){return Array.isArray(t)?t.join(\"\"):t},E=function(t,e){return Array.isArray(t)?t.reduce(function(t,r){return function(t,e){for(var r=Object.keys(t),n=0;n<r.length;n+=1)if(e[r[n]]&&e[r[n]].includes(t[r[n]]))return!0;return!1}(r,e)?t.priority.push(r):t.default.push(r),t},{priority:[],default:[]}):{default:t}},I=function(t,e){var r;return a({},t,((r={})[e]=void 0,r))},P=[l.NOSCRIPT,l.SCRIPT,l.STYLE],w=function(t,e){return void 0===e&&(e=!0),!1===e?String(t):String(t).replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\").replace(/\"/g,\"&quot;\").replace(/'/g,\"&#x27;\")},x=function(t){return Object.keys(t).reduce(function(e,r){var n=void 0!==t[r]?r+'=\"'+t[r]+'\"':\"\"+r;return e?e+\" \"+n:n},\"\")},L=function(t,e){return void 0===e&&(e={}),Object.keys(t).reduce(function(e,r){return e[m[r]||r]=t[r],e},e)},j=function(e,r){return r.map(function(r,n){var i,o=((i={key:n})[\"data-rh\"]=!0,i);return Object.keys(r).forEach(function(t){var e=m[t]||t;\"innerHTML\"===e||\"cssText\"===e?o.dangerouslySetInnerHTML={__html:r.innerHTML||r.cssText}:o[e]=r[t]}),t.createElement(e,o)})},M=function(e,r,n){switch(e){case l.TITLE:return{toComponent:function(){return n=r.titleAttributes,(i={key:e=r.title})[\"data-rh\"]=!0,o=L(n,i),[t.createElement(l.TITLE,o,e)];var e,n,i,o},toString:function(){return function(t,e,r,n){var i=x(r),o=S(e);return i?\"<\"+t+' data-rh=\"true\" '+i+\">\"+w(o,n)+\"</\"+t+\">\":\"<\"+t+' data-rh=\"true\">'+w(o,n)+\"</\"+t+\">\"}(e,r.title,r.titleAttributes,n)}};case\"bodyAttributes\":case\"htmlAttributes\":return{toComponent:function(){return L(r)},toString:function(){return x(r)}};default:return{toComponent:function(){return j(e,r)},toString:function(){return function(t,e,r){return e.reduce(function(e,n){var i=Object.keys(n).filter(function(t){return!(\"innerHTML\"===t||\"cssText\"===t)}).reduce(function(t,e){var i=void 0===n[e]?e:e+'=\"'+w(n[e],r)+'\"';return t?t+\" \"+i:i},\"\"),o=n.innerHTML||n.cssText||\"\",a=-1===P.indexOf(t);return e+\"<\"+t+' data-rh=\"true\" '+i+(a?\"/>\":\">\"+o+\"</\"+t+\">\")},\"\")}(e,r,n)}}}},k=function(t){var e=t.baseTag,r=t.bodyAttributes,n=t.encode,i=t.htmlAttributes,o=t.noscriptTags,a=t.styleTags,s=t.title,c=void 0===s?\"\":s,u=t.titleAttributes,h=t.linkTags,m=t.metaTags,y=t.scriptTags,T={toComponent:function(){},toString:function(){return\"\"}};if(t.prioritizeSeoTags){var g=function(t){var e=t.linkTags,r=t.scriptTags,n=t.encode,i=E(t.metaTags,d),o=E(e,p),a=E(r,f);return{priorityMethods:{toComponent:function(){return[].concat(j(l.META,i.priority),j(l.LINK,o.priority),j(l.SCRIPT,a.priority))},toString:function(){return M(l.META,i.priority,n)+\" \"+M(l.LINK,o.priority,n)+\" \"+M(l.SCRIPT,a.priority,n)}},metaTags:i.default,linkTags:o.default,scriptTags:a.default}}(t);T=g.priorityMethods,h=g.linkTags,m=g.metaTags,y=g.scriptTags}return{priority:T,base:M(l.BASE,e,n),bodyAttributes:M(\"bodyAttributes\",r,n),htmlAttributes:M(\"htmlAttributes\",i,n),link:M(l.LINK,h,n),meta:M(l.META,m,n),noscript:M(l.NOSCRIPT,o,n),script:M(l.SCRIPT,y,n),style:M(l.STYLE,a,n),title:M(l.TITLE,{title:c,titleAttributes:u},n)}},H=[],N=function(t,e){var r=this;void 0===e&&(e=\"undefined\"!=typeof document),this.instances=[],this.value={setHelmet:function(t){r.context.helmet=t},helmetInstances:{get:function(){return r.canUseDOM?H:r.instances},add:function(t){(r.canUseDOM?H:r.instances).push(t)},remove:function(t){var e=(r.canUseDOM?H:r.instances).indexOf(t);(r.canUseDOM?H:r.instances).splice(e,1)}}},this.context=t,this.canUseDOM=e,e||(t.helmet=k({baseTag:[],bodyAttributes:{},encodeSpecialCharacters:!0,htmlAttributes:{},linkTags:[],metaTags:[],noscriptTags:[],scriptTags:[],styleTags:[],title:\"\",titleAttributes:{}}))},R=t.createContext({}),D=r.shape({setHelmet:r.func,helmetInstances:r.shape({get:r.func,add:r.func,remove:r.func})}),U=\"undefined\"!=typeof document,q=/*#__PURE__*/function(e){function r(t){var n;return(n=e.call(this,t)||this).helmetData=new N(n.props.context,r.canUseDOM),n}return s(r,e),r.prototype.render=function(){/*#__PURE__*/return t.createElement(R.Provider,{value:this.helmetData.value},this.props.children)},r}(e);q.canUseDOM=U,q.propTypes={context:r.shape({helmet:r.shape()}),children:r.node.isRequired},q.defaultProps={context:{}},q.displayName=\"HelmetProvider\";var Y=function(t,e){var r,n=document.head||document.querySelector(l.HEAD),i=n.querySelectorAll(t+\"[data-rh]\"),o=[].slice.call(i),a=[];return e&&e.length&&e.forEach(function(e){var n=document.createElement(t);for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(\"innerHTML\"===i?n.innerHTML=e.innerHTML:\"cssText\"===i?n.styleSheet?n.styleSheet.cssText=e.cssText:n.appendChild(document.createTextNode(e.cssText)):n.setAttribute(i,void 0===e[i]?\"\":e[i]));n.setAttribute(\"data-rh\",\"true\"),o.some(function(t,e){return r=e,n.isEqualNode(t)})?o.splice(r,1):a.push(n)}),o.forEach(function(t){return t.parentNode.removeChild(t)}),a.forEach(function(t){return n.appendChild(t)}),{oldTags:o,newTags:a}},B=function(t,e){var r=document.getElementsByTagName(t)[0];if(r){for(var n=r.getAttribute(\"data-rh\"),i=n?n.split(\",\"):[],o=[].concat(i),a=Object.keys(e),s=0;s<a.length;s+=1){var c=a[s],u=e[c]||\"\";r.getAttribute(c)!==u&&r.setAttribute(c,u),-1===i.indexOf(c)&&i.push(c);var l=o.indexOf(c);-1!==l&&o.splice(l,1)}for(var p=o.length-1;p>=0;p-=1)r.removeAttribute(o[p]);i.length===o.length?r.removeAttribute(\"data-rh\"):r.getAttribute(\"data-rh\")!==a.join(\",\")&&r.setAttribute(\"data-rh\",a.join(\",\"))}},K=function(t,e){var r=t.baseTag,n=t.htmlAttributes,i=t.linkTags,o=t.metaTags,a=t.noscriptTags,s=t.onChangeClientState,c=t.scriptTags,u=t.styleTags,p=t.title,f=t.titleAttributes;B(l.BODY,t.bodyAttributes),B(l.HTML,n),function(t,e){void 0!==t&&document.title!==t&&(document.title=S(t)),B(l.TITLE,e)}(p,f);var d={baseTag:Y(l.BASE,r),linkTags:Y(l.LINK,i),metaTags:Y(l.META,o),noscriptTags:Y(l.NOSCRIPT,a),scriptTags:Y(l.SCRIPT,c),styleTags:Y(l.STYLE,u)},h={},m={};Object.keys(d).forEach(function(t){var e=d[t],r=e.newTags,n=e.oldTags;r.length&&(h[t]=r),n.length&&(m[t]=d[t].oldTags)}),e&&e(),s(t,h,m)},_=null,z=/*#__PURE__*/function(t){function e(){for(var e,r=arguments.length,n=new Array(r),i=0;i<r;i++)n[i]=arguments[i];return(e=t.call.apply(t,[this].concat(n))||this).rendered=!1,e}s(e,t);var r=e.prototype;return r.shouldComponentUpdate=function(t){return!o(t,this.props)},r.componentDidUpdate=function(){this.emitChange()},r.componentWillUnmount=function(){this.props.context.helmetInstances.remove(this),this.emitChange()},r.emitChange=function(){var t,e,r=this.props.context,n=r.setHelmet,i=null,o=(t=r.helmetInstances.get().map(function(t){var e=a({},t.props);return delete e.context,e}),{baseTag:A([\"href\"],t),bodyAttributes:v(\"bodyAttributes\",t),defer:T(t,\"defer\"),encode:T(t,\"encodeSpecialCharacters\"),htmlAttributes:v(\"htmlAttributes\",t),linkTags:C(l.LINK,[\"rel\",\"href\"],t),metaTags:C(l.META,[\"name\",\"charset\",\"http-equiv\",\"property\",\"itemprop\"],t),noscriptTags:C(l.NOSCRIPT,[\"innerHTML\"],t),onChangeClientState:b(t),scriptTags:C(l.SCRIPT,[\"src\",\"innerHTML\"],t),styleTags:C(l.STYLE,[\"cssText\"],t),title:g(t),titleAttributes:v(\"titleAttributes\",t),prioritizeSeoTags:O(t,\"prioritizeSeoTags\")});q.canUseDOM?(e=o,_&&cancelAnimationFrame(_),e.defer?_=requestAnimationFrame(function(){K(e,function(){_=null})}):(K(e),_=null)):k&&(i=k(o)),n(i)},r.init=function(){this.rendered||(this.rendered=!0,this.props.context.helmetInstances.add(this),this.emitChange())},r.render=function(){return this.init(),null},e}(e);z.propTypes={context:D.isRequired},z.displayName=\"HelmetDispatcher\";var F=[\"children\"],G=[\"children\"],W=/*#__PURE__*/function(e){function r(){return e.apply(this,arguments)||this}s(r,e);var o=r.prototype;return o.shouldComponentUpdate=function(t){return!n(I(this.props,\"helmetData\"),I(t,\"helmetData\"))},o.mapNestedChildrenToProps=function(t,e){if(!e)return null;switch(t.type){case l.SCRIPT:case l.NOSCRIPT:return{innerHTML:e};case l.STYLE:return{cssText:e};default:throw new Error(\"<\"+t.type+\" /> elements are self-closing and can not contain children. Refer to our API for more information.\")}},o.flattenArrayTypeChildren=function(t){var e,r=t.child,n=t.arrayTypeChildren;return a({},n,((e={})[r.type]=[].concat(n[r.type]||[],[a({},t.newChildProps,this.mapNestedChildrenToProps(r,t.nestedChildren))]),e))},o.mapObjectTypeChildren=function(t){var e,r,n=t.child,i=t.newProps,o=t.newChildProps,s=t.nestedChildren;switch(n.type){case l.TITLE:return a({},i,((e={})[n.type]=s,e.titleAttributes=a({},o),e));case l.BODY:return a({},i,{bodyAttributes:a({},o)});case l.HTML:return a({},i,{htmlAttributes:a({},o)});default:return a({},i,((r={})[n.type]=a({},o),r))}},o.mapArrayTypeChildrenToProps=function(t,e){var r=a({},e);return Object.keys(t).forEach(function(e){var n;r=a({},r,((n={})[e]=t[e],n))}),r},o.warnOnInvalidChildren=function(t,e){return i(h.some(function(e){return t.type===e}),\"function\"==typeof t.type?\"You may be attempting to nest <Helmet> components within each other, which is not allowed. Refer to our API for more information.\":\"Only elements types \"+h.join(\", \")+\" are allowed. Helmet does not support rendering <\"+t.type+\"> elements. Refer to our API for more information.\"),i(!e||\"string\"==typeof e||Array.isArray(e)&&!e.some(function(t){return\"string\"!=typeof t}),\"Helmet expects a string as a child of <\"+t.type+\">. Did you forget to wrap your children in braces? ( <\"+t.type+\">{``}</\"+t.type+\"> ) Refer to our API for more information.\"),!0},o.mapChildrenToProps=function(e,r){var n=this,i={};return t.Children.forEach(e,function(t){if(t&&t.props){var e=t.props,o=e.children,a=u(e,F),s=Object.keys(a).reduce(function(t,e){return t[y[e]||e]=a[e],t},{}),c=t.type;switch(\"symbol\"==typeof c?c=c.toString():n.warnOnInvalidChildren(t,o),c){case l.FRAGMENT:r=n.mapChildrenToProps(o,r);break;case l.LINK:case l.META:case l.NOSCRIPT:case l.SCRIPT:case l.STYLE:i=n.flattenArrayTypeChildren({child:t,arrayTypeChildren:i,newChildProps:s,nestedChildren:o});break;default:r=n.mapObjectTypeChildren({child:t,newProps:r,newChildProps:s,nestedChildren:o})}}}),this.mapArrayTypeChildrenToProps(i,r)},o.render=function(){var e=this.props,r=e.children,n=u(e,G),i=a({},n),o=n.helmetData;return r&&(i=this.mapChildrenToProps(r,i)),!o||o instanceof N||(o=new N(o.context,o.instances)),o?/*#__PURE__*/t.createElement(z,a({},i,{context:o.value,helmetData:void 0})):/*#__PURE__*/t.createElement(R.Consumer,null,function(e){/*#__PURE__*/return t.createElement(z,a({},i,{context:e}))})},r}(e);W.propTypes={base:r.object,bodyAttributes:r.object,children:r.oneOfType([r.arrayOf(r.node),r.node]),defaultTitle:r.string,defer:r.bool,encodeSpecialCharacters:r.bool,htmlAttributes:r.object,link:r.arrayOf(r.object),meta:r.arrayOf(r.object),noscript:r.arrayOf(r.object),onChangeClientState:r.func,script:r.arrayOf(r.object),style:r.arrayOf(r.object),title:r.string,titleAttributes:r.object,titleTemplate:r.string,prioritizeSeoTags:r.bool,helmetData:r.object},W.defaultProps={defer:!0,encodeSpecialCharacters:!0,prioritizeSeoTags:!1},W.displayName=\"Helmet\";export{W as Helmet,N as HelmetData,q as HelmetProvider};\n//# sourceMappingURL=index.module.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nvar defaultAttributes = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 24,\n  height: 24,\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n};\n\nexport { defaultAttributes as default };\n//# sourceMappingURL=defaultAttributes.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport defaultAttributes from './defaultAttributes.js';\n\nconst toKebabCase = (string) => string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase().trim();\nconst createLucideIcon = (iconName, iconNode) => {\n  const Component = forwardRef(\n    ({ color = \"currentColor\", size = 24, strokeWidth = 2, absoluteStrokeWidth, className = \"\", children, ...rest }, ref) => createElement(\n      \"svg\",\n      {\n        ref,\n        ...defaultAttributes,\n        width: size,\n        height: size,\n        stroke: color,\n        strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n        className: [\"lucide\", `lucide-${toKebabCase(iconName)}`, className].join(\" \"),\n        ...rest\n      },\n      [\n        ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),\n        ...Array.isArray(children) ? children : [children]\n      ]\n    )\n  );\n  Component.displayName = `${iconName}`;\n  return Component;\n};\n\nexport { createLucideIcon as default, toKebabCase };\n//# sourceMappingURL=createLucideIcon.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst AlertTriangle = createLucideIcon(\"AlertTriangle\", [\n  [\n    \"path\",\n    {\n      d: \"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z\",\n      key: \"c3ski4\"\n    }\n  ],\n  [\"path\", { d: \"M12 9v4\", key: \"juzpu7\" }],\n  [\"path\", { d: \"M12 17h.01\", key: \"p32p05\" }]\n]);\n\nexport { AlertTriangle as default };\n//# sourceMappingURL=alert-triangle.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Briefcase = createLucideIcon(\"Briefcase\", [\n  [\"rect\", { width: \"20\", height: \"14\", x: \"2\", y: \"7\", rx: \"2\", ry: \"2\", key: \"eto64e\" }],\n  [\"path\", { d: \"M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16\", key: \"zwj3tp\" }]\n]);\n\nexport { Briefcase as default };\n//# sourceMappingURL=briefcase.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Code = createLucideIcon(\"Code\", [\n  [\"polyline\", { points: \"16 18 22 12 16 6\", key: \"z7tu5w\" }],\n  [\"polyline\", { points: \"8 6 2 12 8 18\", key: \"1eg1df\" }]\n]);\n\nexport { Code as default };\n//# sourceMappingURL=code.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Home = createLucideIcon(\"Home\", [\n  [\"path\", { d: \"m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\", key: \"y5dka4\" }],\n  [\"polyline\", { points: \"9 22 9 12 15 12 15 22\", key: \"e2us08\" }]\n]);\n\nexport { Home as default };\n//# sourceMappingURL=home.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Loader2 = createLucideIcon(\"Loader2\", [\n  [\"path\", { d: \"M21 12a9 9 0 1 1-6.219-8.56\", key: \"13zald\" }]\n]);\n\nexport { Loader2 as default };\n//# sourceMappingURL=loader-2.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Mail = createLucideIcon(\"Mail\", [\n  [\"rect\", { width: \"20\", height: \"16\", x: \"2\", y: \"4\", rx: \"2\", key: \"18n3k1\" }],\n  [\"path\", { d: \"m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7\", key: \"1ocrg3\" }]\n]);\n\nexport { Mail as default };\n//# sourceMappingURL=mail.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Menu = createLucideIcon(\"Menu\", [\n  [\"line\", { x1: \"4\", x2: \"20\", y1: \"12\", y2: \"12\", key: \"1e0a9i\" }],\n  [\"line\", { x1: \"4\", x2: \"20\", y1: \"6\", y2: \"6\", key: \"1owob3\" }],\n  [\"line\", { x1: \"4\", x2: \"20\", y1: \"18\", y2: \"18\", key: \"yk5zj1\" }]\n]);\n\nexport { Menu as default };\n//# sourceMappingURL=menu.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Monitor = createLucideIcon(\"Monitor\", [\n  [\"rect\", { width: \"20\", height: \"14\", x: \"2\", y: \"3\", rx: \"2\", key: \"48i651\" }],\n  [\"line\", { x1: \"8\", x2: \"16\", y1: \"21\", y2: \"21\", key: \"1svkeh\" }],\n  [\"line\", { x1: \"12\", x2: \"12\", y1: \"17\", y2: \"21\", key: \"vw1qmm\" }]\n]);\n\nexport { Monitor as default };\n//# sourceMappingURL=monitor.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Moon = createLucideIcon(\"Moon\", [\n  [\"path\", { d: \"M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z\", key: \"a7tn18\" }]\n]);\n\nexport { Moon as default };\n//# sourceMappingURL=moon.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst RefreshCw = createLucideIcon(\"RefreshCw\", [\n  [\"path\", { d: \"M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8\", key: \"v9h5vc\" }],\n  [\"path\", { d: \"M21 3v5h-5\", key: \"1q7to0\" }],\n  [\"path\", { d: \"M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16\", key: \"3uifl3\" }],\n  [\"path\", { d: \"M8 16H3v5\", key: \"1cv678\" }]\n]);\n\nexport { RefreshCw as default };\n//# sourceMappingURL=refresh-cw.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Sun = createLucideIcon(\"Sun\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"4\", key: \"4exip2\" }],\n  [\"path\", { d: \"M12 2v2\", key: \"tus03m\" }],\n  [\"path\", { d: \"M12 20v2\", key: \"1lh1kg\" }],\n  [\"path\", { d: \"m4.93 4.93 1.41 1.41\", key: \"149t6j\" }],\n  [\"path\", { d: \"m17.66 17.66 1.41 1.41\", key: \"ptbguv\" }],\n  [\"path\", { d: \"M2 12h2\", key: \"1t8f8n\" }],\n  [\"path\", { d: \"M20 12h2\", key: \"1q8mjw\" }],\n  [\"path\", { d: \"m6.34 17.66-1.41 1.41\", key: \"1m8zz5\" }],\n  [\"path\", { d: \"m19.07 4.93-1.41 1.41\", key: \"1shlcs\" }]\n]);\n\nexport { Sun as default };\n//# sourceMappingURL=sun.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst User = createLucideIcon(\"User\", [\n  [\"path\", { d: \"M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2\", key: \"975kel\" }],\n  [\"circle\", { cx: \"12\", cy: \"7\", r: \"4\", key: \"17ys0d\" }]\n]);\n\nexport { User as default };\n//# sourceMappingURL=user.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst X = createLucideIcon(\"X\", [\n  [\"path\", { d: \"M18 6 6 18\", key: \"1bl5f8\" }],\n  [\"path\", { d: \"m6 6 12 12\", key: \"d8bk6v\" }]\n]);\n\nexport { X as default };\n//# sourceMappingURL=x.js.map\n","const reduxImpl = (reducer, initial) => (set, _get, api) => {\n  api.dispatch = (action) => {\n    set((state) => reducer(state, action), false, action);\n    return action;\n  };\n  api.dispatchFromDevtools = true;\n  return { dispatch: (...a) => api.dispatch(...a), ...initial };\n};\nconst redux = reduxImpl;\n\nconst trackedConnections = /* @__PURE__ */ new Map();\nconst getTrackedConnectionState = (name) => {\n  const api = trackedConnections.get(name);\n  if (!api) return {};\n  return Object.fromEntries(\n    Object.entries(api.stores).map(([key, api2]) => [key, api2.getState()])\n  );\n};\nconst extractConnectionInformation = (store, extensionConnector, options) => {\n  if (store === void 0) {\n    return {\n      type: \"untracked\",\n      connection: extensionConnector.connect(options)\n    };\n  }\n  const existingConnection = trackedConnections.get(options.name);\n  if (existingConnection) {\n    return { type: \"tracked\", store, ...existingConnection };\n  }\n  const newConnection = {\n    connection: extensionConnector.connect(options),\n    stores: {}\n  };\n  trackedConnections.set(options.name, newConnection);\n  return { type: \"tracked\", store, ...newConnection };\n};\nconst devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {\n  const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\n  let extensionConnector;\n  try {\n    extensionConnector = (enabled != null ? enabled : (import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n  } catch (_e) {\n  }\n  if (!extensionConnector) {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && enabled) {\n      console.warn(\n        \"[zustand devtools middleware] Please install/enable Redux devtools extension\"\n      );\n    }\n    return fn(set, get, api);\n  }\n  const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\n  let isRecording = true;\n  api.setState = (state, replace, nameOrAction) => {\n    const r = set(state, replace);\n    if (!isRecording) return r;\n    const action = nameOrAction === void 0 ? { type: anonymousActionType || \"anonymous\" } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction;\n    if (store === void 0) {\n      connection == null ? void 0 : connection.send(action, get());\n      return r;\n    }\n    connection == null ? void 0 : connection.send(\n      {\n        ...action,\n        type: `${store}/${action.type}`\n      },\n      {\n        ...getTrackedConnectionState(options.name),\n        [store]: api.getState()\n      }\n    );\n    return r;\n  };\n  const setStateFromDevtools = (...a) => {\n    const originalIsRecording = isRecording;\n    isRecording = false;\n    set(...a);\n    isRecording = originalIsRecording;\n  };\n  const initialState = fn(api.setState, get, api);\n  if (connectionInformation.type === \"untracked\") {\n    connection == null ? void 0 : connection.init(initialState);\n  } else {\n    connectionInformation.stores[connectionInformation.store] = api;\n    connection == null ? void 0 : connection.init(\n      Object.fromEntries(\n        Object.entries(connectionInformation.stores).map(([key, store2]) => [\n          key,\n          key === connectionInformation.store ? initialState : store2.getState()\n        ])\n      )\n    );\n  }\n  if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n    let didWarnAboutReservedActionType = false;\n    const originalDispatch = api.dispatch;\n    api.dispatch = (...a) => {\n      if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && a[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n        console.warn(\n          '[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.'\n        );\n        didWarnAboutReservedActionType = true;\n      }\n      originalDispatch(...a);\n    };\n  }\n  connection.subscribe((message) => {\n    var _a;\n    switch (message.type) {\n      case \"ACTION\":\n        if (typeof message.payload !== \"string\") {\n          console.error(\n            \"[zustand devtools middleware] Unsupported action format\"\n          );\n          return;\n        }\n        return parseJsonThen(\n          message.payload,\n          (action) => {\n            if (action.type === \"__setState\") {\n              if (store === void 0) {\n                setStateFromDevtools(action.state);\n                return;\n              }\n              if (Object.keys(action.state).length !== 1) {\n                console.error(\n                  `\n                    [zustand devtools middleware] Unsupported __setState action format. \n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\n                    `\n                );\n              }\n              const stateFromDevtools = action.state[store];\n              if (stateFromDevtools === void 0 || stateFromDevtools === null) {\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\n                setStateFromDevtools(stateFromDevtools);\n              }\n              return;\n            }\n            if (!api.dispatchFromDevtools) return;\n            if (typeof api.dispatch !== \"function\") return;\n            api.dispatch(action);\n          }\n        );\n      case \"DISPATCH\":\n        switch (message.payload.type) {\n          case \"RESET\":\n            setStateFromDevtools(initialState);\n            if (store === void 0) {\n              return connection == null ? void 0 : connection.init(api.getState());\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"COMMIT\":\n            if (store === void 0) {\n              connection == null ? void 0 : connection.init(api.getState());\n              return;\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"ROLLBACK\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                connection == null ? void 0 : connection.init(api.getState());\n                return;\n              }\n              setStateFromDevtools(state[store]);\n              connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n            });\n          case \"JUMP_TO_STATE\":\n          case \"JUMP_TO_ACTION\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\n                setStateFromDevtools(state[store]);\n              }\n            });\n          case \"IMPORT_STATE\": {\n            const { nextLiftedState } = message.payload;\n            const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a.state;\n            if (!lastComputedState) return;\n            if (store === void 0) {\n              setStateFromDevtools(lastComputedState);\n            } else {\n              setStateFromDevtools(lastComputedState[store]);\n            }\n            connection == null ? void 0 : connection.send(\n              null,\n              // FIXME no-any\n              nextLiftedState\n            );\n            return;\n          }\n          case \"PAUSE_RECORDING\":\n            return isRecording = !isRecording;\n        }\n        return;\n    }\n  });\n  return initialState;\n};\nconst devtools = devtoolsImpl;\nconst parseJsonThen = (stringified, f) => {\n  let parsed;\n  try {\n    parsed = JSON.parse(stringified);\n  } catch (e) {\n    console.error(\n      \"[zustand devtools middleware] Could not parse the received json\",\n      e\n    );\n  }\n  if (parsed !== void 0) f(parsed);\n};\n\nconst subscribeWithSelectorImpl = (fn) => (set, get, api) => {\n  const origSubscribe = api.subscribe;\n  api.subscribe = (selector, optListener, options) => {\n    let listener = selector;\n    if (optListener) {\n      const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\n      let currentSlice = selector(api.getState());\n      listener = (state) => {\n        const nextSlice = selector(state);\n        if (!equalityFn(currentSlice, nextSlice)) {\n          const previousSlice = currentSlice;\n          optListener(currentSlice = nextSlice, previousSlice);\n        }\n      };\n      if (options == null ? void 0 : options.fireImmediately) {\n        optListener(currentSlice, currentSlice);\n      }\n    }\n    return origSubscribe(listener);\n  };\n  const initialState = fn(set, get, api);\n  return initialState;\n};\nconst subscribeWithSelector = subscribeWithSelectorImpl;\n\nconst combine = (initialState, create) => (...a) => Object.assign({}, initialState, create(...a));\n\nfunction createJSONStorage(getStorage, options) {\n  let storage;\n  try {\n    storage = getStorage();\n  } catch (_e) {\n    return;\n  }\n  const persistStorage = {\n    getItem: (name) => {\n      var _a;\n      const parse = (str2) => {\n        if (str2 === null) {\n          return null;\n        }\n        return JSON.parse(str2, options == null ? void 0 : options.reviver);\n      };\n      const str = (_a = storage.getItem(name)) != null ? _a : null;\n      if (str instanceof Promise) {\n        return str.then(parse);\n      }\n      return parse(str);\n    },\n    setItem: (name, newValue) => storage.setItem(\n      name,\n      JSON.stringify(newValue, options == null ? void 0 : options.replacer)\n    ),\n    removeItem: (name) => storage.removeItem(name)\n  };\n  return persistStorage;\n}\nconst toThenable = (fn) => (input) => {\n  try {\n    const result = fn(input);\n    if (result instanceof Promise) {\n      return result;\n    }\n    return {\n      then(onFulfilled) {\n        return toThenable(onFulfilled)(result);\n      },\n      catch(_onRejected) {\n        return this;\n      }\n    };\n  } catch (e) {\n    return {\n      then(_onFulfilled) {\n        return this;\n      },\n      catch(onRejected) {\n        return toThenable(onRejected)(e);\n      }\n    };\n  }\n};\nconst oldImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    getStorage: () => localStorage,\n    serialize: JSON.stringify,\n    deserialize: JSON.parse,\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage;\n  try {\n    storage = options.getStorage();\n  } catch (_e) {\n  }\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const thenableSerialize = toThenable(options.serialize);\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    let errorInSync;\n    const thenable = thenableSerialize({ state, version: options.version }).then(\n      (serializedValue) => storage.setItem(options.name, serializedValue)\n    ).catch((e) => {\n      errorInSync = e;\n    });\n    if (errorInSync) {\n      throw errorInSync;\n    }\n    return thenable;\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a;\n    if (!storage) return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => cb(get()));\n    const postRehydrationCallback = ((_a = options.onRehydrateStorage) == null ? void 0 : _a.call(options, get())) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((storageValue) => {\n      if (storageValue) {\n        return options.deserialize(storageValue);\n      }\n    }).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return deserializedStorageValue.state;\n        }\n      }\n    }).then((migratedState) => {\n      var _a2;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      return setItem();\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.getStorage) {\n        storage = newOptions.getStorage();\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  hydrate();\n  return stateFromStorage || configResult;\n};\nconst newImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    storage: createJSONStorage(() => localStorage),\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage = options.storage;\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    return storage.setItem(options.name, {\n      state,\n      version: options.version\n    });\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  api.getInitialState = () => configResult;\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a, _b;\n    if (!storage) return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => {\n      var _a2;\n      return cb((_a2 = get()) != null ? _a2 : configResult);\n    });\n    const postRehydrationCallback = ((_b = options.onRehydrateStorage) == null ? void 0 : _b.call(options, (_a = get()) != null ? _a : configResult)) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return [\n              true,\n              options.migrate(\n                deserializedStorageValue.state,\n                deserializedStorageValue.version\n              )\n            ];\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return [false, deserializedStorageValue.state];\n        }\n      }\n      return [false, void 0];\n    }).then((migrationResult) => {\n      var _a2;\n      const [migrated, migratedState] = migrationResult;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      if (migrated) {\n        return setItem();\n      }\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      stateFromStorage = get();\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.storage) {\n        storage = newOptions.storage;\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  if (!options.skipHydration) {\n    hydrate();\n  }\n  return stateFromStorage || configResult;\n};\nconst persistImpl = (config, baseOptions) => {\n  if (\"getStorage\" in baseOptions || \"serialize\" in baseOptions || \"deserialize\" in baseOptions) {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead.\"\n      );\n    }\n    return oldImpl(config, baseOptions);\n  }\n  return newImpl(config, baseOptions);\n};\nconst persist = persistImpl;\n\nexport { combine, createJSONStorage, devtools, persist, redux, subscribeWithSelector };\n","import { create } from 'zustand'\nimport { persist, createJSONStorage } from 'zustand/middleware'\nimport type { AppState, AppActions } from '@/types'\n\ninterface AppStore extends AppState, AppActions {}\n\nexport const useAppStore = create<AppStore>()(\n  persist(\n    (set, get) => ({\n      // State\n      theme: 'system',\n      currentSection: 'home',\n      isLoading: false,\n      isMobileMenuOpen: false,\n      isContactModalOpen: false,\n\n      // Actions\n      setTheme: (theme) => {\n        set({ theme })\n        \n        // Apply theme to document\n        const root = document.documentElement\n        if (theme === 'dark') {\n          root.classList.add('dark')\n        } else if (theme === 'light') {\n          root.classList.remove('dark')\n        } else {\n          // System theme\n          const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches\n          if (prefersDark) {\n            root.classList.add('dark')\n          } else {\n            root.classList.remove('dark')\n          }\n        }\n      },\n\n      setCurrentSection: (section) => {\n        set({ currentSection: section })\n        \n        // Update URL without page reload\n        if (section !== 'home') {\n          window.history.replaceState(null, '', `#${section}`)\n        } else {\n          window.history.replaceState(null, '', '/')\n        }\n      },\n\n      setLoading: (isLoading) => set({ isLoading }),\n\n      toggleMobileMenu: () => {\n        const { isMobileMenuOpen } = get()\n        set({ isMobileMenuOpen: !isMobileMenuOpen })\n        \n        // Prevent body scroll when menu is open\n        if (!isMobileMenuOpen) {\n          document.body.style.overflow = 'hidden'\n        } else {\n          document.body.style.overflow = 'auto'\n        }\n      },\n\n      toggleContactModal: () => {\n        const { isContactModalOpen } = get()\n        set({ isContactModalOpen: !isContactModalOpen })\n        \n        // Prevent body scroll when modal is open\n        if (!isContactModalOpen) {\n          document.body.style.overflow = 'hidden'\n        } else {\n          document.body.style.overflow = 'auto'\n        }\n      },\n    }),\n    {\n      name: 'app-store',\n      storage: createJSONStorage(() => localStorage),\n      partialize: (state) => ({ \n        theme: state.theme \n      }),\n    }\n  )\n)\n\n// Initialize theme on app start\nif (typeof window !== 'undefined') {\n  const { setTheme } = useAppStore.getState()\n  const savedTheme = localStorage.getItem('app-store')\n  \n  if (savedTheme) {\n    try {\n      const parsedTheme = JSON.parse(savedTheme)\n      setTheme(parsedTheme.state?.theme || 'system')\n    } catch {\n      setTheme('system')\n    }\n  } else {\n    setTheme('system')\n  }\n}\n","import { type ClassValue, clsx } from 'clsx'\nimport { twMerge } from 'tailwind-merge'\n\n/**\n * Utility function to combine class names with Tailwind CSS\n * Merges clsx and tailwind-merge for optimal class handling\n */\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\n/**\n * Format a number to a human-readable string\n */\nexport function formatNumber(num: number): string {\n  if (num >= 1000000) {\n    return (num / 1000000).toFixed(1) + 'M'\n  }\n  if (num >= 1000) {\n    return (num / 1000).toFixed(1) + 'K'\n  }\n  return num.toString()\n}\n\n/**\n * Delay execution for a specified amount of time\n */\nexport function delay(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms))\n}\n\n/**\n * Debounce function calls\n */\nexport function debounce<T extends (...args: any[]) => any>(\n  func: T,\n  wait: number\n): (...args: Parameters<T>) => void {\n  let timeout: NodeJS.Timeout\n  return (...args: Parameters<T>) => {\n    clearTimeout(timeout)\n    timeout = setTimeout(() => func(...args), wait)\n  }\n}\n\n/**\n * Throttle function calls\n */\nexport function throttle<T extends (...args: any[]) => any>(\n  func: T,\n  limit: number\n): (...args: Parameters<T>) => void {\n  let inThrottle: boolean\n  return (...args: Parameters<T>) => {\n    if (!inThrottle) {\n      func(...args)\n      inThrottle = true\n      setTimeout(() => (inThrottle = false), limit)\n    }\n  }\n}\n\n/**\n * Check if an element is in viewport\n */\nexport function isInViewport(element: Element): boolean {\n  const rect = element.getBoundingClientRect()\n  return (\n    rect.top >= 0 &&\n    rect.left >= 0 &&\n    rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\n    rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n  )\n}\n\n/**\n * Smooth scroll to element\n */\nexport function scrollToElement(elementId: string, offset: number = 80): void {\n  const element = document.getElementById(elementId)\n  if (element) {\n    const elementPosition = element.offsetTop - offset\n    window.scrollTo({\n      top: elementPosition,\n      behavior: 'smooth'\n    })\n  }\n}\n\n/**\n * Get random integer between min and max (inclusive)\n */\nexport function randomInt(min: number, max: number): number {\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\n/**\n * Get random float between min and max\n */\nexport function randomFloat(min: number, max: number): number {\n  return Math.random() * (max - min) + min\n}\n\n/**\n * Clamp a number between min and max\n */\nexport function clamp(num: number, min: number, max: number): number {\n  return Math.min(Math.max(num, min), max)\n}\n\n/**\n * Linear interpolation\n */\nexport function lerp(start: number, end: number, factor: number): number {\n  return start + (end - start) * factor\n}\n\n/**\n * Map a value from one range to another\n */\nexport function mapRange(\n  value: number,\n  inMin: number,\n  inMax: number,\n  outMin: number,\n  outMax: number\n): number {\n  return ((value - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin\n}\n\n/**\n * Convert degrees to radians\n */\nexport function degToRad(degrees: number): number {\n  return degrees * (Math.PI / 180)\n}\n\n/**\n * Convert radians to degrees\n */\nexport function radToDeg(radians: number): number {\n  return radians * (180 / Math.PI)\n}\n\n/**\n * Generate a unique ID\n */\nexport function generateId(length: number = 8): string {\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n  let result = ''\n  for (let i = 0; i < length; i++) {\n    result += chars.charAt(Math.floor(Math.random() * chars.length))\n  }\n  return result\n}\n\n/**\n * Format date to readable string\n */\nexport function formatDate(date: Date | string): string {\n  const d = typeof date === 'string' ? new Date(date) : date\n  return d.toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  })\n}\n\n/**\n * Calculate reading time for text\n */\nexport function calculateReadingTime(text: string): number {\n  const wordsPerMinute = 200\n  const wordCount = text.split(/\\s+/).length\n  return Math.ceil(wordCount / wordsPerMinute)\n}\n\n/**\n * Capitalize first letter of string\n */\nexport function capitalize(str: string): string {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n}\n\n/**\n * Convert string to slug format\n */\nexport function slugify(str: string): string {\n  return str\n    .toLowerCase()\n    .replace(/[^\\w ]+/g, '')\n    .replace(/ +/g, '-')\n}\n\n/**\n * Check if user prefers reduced motion\n */\nexport function prefersReducedMotion(): boolean {\n  return window.matchMedia('(prefers-reduced-motion: reduce)').matches\n}\n\n/**\n * Get device type based on screen width\n */\nexport function getDeviceType(): 'mobile' | 'tablet' | 'desktop' {\n  const width = window.innerWidth\n  if (width < 768) return 'mobile'\n  if (width < 1024) return 'tablet'\n  return 'desktop'\n}\n\n/**\n * Check if user is on mobile device\n */\nexport function isMobile(): boolean {\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n    navigator.userAgent\n  )\n}\n\n/**\n * Copy text to clipboard\n */\nexport async function copyToClipboard(text: string): Promise<boolean> {\n  try {\n    await navigator.clipboard.writeText(text)\n    return true\n  } catch (err) {\n    // Fallback for older browsers\n    const textArea = document.createElement('textarea')\n    textArea.value = text\n    document.body.appendChild(textArea)\n    textArea.focus()\n    textArea.select()\n    try {\n      document.execCommand('copy')\n      return true\n    } catch (err) {\n      return false\n    } finally {\n      document.body.removeChild(textArea)\n    }\n  }\n}\n\n/**\n * Validate email address\n */\nexport function isValidEmail(email: string): boolean {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n  return emailRegex.test(email)\n}\n\n/**\n * Get contrast color (black or white) for a given background color\n */\nexport function getContrastColor(hexColor: string): string {\n  const hex = hexColor.replace('#', '')\n  const r = parseInt(hex.substr(0, 2), 16)\n  const g = parseInt(hex.substr(2, 2), 16)\n  const b = parseInt(hex.substr(4, 2), 16)\n  const brightness = (r * 299 + g * 587 + b * 114) / 1000\n  return brightness > 128 ? '#000000' : '#FFFFFF'\n}\n\n/**\n * Convert hex color to RGB\n */\nexport function hexToRgb(hex: string): { r: number; g: number; b: number } | null {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n  return result\n    ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16)\n      }\n    : null\n}\n\n/**\n * Convert RGB to hex color\n */\nexport function rgbToHex(r: number, g: number, b: number): string {\n  return '#' + [r, g, b].map(x => x.toString(16).padStart(2, '0')).join('')\n}\n","import { useState, useEffect } from 'react'\nimport { motion, AnimatePresence } from 'framer-motion'\nimport { Menu, X, Home, User, Code, Briefcase, Mail, Sun, Moon, Monitor } from 'lucide-react'\nimport { useAppStore } from '@/stores/appStore'\nimport { cn } from '@/utils/cn'\n\nconst navItems = [\n  { id: 'home', label: 'Home', href: '#home', icon: Home },\n  { id: 'about', label: 'About', href: '#about', icon: User },\n  { id: 'skills', label: 'Skills', href: '#skills', icon: Code },\n  { id: 'experience', label: 'Experience', href: '#experience', icon: Briefcase },\n  { id: 'projects', label: 'Projects', href: '#projects', icon: Briefcase },\n  { id: 'contact', label: 'Contact', href: '#contact', icon: Mail },\n]\n\nconst themeOptions = [\n  { value: 'light', label: 'Light', icon: Sun },\n  { value: 'dark', label: 'Dark', icon: Moon },\n  { value: 'system', label: 'System', icon: Monitor },\n]\n\nexport default function Navbar() {\n  const [isScrolled, setIsScrolled] = useState(false)\n  const [activeSection, setActiveSection] = useState('home')\n  const [showThemeMenu, setShowThemeMenu] = useState(false)\n  \n  const { \n    theme, \n    setTheme, \n    isMobileMenuOpen, \n    toggleMobileMenu, \n    setCurrentSection \n  } = useAppStore()\n\n  // Handle scroll effects\n  useEffect(() => {\n    const handleScroll = () => {\n      setIsScrolled(window.scrollY > 50)\n    }\n\n    window.addEventListener('scroll', handleScroll)\n    return () => window.removeEventListener('scroll', handleScroll)\n  }, [])\n\n  // Handle active section detection\n  useEffect(() => {\n    const handleScroll = () => {\n      const sections = navItems.map(item => document.getElementById(item.id.replace('#', '')))\n      const scrollPosition = window.scrollY + 100\n\n      for (let i = sections.length - 1; i >= 0; i--) {\n        const section = sections[i]\n        if (section && section.offsetTop <= scrollPosition) {\n          const sectionId = navItems[i].id\n          if (sectionId !== activeSection) {\n            setActiveSection(sectionId)\n            setCurrentSection(sectionId)\n          }\n          break\n        }\n      }\n    }\n\n    window.addEventListener('scroll', handleScroll)\n    return () => window.removeEventListener('scroll', handleScroll)\n  }, [activeSection, setCurrentSection])\n\n  const handleNavClick = (_href: string, id: string) => {\n    const element = document.getElementById(id)\n    if (element) {\n      const offsetTop = element.offsetTop - 80\n      window.scrollTo({\n        top: offsetTop,\n        behavior: 'smooth'\n      })\n    }\n    setActiveSection(id)\n    setCurrentSection(id)\n    \n    if (isMobileMenuOpen) {\n      toggleMobileMenu()\n    }\n  }\n\n  const getCurrentThemeIcon = () => {\n    const themeOption = themeOptions.find(option => option.value === theme)\n    return themeOption?.icon || Monitor\n  }\n\n  const ThemeIcon = getCurrentThemeIcon()\n\n  return (\n    <>\n      {/* Desktop & Mobile Navbar */}\n      <motion.nav\n        initial={{ y: -100 }}\n        animate={{ y: 0 }}\n        className={cn(\n          'fixed top-0 left-0 right-0 z-50 transition-all duration-300',\n          isScrolled \n            ? 'bg-white/10 backdrop-blur-lg border-b border-white/20 shadow-lg' \n            : 'bg-transparent'\n        )}\n      >\n        <div className=\"container mx-auto px-4\">\n          <div className=\"flex items-center justify-between h-16 md:h-20\">\n            {/* Logo */}\n            <motion.div\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n              className=\"flex items-center space-x-2\"\n            >\n              <div className=\"w-10 h-10 bg-gradient-to-r from-primary-500 to-secondary-500 rounded-lg flex items-center justify-center\">\n                <span className=\"text-white font-bold text-lg\">AG</span>\n              </div>\n              <div className=\"hidden sm:block\">\n                <h1 className=\"text-white font-heading font-bold text-xl\">\n                  Abhik <span className=\"text-primary-400\">Ghosh</span>\n                </h1>\n              </div>\n            </motion.div>\n\n            {/* Desktop Navigation */}\n            <div className=\"hidden md:flex items-center space-x-1\">\n              {navItems.map((item) => (\n                <motion.button\n                  key={item.id}\n                  whileHover={{ scale: 1.05 }}\n                  whileTap={{ scale: 0.95 }}\n                  onClick={() => handleNavClick(item.href, item.id)}\n                  className={cn(\n                    'relative px-4 py-2 rounded-lg text-sm font-medium transition-all duration-200',\n                    activeSection === item.id\n                      ? 'text-primary-400 bg-white/10'\n                      : 'text-white/80 hover:text-white hover:bg-white/5'\n                  )}\n                >\n                  {item.label}\n                  {activeSection === item.id && (\n                    <motion.div\n                      layoutId=\"activeTab\"\n                      className=\"absolute inset-0 bg-white/10 rounded-lg border border-primary-400/30\"\n                      transition={{ type: 'spring', bounce: 0.2, duration: 0.6 }}\n                    />\n                  )}\n                </motion.button>\n              ))}\n            </div>\n\n            {/* Theme Selector & Mobile Menu Button */}\n            <div className=\"flex items-center space-x-2\">\n              {/* Theme Selector */}\n              <div className=\"relative\">\n                <motion.button\n                  whileHover={{ scale: 1.05 }}\n                  whileTap={{ scale: 0.95 }}\n                  onClick={() => setShowThemeMenu(!showThemeMenu)}\n                  className=\"p-2 rounded-lg bg-white/10 text-white/80 hover:text-white hover:bg-white/20 transition-colors\"\n                >\n                  <ThemeIcon className=\"w-5 h-5\" />\n                </motion.button>\n\n                <AnimatePresence>\n                  {showThemeMenu && (\n                    <motion.div\n                      initial={{ opacity: 0, scale: 0.95, y: -10 }}\n                      animate={{ opacity: 1, scale: 1, y: 0 }}\n                      exit={{ opacity: 0, scale: 0.95, y: -10 }}\n                      className=\"absolute right-0 top-12 bg-white/10 backdrop-blur-lg rounded-lg border border-white/20 shadow-xl py-2 min-w-[120px]\"\n                    >\n                      {themeOptions.map((option) => {\n                        const OptionIcon = option.icon\n                        return (\n                          <motion.button\n                            key={option.value}\n                            whileHover={{ backgroundColor: 'rgba(255, 255, 255, 0.1)' }}\n                            onClick={() => {\n                              setTheme(option.value as any)\n                              setShowThemeMenu(false)\n                            }}\n                            className={cn(\n                              'flex items-center space-x-2 w-full px-3 py-2 text-sm transition-colors',\n                              theme === option.value \n                                ? 'text-primary-400' \n                                : 'text-white/80 hover:text-white'\n                            )}\n                          >\n                            <OptionIcon className=\"w-4 h-4\" />\n                            <span>{option.label}</span>\n                          </motion.button>\n                        )\n                      })}\n                    </motion.div>\n                  )}\n                </AnimatePresence>\n              </div>\n\n              {/* Mobile Menu Button */}\n              <motion.button\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n                onClick={toggleMobileMenu}\n                className=\"md:hidden p-2 rounded-lg bg-white/10 text-white/80 hover:text-white hover:bg-white/20 transition-colors\"\n              >\n                {isMobileMenuOpen ? (\n                  <X className=\"w-6 h-6\" />\n                ) : (\n                  <Menu className=\"w-6 h-6\" />\n                )}\n              </motion.button>\n            </div>\n          </div>\n        </div>\n      </motion.nav>\n\n      {/* Mobile Menu Overlay */}\n      <AnimatePresence>\n        {isMobileMenuOpen && (\n          <>\n            {/* Backdrop */}\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              className=\"fixed inset-0 bg-black/50 backdrop-blur-sm z-40 md:hidden\"\n              onClick={toggleMobileMenu}\n            />\n\n            {/* Mobile Menu */}\n            <motion.div\n              initial={{ x: '100%' }}\n              animate={{ x: 0 }}\n              exit={{ x: '100%' }}\n              transition={{ type: 'spring', bounce: 0, duration: 0.4 }}\n              className=\"fixed top-0 right-0 h-full w-80 max-w-[80vw] bg-white/10 backdrop-blur-xl border-l border-white/20 z-50 md:hidden\"\n            >\n              <div className=\"flex flex-col h-full\">\n                {/* Header */}\n                <div className=\"flex items-center justify-between p-6 border-b border-white/10\">\n                  <h2 className=\"text-white font-heading font-bold text-xl\">\n                    Menu\n                  </h2>\n                  <motion.button\n                    whileHover={{ scale: 1.05 }}\n                    whileTap={{ scale: 0.95 }}\n                    onClick={toggleMobileMenu}\n                    className=\"p-2 rounded-lg bg-white/10 text-white/80 hover:text-white\"\n                  >\n                    <X className=\"w-5 h-5\" />\n                  </motion.button>\n                </div>\n\n                {/* Navigation Items */}\n                <div className=\"flex-1 py-6\">\n                  {navItems.map((item, index) => {\n                    const ItemIcon = item.icon\n                    return (\n                      <motion.button\n                        key={item.id}\n                        initial={{ opacity: 0, x: 50 }}\n                        animate={{ opacity: 1, x: 0 }}\n                        transition={{ delay: index * 0.1 }}\n                        whileHover={{ x: 10 }}\n                        onClick={() => handleNavClick(item.href, item.id)}\n                        className={cn(\n                          'flex items-center space-x-3 w-full px-6 py-4 text-left transition-all duration-200',\n                          activeSection === item.id\n                            ? 'text-primary-400 bg-white/10 border-r-2 border-primary-400'\n                            : 'text-white/80 hover:text-white hover:bg-white/5'\n                        )}\n                      >\n                        <ItemIcon className=\"w-5 h-5\" />\n                        <span className=\"font-medium\">{item.label}</span>\n                      </motion.button>\n                    )\n                  })}\n                </div>\n\n                {/* Footer */}\n                <div className=\"p-6 border-t border-white/10\">\n                  <p className=\"text-white/60 text-sm text-center\">\n                    © 2025 Abhik Ghosh\n                  </p>\n                </div>\n              </div>\n            </motion.div>\n          </>\n        )}\n      </AnimatePresence>\n\n      {/* Click outside handler for theme menu */}\n      {showThemeMenu && (\n        <div\n          className=\"fixed inset-0 z-30\"\n          onClick={() => setShowThemeMenu(false)}\n        />\n      )}\n    </>\n  )\n}\n","import { motion } from 'framer-motion'\nimport { Loader2 } from 'lucide-react'\n\ninterface LoadingSpinnerProps {\n  size?: 'sm' | 'md' | 'lg'\n  text?: string\n  fullScreen?: boolean\n}\n\nexport default function LoadingSpinner({ \n  size = 'md', \n  text = 'Loading...', \n  fullScreen = false \n}: LoadingSpinnerProps) {\n  const sizeClasses = {\n    sm: 'w-4 h-4',\n    md: 'w-8 h-8',\n    lg: 'w-12 h-12'\n  }\n\n  const textSizeClasses = {\n    sm: 'text-sm',\n    md: 'text-base',\n    lg: 'text-lg'\n  }\n\n  const content = (\n    <div className=\"flex flex-col items-center justify-center space-y-4\">\n      <motion.div\n        animate={{ rotate: 360 }}\n        transition={{ duration: 1, repeat: Infinity, ease: 'linear' }}\n        className=\"text-primary-500\"\n      >\n        <Loader2 className={sizeClasses[size]} />\n      </motion.div>\n      \n      {text && (\n        <motion.p\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          className={`text-white/80 font-medium ${textSizeClasses[size]}`}\n        >\n          {text}\n        </motion.p>\n      )}\n    </div>\n  )\n\n  if (fullScreen) {\n    return (\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n        className=\"fixed inset-0 bg-gradient-to-br from-primary-900 via-secondary-900 to-accent-900 flex items-center justify-center z-50\"\n      >\n        {content}\n      </motion.div>\n    )\n  }\n\n  return content\n}\n","// package.json\nvar version = \"1.3.11\";\n\n// packages/core/src/maths.ts\nfunction clamp(min, input, max) {\n  return Math.max(min, Math.min(input, max));\n}\nfunction lerp(x, y, t) {\n  return (1 - t) * x + t * y;\n}\nfunction damp(x, y, lambda, deltaTime) {\n  return lerp(x, y, 1 - Math.exp(-lambda * deltaTime));\n}\nfunction modulo(n, d) {\n  return (n % d + d) % d;\n}\n\n// packages/core/src/animate.ts\nvar Animate = class {\n  isRunning = false;\n  value = 0;\n  from = 0;\n  to = 0;\n  currentTime = 0;\n  // These are instanciated in the fromTo method\n  lerp;\n  duration;\n  easing;\n  onUpdate;\n  /**\n   * Advance the animation by the given delta time\n   *\n   * @param deltaTime - The time in seconds to advance the animation\n   */\n  advance(deltaTime) {\n    if (!this.isRunning) return;\n    let completed = false;\n    if (this.duration && this.easing) {\n      this.currentTime += deltaTime;\n      const linearProgress = clamp(0, this.currentTime / this.duration, 1);\n      completed = linearProgress >= 1;\n      const easedProgress = completed ? 1 : this.easing(linearProgress);\n      this.value = this.from + (this.to - this.from) * easedProgress;\n    } else if (this.lerp) {\n      this.value = damp(this.value, this.to, this.lerp * 60, deltaTime);\n      if (Math.round(this.value) === this.to) {\n        this.value = this.to;\n        completed = true;\n      }\n    } else {\n      this.value = this.to;\n      completed = true;\n    }\n    if (completed) {\n      this.stop();\n    }\n    this.onUpdate?.(this.value, completed);\n  }\n  /** Stop the animation */\n  stop() {\n    this.isRunning = false;\n  }\n  /**\n   * Set up the animation from a starting value to an ending value\n   * with optional parameters for lerping, duration, easing, and onUpdate callback\n   *\n   * @param from - The starting value\n   * @param to - The ending value\n   * @param options - Options for the animation\n   */\n  fromTo(from, to, { lerp: lerp2, duration, easing, onStart, onUpdate }) {\n    this.from = this.value = from;\n    this.to = to;\n    this.lerp = lerp2;\n    this.duration = duration;\n    this.easing = easing;\n    this.currentTime = 0;\n    this.isRunning = true;\n    onStart?.();\n    this.onUpdate = onUpdate;\n  }\n};\n\n// packages/core/src/debounce.ts\nfunction debounce(callback, delay) {\n  let timer;\n  return function(...args) {\n    let context = this;\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      timer = void 0;\n      callback.apply(context, args);\n    }, delay);\n  };\n}\n\n// packages/core/src/dimensions.ts\nvar Dimensions = class {\n  constructor(wrapper, content, { autoResize = true, debounce: debounceValue = 250 } = {}) {\n    this.wrapper = wrapper;\n    this.content = content;\n    if (autoResize) {\n      this.debouncedResize = debounce(this.resize, debounceValue);\n      if (this.wrapper instanceof Window) {\n        window.addEventListener(\"resize\", this.debouncedResize, false);\n      } else {\n        this.wrapperResizeObserver = new ResizeObserver(this.debouncedResize);\n        this.wrapperResizeObserver.observe(this.wrapper);\n      }\n      this.contentResizeObserver = new ResizeObserver(this.debouncedResize);\n      this.contentResizeObserver.observe(this.content);\n    }\n    this.resize();\n  }\n  width = 0;\n  height = 0;\n  scrollHeight = 0;\n  scrollWidth = 0;\n  // These are instanciated in the constructor as they need information from the options\n  debouncedResize;\n  wrapperResizeObserver;\n  contentResizeObserver;\n  destroy() {\n    this.wrapperResizeObserver?.disconnect();\n    this.contentResizeObserver?.disconnect();\n    if (this.wrapper === window && this.debouncedResize) {\n      window.removeEventListener(\"resize\", this.debouncedResize, false);\n    }\n  }\n  resize = () => {\n    this.onWrapperResize();\n    this.onContentResize();\n  };\n  onWrapperResize = () => {\n    if (this.wrapper instanceof Window) {\n      this.width = window.innerWidth;\n      this.height = window.innerHeight;\n    } else {\n      this.width = this.wrapper.clientWidth;\n      this.height = this.wrapper.clientHeight;\n    }\n  };\n  onContentResize = () => {\n    if (this.wrapper instanceof Window) {\n      this.scrollHeight = this.content.scrollHeight;\n      this.scrollWidth = this.content.scrollWidth;\n    } else {\n      this.scrollHeight = this.wrapper.scrollHeight;\n      this.scrollWidth = this.wrapper.scrollWidth;\n    }\n  };\n  get limit() {\n    return {\n      x: this.scrollWidth - this.width,\n      y: this.scrollHeight - this.height\n    };\n  }\n};\n\n// packages/core/src/emitter.ts\nvar Emitter = class {\n  events = {};\n  /**\n   * Emit an event with the given data\n   * @param event Event name\n   * @param args Data to pass to the event handlers\n   */\n  emit(event, ...args) {\n    let callbacks = this.events[event] || [];\n    for (let i = 0, length = callbacks.length; i < length; i++) {\n      callbacks[i]?.(...args);\n    }\n  }\n  /**\n   * Add a callback to the event\n   * @param event Event name\n   * @param cb Callback function\n   * @returns Unsubscribe function\n   */\n  on(event, cb) {\n    this.events[event]?.push(cb) || (this.events[event] = [cb]);\n    return () => {\n      this.events[event] = this.events[event]?.filter((i) => cb !== i);\n    };\n  }\n  /**\n   * Remove a callback from the event\n   * @param event Event name\n   * @param callback Callback function\n   */\n  off(event, callback) {\n    this.events[event] = this.events[event]?.filter((i) => callback !== i);\n  }\n  /**\n   * Remove all event listeners and clean up\n   */\n  destroy() {\n    this.events = {};\n  }\n};\n\n// packages/core/src/virtual-scroll.ts\nvar LINE_HEIGHT = 100 / 6;\nvar listenerOptions = { passive: false };\nvar VirtualScroll = class {\n  constructor(element, options = { wheelMultiplier: 1, touchMultiplier: 1 }) {\n    this.element = element;\n    this.options = options;\n    window.addEventListener(\"resize\", this.onWindowResize, false);\n    this.onWindowResize();\n    this.element.addEventListener(\"wheel\", this.onWheel, listenerOptions);\n    this.element.addEventListener(\n      \"touchstart\",\n      this.onTouchStart,\n      listenerOptions\n    );\n    this.element.addEventListener(\n      \"touchmove\",\n      this.onTouchMove,\n      listenerOptions\n    );\n    this.element.addEventListener(\"touchend\", this.onTouchEnd, listenerOptions);\n  }\n  touchStart = {\n    x: 0,\n    y: 0\n  };\n  lastDelta = {\n    x: 0,\n    y: 0\n  };\n  window = {\n    width: 0,\n    height: 0\n  };\n  emitter = new Emitter();\n  /**\n   * Add an event listener for the given event and callback\n   *\n   * @param event Event name\n   * @param callback Callback function\n   */\n  on(event, callback) {\n    return this.emitter.on(event, callback);\n  }\n  /** Remove all event listeners and clean up */\n  destroy() {\n    this.emitter.destroy();\n    window.removeEventListener(\"resize\", this.onWindowResize, false);\n    this.element.removeEventListener(\"wheel\", this.onWheel, listenerOptions);\n    this.element.removeEventListener(\n      \"touchstart\",\n      this.onTouchStart,\n      listenerOptions\n    );\n    this.element.removeEventListener(\n      \"touchmove\",\n      this.onTouchMove,\n      listenerOptions\n    );\n    this.element.removeEventListener(\n      \"touchend\",\n      this.onTouchEnd,\n      listenerOptions\n    );\n  }\n  /**\n   * Event handler for 'touchstart' event\n   *\n   * @param event Touch event\n   */\n  onTouchStart = (event) => {\n    const { clientX, clientY } = event.targetTouches ? event.targetTouches[0] : event;\n    this.touchStart.x = clientX;\n    this.touchStart.y = clientY;\n    this.lastDelta = {\n      x: 0,\n      y: 0\n    };\n    this.emitter.emit(\"scroll\", {\n      deltaX: 0,\n      deltaY: 0,\n      event\n    });\n  };\n  /** Event handler for 'touchmove' event */\n  onTouchMove = (event) => {\n    const { clientX, clientY } = event.targetTouches ? event.targetTouches[0] : event;\n    const deltaX = -(clientX - this.touchStart.x) * this.options.touchMultiplier;\n    const deltaY = -(clientY - this.touchStart.y) * this.options.touchMultiplier;\n    this.touchStart.x = clientX;\n    this.touchStart.y = clientY;\n    this.lastDelta = {\n      x: deltaX,\n      y: deltaY\n    };\n    this.emitter.emit(\"scroll\", {\n      deltaX,\n      deltaY,\n      event\n    });\n  };\n  onTouchEnd = (event) => {\n    this.emitter.emit(\"scroll\", {\n      deltaX: this.lastDelta.x,\n      deltaY: this.lastDelta.y,\n      event\n    });\n  };\n  /** Event handler for 'wheel' event */\n  onWheel = (event) => {\n    let { deltaX, deltaY, deltaMode } = event;\n    const multiplierX = deltaMode === 1 ? LINE_HEIGHT : deltaMode === 2 ? this.window.width : 1;\n    const multiplierY = deltaMode === 1 ? LINE_HEIGHT : deltaMode === 2 ? this.window.height : 1;\n    deltaX *= multiplierX;\n    deltaY *= multiplierY;\n    deltaX *= this.options.wheelMultiplier;\n    deltaY *= this.options.wheelMultiplier;\n    this.emitter.emit(\"scroll\", { deltaX, deltaY, event });\n  };\n  onWindowResize = () => {\n    this.window = {\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n  };\n};\n\n// packages/core/src/lenis.ts\nvar defaultEasing = (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t));\nvar Lenis = class {\n  _isScrolling = false;\n  // true when scroll is animating\n  _isStopped = false;\n  // true if user should not be able to scroll - enable/disable programmatically\n  _isLocked = false;\n  // same as isStopped but enabled/disabled when scroll reaches target\n  _preventNextNativeScrollEvent = false;\n  _resetVelocityTimeout = null;\n  __rafID = null;\n  /**\n   * Whether or not the user is touching the screen\n   */\n  isTouching;\n  /**\n   * The time in ms since the lenis instance was created\n   */\n  time = 0;\n  /**\n   * User data that will be forwarded through the scroll event\n   *\n   * @example\n   * lenis.scrollTo(100, {\n   *   userData: {\n   *     foo: 'bar'\n   *   }\n   * })\n   */\n  userData = {};\n  /**\n   * The last velocity of the scroll\n   */\n  lastVelocity = 0;\n  /**\n   * The current velocity of the scroll\n   */\n  velocity = 0;\n  /**\n   * The direction of the scroll\n   */\n  direction = 0;\n  /**\n   * The options passed to the lenis instance\n   */\n  options;\n  /**\n   * The target scroll value\n   */\n  targetScroll;\n  /**\n   * The animated scroll value\n   */\n  animatedScroll;\n  // These are instanciated here as they don't need information from the options\n  animate = new Animate();\n  emitter = new Emitter();\n  // These are instanciated in the constructor as they need information from the options\n  dimensions;\n  // This is not private because it's used in the Snap class\n  virtualScroll;\n  constructor({\n    wrapper = window,\n    content = document.documentElement,\n    eventsTarget = wrapper,\n    smoothWheel = true,\n    syncTouch = false,\n    syncTouchLerp = 0.075,\n    touchInertiaExponent = 1.7,\n    duration,\n    // in seconds\n    easing,\n    lerp: lerp2 = 0.1,\n    infinite = false,\n    orientation = \"vertical\",\n    // vertical, horizontal\n    gestureOrientation = orientation === \"horizontal\" ? \"both\" : \"vertical\",\n    // vertical, horizontal, both\n    touchMultiplier = 1,\n    wheelMultiplier = 1,\n    autoResize = true,\n    prevent,\n    virtualScroll,\n    overscroll = true,\n    autoRaf = false,\n    anchors = false,\n    autoToggle = false,\n    // https://caniuse.com/?search=transition-behavior\n    allowNestedScroll = false,\n    __experimental__naiveDimensions = false\n  } = {}) {\n    window.lenisVersion = version;\n    if (!wrapper || wrapper === document.documentElement) {\n      wrapper = window;\n    }\n    if (typeof duration === \"number\" && typeof easing !== \"function\") {\n      easing = defaultEasing;\n    } else if (typeof easing === \"function\" && typeof duration !== \"number\") {\n      duration = 1;\n    }\n    this.options = {\n      wrapper,\n      content,\n      eventsTarget,\n      smoothWheel,\n      syncTouch,\n      syncTouchLerp,\n      touchInertiaExponent,\n      duration,\n      easing,\n      lerp: lerp2,\n      infinite,\n      gestureOrientation,\n      orientation,\n      touchMultiplier,\n      wheelMultiplier,\n      autoResize,\n      prevent,\n      virtualScroll,\n      overscroll,\n      autoRaf,\n      anchors,\n      autoToggle,\n      allowNestedScroll,\n      __experimental__naiveDimensions\n    };\n    this.dimensions = new Dimensions(wrapper, content, { autoResize });\n    this.updateClassName();\n    this.targetScroll = this.animatedScroll = this.actualScroll;\n    this.options.wrapper.addEventListener(\"scroll\", this.onNativeScroll, false);\n    this.options.wrapper.addEventListener(\"scrollend\", this.onScrollEnd, {\n      capture: true\n    });\n    if (this.options.anchors && this.options.wrapper === window) {\n      this.options.wrapper.addEventListener(\n        \"click\",\n        this.onClick,\n        false\n      );\n    }\n    this.options.wrapper.addEventListener(\n      \"pointerdown\",\n      this.onPointerDown,\n      false\n    );\n    this.virtualScroll = new VirtualScroll(eventsTarget, {\n      touchMultiplier,\n      wheelMultiplier\n    });\n    this.virtualScroll.on(\"scroll\", this.onVirtualScroll);\n    if (this.options.autoToggle) {\n      this.rootElement.addEventListener(\"transitionend\", this.onTransitionEnd, {\n        passive: true\n      });\n    }\n    if (this.options.autoRaf) {\n      this.__rafID = requestAnimationFrame(this.raf);\n    }\n  }\n  /**\n   * Destroy the lenis instance, remove all event listeners and clean up the class name\n   */\n  destroy() {\n    this.emitter.destroy();\n    this.options.wrapper.removeEventListener(\n      \"scroll\",\n      this.onNativeScroll,\n      false\n    );\n    this.options.wrapper.removeEventListener(\"scrollend\", this.onScrollEnd, {\n      capture: true\n    });\n    this.options.wrapper.removeEventListener(\n      \"pointerdown\",\n      this.onPointerDown,\n      false\n    );\n    if (this.options.anchors && this.options.wrapper === window) {\n      this.options.wrapper.removeEventListener(\n        \"click\",\n        this.onClick,\n        false\n      );\n    }\n    this.virtualScroll.destroy();\n    this.dimensions.destroy();\n    this.cleanUpClassName();\n    if (this.__rafID) {\n      cancelAnimationFrame(this.__rafID);\n    }\n  }\n  on(event, callback) {\n    return this.emitter.on(event, callback);\n  }\n  off(event, callback) {\n    return this.emitter.off(event, callback);\n  }\n  onScrollEnd = (e) => {\n    if (!(e instanceof CustomEvent)) {\n      if (this.isScrolling === \"smooth\" || this.isScrolling === false) {\n        e.stopPropagation();\n      }\n    }\n  };\n  dispatchScrollendEvent = () => {\n    this.options.wrapper.dispatchEvent(\n      new CustomEvent(\"scrollend\", {\n        bubbles: this.options.wrapper === window,\n        // cancelable: false,\n        detail: {\n          lenisScrollEnd: true\n        }\n      })\n    );\n  };\n  onTransitionEnd = (event) => {\n    if (event.propertyName.includes(\"overflow\")) {\n      const property = this.isHorizontal ? \"overflow-x\" : \"overflow-y\";\n      const overflow = getComputedStyle(this.rootElement)[property];\n      if ([\"hidden\", \"clip\"].includes(overflow)) {\n        this.internalStop();\n      } else {\n        this.internalStart();\n      }\n    }\n  };\n  setScroll(scroll) {\n    if (this.isHorizontal) {\n      this.options.wrapper.scrollTo({ left: scroll, behavior: \"instant\" });\n    } else {\n      this.options.wrapper.scrollTo({ top: scroll, behavior: \"instant\" });\n    }\n  }\n  onClick = (event) => {\n    const path = event.composedPath();\n    const anchor = path.find(\n      (node) => node instanceof HTMLAnchorElement && (node.getAttribute(\"href\")?.startsWith(\"#\") || node.getAttribute(\"href\")?.startsWith(\"/#\") || node.getAttribute(\"href\")?.startsWith(\"./#\"))\n    );\n    if (anchor) {\n      const id = anchor.getAttribute(\"href\");\n      if (id) {\n        const options = typeof this.options.anchors === \"object\" && this.options.anchors ? this.options.anchors : void 0;\n        let target = `#${id.split(\"#\")[1]}`;\n        if ([\"#\", \"/#\", \"./#\", \"#top\", \"/#top\", \"./#top\"].includes(id)) {\n          target = 0;\n        }\n        this.scrollTo(target, options);\n      }\n    }\n  };\n  onPointerDown = (event) => {\n    if (event.button === 1) {\n      this.reset();\n    }\n  };\n  onVirtualScroll = (data) => {\n    if (typeof this.options.virtualScroll === \"function\" && this.options.virtualScroll(data) === false)\n      return;\n    const { deltaX, deltaY, event } = data;\n    this.emitter.emit(\"virtual-scroll\", { deltaX, deltaY, event });\n    if (event.ctrlKey) return;\n    if (event.lenisStopPropagation) return;\n    const isTouch = event.type.includes(\"touch\");\n    const isWheel = event.type.includes(\"wheel\");\n    this.isTouching = event.type === \"touchstart\" || event.type === \"touchmove\";\n    const isClickOrTap = deltaX === 0 && deltaY === 0;\n    const isTapToStop = this.options.syncTouch && isTouch && event.type === \"touchstart\" && isClickOrTap && !this.isStopped && !this.isLocked;\n    if (isTapToStop) {\n      this.reset();\n      return;\n    }\n    const isUnknownGesture = this.options.gestureOrientation === \"vertical\" && deltaY === 0 || this.options.gestureOrientation === \"horizontal\" && deltaX === 0;\n    if (isClickOrTap || isUnknownGesture) {\n      return;\n    }\n    let composedPath = event.composedPath();\n    composedPath = composedPath.slice(0, composedPath.indexOf(this.rootElement));\n    const prevent = this.options.prevent;\n    if (!!composedPath.find(\n      (node) => node instanceof HTMLElement && (typeof prevent === \"function\" && prevent?.(node) || node.hasAttribute?.(\"data-lenis-prevent\") || isTouch && node.hasAttribute?.(\"data-lenis-prevent-touch\") || isWheel && node.hasAttribute?.(\"data-lenis-prevent-wheel\") || this.options.allowNestedScroll && this.checkNestedScroll(node, { deltaX, deltaY }))\n    ))\n      return;\n    if (this.isStopped || this.isLocked) {\n      if (event.cancelable) {\n        event.preventDefault();\n      }\n      return;\n    }\n    const isSmooth = this.options.syncTouch && isTouch || this.options.smoothWheel && isWheel;\n    if (!isSmooth) {\n      this.isScrolling = \"native\";\n      this.animate.stop();\n      event.lenisStopPropagation = true;\n      return;\n    }\n    let delta = deltaY;\n    if (this.options.gestureOrientation === \"both\") {\n      delta = Math.abs(deltaY) > Math.abs(deltaX) ? deltaY : deltaX;\n    } else if (this.options.gestureOrientation === \"horizontal\") {\n      delta = deltaX;\n    }\n    if (!this.options.overscroll || this.options.infinite || this.options.wrapper !== window && this.limit > 0 && (this.animatedScroll > 0 && this.animatedScroll < this.limit || this.animatedScroll === 0 && deltaY > 0 || this.animatedScroll === this.limit && deltaY < 0)) {\n      event.lenisStopPropagation = true;\n    }\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n    const isSyncTouch = isTouch && this.options.syncTouch;\n    const isTouchEnd = isTouch && event.type === \"touchend\";\n    const hasTouchInertia = isTouchEnd;\n    if (hasTouchInertia) {\n      delta = Math.sign(this.velocity) * Math.pow(Math.abs(this.velocity), this.options.touchInertiaExponent);\n    }\n    this.scrollTo(this.targetScroll + delta, {\n      programmatic: false,\n      ...isSyncTouch ? {\n        lerp: hasTouchInertia ? this.options.syncTouchLerp : 1\n        // immediate: !hasTouchInertia,\n      } : {\n        lerp: this.options.lerp,\n        duration: this.options.duration,\n        easing: this.options.easing\n      }\n    });\n  };\n  /**\n   * Force lenis to recalculate the dimensions\n   */\n  resize() {\n    this.dimensions.resize();\n    this.animatedScroll = this.targetScroll = this.actualScroll;\n    this.emit();\n  }\n  emit() {\n    this.emitter.emit(\"scroll\", this);\n  }\n  onNativeScroll = () => {\n    if (this._resetVelocityTimeout !== null) {\n      clearTimeout(this._resetVelocityTimeout);\n      this._resetVelocityTimeout = null;\n    }\n    if (this._preventNextNativeScrollEvent) {\n      this._preventNextNativeScrollEvent = false;\n      return;\n    }\n    if (this.isScrolling === false || this.isScrolling === \"native\") {\n      const lastScroll = this.animatedScroll;\n      this.animatedScroll = this.targetScroll = this.actualScroll;\n      this.lastVelocity = this.velocity;\n      this.velocity = this.animatedScroll - lastScroll;\n      this.direction = Math.sign(\n        this.animatedScroll - lastScroll\n      );\n      if (!this.isStopped) {\n        this.isScrolling = \"native\";\n      }\n      this.emit();\n      if (this.velocity !== 0) {\n        this._resetVelocityTimeout = setTimeout(() => {\n          this.lastVelocity = this.velocity;\n          this.velocity = 0;\n          this.isScrolling = false;\n          this.emit();\n        }, 400);\n      }\n    }\n  };\n  reset() {\n    this.isLocked = false;\n    this.isScrolling = false;\n    this.animatedScroll = this.targetScroll = this.actualScroll;\n    this.lastVelocity = this.velocity = 0;\n    this.animate.stop();\n  }\n  /**\n   * Start lenis scroll after it has been stopped\n   */\n  start() {\n    if (!this.isStopped) return;\n    if (this.options.autoToggle) {\n      this.rootElement.style.removeProperty(\"overflow\");\n      return;\n    }\n    this.internalStart();\n  }\n  internalStart() {\n    if (!this.isStopped) return;\n    this.reset();\n    this.isStopped = false;\n    this.emit();\n  }\n  /**\n   * Stop lenis scroll\n   */\n  stop() {\n    if (this.isStopped) return;\n    if (this.options.autoToggle) {\n      this.rootElement.style.setProperty(\"overflow\", \"clip\");\n      return;\n    }\n    this.internalStop();\n  }\n  internalStop() {\n    if (this.isStopped) return;\n    this.reset();\n    this.isStopped = true;\n    this.emit();\n  }\n  /**\n   * RequestAnimationFrame for lenis\n   *\n   * @param time The time in ms from an external clock like `requestAnimationFrame` or Tempus\n   */\n  raf = (time) => {\n    const deltaTime = time - (this.time || time);\n    this.time = time;\n    this.animate.advance(deltaTime * 1e-3);\n    if (this.options.autoRaf) {\n      this.__rafID = requestAnimationFrame(this.raf);\n    }\n  };\n  /**\n   * Scroll to a target value\n   *\n   * @param target The target value to scroll to\n   * @param options The options for the scroll\n   *\n   * @example\n   * lenis.scrollTo(100, {\n   *   offset: 100,\n   *   duration: 1,\n   *   easing: (t) => 1 - Math.cos((t * Math.PI) / 2),\n   *   lerp: 0.1,\n   *   onStart: () => {\n   *     console.log('onStart')\n   *   },\n   *   onComplete: () => {\n   *     console.log('onComplete')\n   *   },\n   * })\n   */\n  scrollTo(target, {\n    offset = 0,\n    immediate = false,\n    lock = false,\n    duration = this.options.duration,\n    easing = this.options.easing,\n    lerp: lerp2 = this.options.lerp,\n    onStart,\n    onComplete,\n    force = false,\n    // scroll even if stopped\n    programmatic = true,\n    // called from outside of the class\n    userData\n  } = {}) {\n    if ((this.isStopped || this.isLocked) && !force) return;\n    if (typeof target === \"string\" && [\"top\", \"left\", \"start\"].includes(target)) {\n      target = 0;\n    } else if (typeof target === \"string\" && [\"bottom\", \"right\", \"end\"].includes(target)) {\n      target = this.limit;\n    } else {\n      let node;\n      if (typeof target === \"string\") {\n        node = document.querySelector(target);\n      } else if (target instanceof HTMLElement && target?.nodeType) {\n        node = target;\n      }\n      if (node) {\n        if (this.options.wrapper !== window) {\n          const wrapperRect = this.rootElement.getBoundingClientRect();\n          offset -= this.isHorizontal ? wrapperRect.left : wrapperRect.top;\n        }\n        const rect = node.getBoundingClientRect();\n        target = (this.isHorizontal ? rect.left : rect.top) + this.animatedScroll;\n      }\n    }\n    if (typeof target !== \"number\") return;\n    target += offset;\n    target = Math.round(target);\n    if (this.options.infinite) {\n      if (programmatic) {\n        this.targetScroll = this.animatedScroll = this.scroll;\n        const distance = target - this.animatedScroll;\n        if (distance > this.limit / 2) {\n          target = target - this.limit;\n        } else if (distance < -this.limit / 2) {\n          target = target + this.limit;\n        }\n      }\n    } else {\n      target = clamp(0, target, this.limit);\n    }\n    if (target === this.targetScroll) {\n      onStart?.(this);\n      onComplete?.(this);\n      return;\n    }\n    this.userData = userData ?? {};\n    if (immediate) {\n      this.animatedScroll = this.targetScroll = target;\n      this.setScroll(this.scroll);\n      this.reset();\n      this.preventNextNativeScrollEvent();\n      this.emit();\n      onComplete?.(this);\n      this.userData = {};\n      requestAnimationFrame(() => {\n        this.dispatchScrollendEvent();\n      });\n      return;\n    }\n    if (!programmatic) {\n      this.targetScroll = target;\n    }\n    if (typeof duration === \"number\" && typeof easing !== \"function\") {\n      easing = defaultEasing;\n    } else if (typeof easing === \"function\" && typeof duration !== \"number\") {\n      duration = 1;\n    }\n    this.animate.fromTo(this.animatedScroll, target, {\n      duration,\n      easing,\n      lerp: lerp2,\n      onStart: () => {\n        if (lock) this.isLocked = true;\n        this.isScrolling = \"smooth\";\n        onStart?.(this);\n      },\n      onUpdate: (value, completed) => {\n        this.isScrolling = \"smooth\";\n        this.lastVelocity = this.velocity;\n        this.velocity = value - this.animatedScroll;\n        this.direction = Math.sign(this.velocity);\n        this.animatedScroll = value;\n        this.setScroll(this.scroll);\n        if (programmatic) {\n          this.targetScroll = value;\n        }\n        if (!completed) this.emit();\n        if (completed) {\n          this.reset();\n          this.emit();\n          onComplete?.(this);\n          this.userData = {};\n          requestAnimationFrame(() => {\n            this.dispatchScrollendEvent();\n          });\n          this.preventNextNativeScrollEvent();\n        }\n      }\n    });\n  }\n  preventNextNativeScrollEvent() {\n    this._preventNextNativeScrollEvent = true;\n    requestAnimationFrame(() => {\n      this._preventNextNativeScrollEvent = false;\n    });\n  }\n  checkNestedScroll(node, { deltaX, deltaY }) {\n    const time = Date.now();\n    const cache = node._lenis ??= {};\n    let hasOverflowX, hasOverflowY, isScrollableX, isScrollableY, scrollWidth, scrollHeight, clientWidth, clientHeight;\n    const gestureOrientation = this.options.gestureOrientation;\n    if (time - (cache.time ?? 0) > 2e3) {\n      cache.time = Date.now();\n      const computedStyle = window.getComputedStyle(node);\n      cache.computedStyle = computedStyle;\n      const overflowXString = computedStyle.overflowX;\n      const overflowYString = computedStyle.overflowY;\n      hasOverflowX = [\"auto\", \"overlay\", \"scroll\"].includes(overflowXString);\n      hasOverflowY = [\"auto\", \"overlay\", \"scroll\"].includes(overflowYString);\n      cache.hasOverflowX = hasOverflowX;\n      cache.hasOverflowY = hasOverflowY;\n      if (!hasOverflowX && !hasOverflowY) return false;\n      if (gestureOrientation === \"vertical\" && !hasOverflowY) return false;\n      if (gestureOrientation === \"horizontal\" && !hasOverflowX) return false;\n      scrollWidth = node.scrollWidth;\n      scrollHeight = node.scrollHeight;\n      clientWidth = node.clientWidth;\n      clientHeight = node.clientHeight;\n      isScrollableX = scrollWidth > clientWidth;\n      isScrollableY = scrollHeight > clientHeight;\n      cache.isScrollableX = isScrollableX;\n      cache.isScrollableY = isScrollableY;\n      cache.scrollWidth = scrollWidth;\n      cache.scrollHeight = scrollHeight;\n      cache.clientWidth = clientWidth;\n      cache.clientHeight = clientHeight;\n    } else {\n      isScrollableX = cache.isScrollableX;\n      isScrollableY = cache.isScrollableY;\n      hasOverflowX = cache.hasOverflowX;\n      hasOverflowY = cache.hasOverflowY;\n      scrollWidth = cache.scrollWidth;\n      scrollHeight = cache.scrollHeight;\n      clientWidth = cache.clientWidth;\n      clientHeight = cache.clientHeight;\n    }\n    if (!hasOverflowX && !hasOverflowY || !isScrollableX && !isScrollableY) {\n      return false;\n    }\n    if (gestureOrientation === \"vertical\" && (!hasOverflowY || !isScrollableY))\n      return false;\n    if (gestureOrientation === \"horizontal\" && (!hasOverflowX || !isScrollableX))\n      return false;\n    let orientation;\n    if (gestureOrientation === \"horizontal\") {\n      orientation = \"x\";\n    } else if (gestureOrientation === \"vertical\") {\n      orientation = \"y\";\n    } else {\n      const isScrollingX = deltaX !== 0;\n      const isScrollingY = deltaY !== 0;\n      if (isScrollingX && hasOverflowX && isScrollableX) {\n        orientation = \"x\";\n      }\n      if (isScrollingY && hasOverflowY && isScrollableY) {\n        orientation = \"y\";\n      }\n    }\n    if (!orientation) return false;\n    let scroll, maxScroll, delta, hasOverflow, isScrollable;\n    if (orientation === \"x\") {\n      scroll = node.scrollLeft;\n      maxScroll = scrollWidth - clientWidth;\n      delta = deltaX;\n      hasOverflow = hasOverflowX;\n      isScrollable = isScrollableX;\n    } else if (orientation === \"y\") {\n      scroll = node.scrollTop;\n      maxScroll = scrollHeight - clientHeight;\n      delta = deltaY;\n      hasOverflow = hasOverflowY;\n      isScrollable = isScrollableY;\n    } else {\n      return false;\n    }\n    const willScroll = delta > 0 ? scroll < maxScroll : scroll > 0;\n    return willScroll && hasOverflow && isScrollable;\n  }\n  /**\n   * The root element on which lenis is instanced\n   */\n  get rootElement() {\n    return this.options.wrapper === window ? document.documentElement : this.options.wrapper;\n  }\n  /**\n   * The limit which is the maximum scroll value\n   */\n  get limit() {\n    if (this.options.__experimental__naiveDimensions) {\n      if (this.isHorizontal) {\n        return this.rootElement.scrollWidth - this.rootElement.clientWidth;\n      } else {\n        return this.rootElement.scrollHeight - this.rootElement.clientHeight;\n      }\n    } else {\n      return this.dimensions.limit[this.isHorizontal ? \"x\" : \"y\"];\n    }\n  }\n  /**\n   * Whether or not the scroll is horizontal\n   */\n  get isHorizontal() {\n    return this.options.orientation === \"horizontal\";\n  }\n  /**\n   * The actual scroll value\n   */\n  get actualScroll() {\n    const wrapper = this.options.wrapper;\n    return this.isHorizontal ? wrapper.scrollX ?? wrapper.scrollLeft : wrapper.scrollY ?? wrapper.scrollTop;\n  }\n  /**\n   * The current scroll value\n   */\n  get scroll() {\n    return this.options.infinite ? modulo(this.animatedScroll, this.limit) : this.animatedScroll;\n  }\n  /**\n   * The progress of the scroll relative to the limit\n   */\n  get progress() {\n    return this.limit === 0 ? 1 : this.scroll / this.limit;\n  }\n  /**\n   * Current scroll state\n   */\n  get isScrolling() {\n    return this._isScrolling;\n  }\n  set isScrolling(value) {\n    if (this._isScrolling !== value) {\n      this._isScrolling = value;\n      this.updateClassName();\n    }\n  }\n  /**\n   * Check if lenis is stopped\n   */\n  get isStopped() {\n    return this._isStopped;\n  }\n  set isStopped(value) {\n    if (this._isStopped !== value) {\n      this._isStopped = value;\n      this.updateClassName();\n    }\n  }\n  /**\n   * Check if lenis is locked\n   */\n  get isLocked() {\n    return this._isLocked;\n  }\n  set isLocked(value) {\n    if (this._isLocked !== value) {\n      this._isLocked = value;\n      this.updateClassName();\n    }\n  }\n  /**\n   * Check if lenis is smooth scrolling\n   */\n  get isSmooth() {\n    return this.isScrolling === \"smooth\";\n  }\n  /**\n   * The class name applied to the wrapper element\n   */\n  get className() {\n    let className = \"lenis\";\n    if (this.options.autoToggle) className += \" lenis-autoToggle\";\n    if (this.isStopped) className += \" lenis-stopped\";\n    if (this.isLocked) className += \" lenis-locked\";\n    if (this.isScrolling) className += \" lenis-scrolling\";\n    if (this.isScrolling === \"smooth\") className += \" lenis-smooth\";\n    return className;\n  }\n  updateClassName() {\n    this.cleanUpClassName();\n    this.rootElement.className = `${this.rootElement.className} ${this.className}`.trim();\n  }\n  cleanUpClassName() {\n    this.rootElement.className = this.rootElement.className.replace(/lenis(-\\w+)?/g, \"\").trim();\n  }\n};\nexport {\n  Lenis as default\n};\n//# sourceMappingURL=lenis.mjs.map","import { useEffect } from 'react'\nimport Lenis from 'lenis'\n\nexport default function SmoothScrolling() {\n  useEffect(() => {\n    // Initialize Lenis smooth scroll\n    const lenis = new Lenis({\n      duration: 1.2,\n      easing: (t: number) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\n    })\n\n    // Raf loop\n    function raf(time: number) {\n      lenis.raf(time)\n      requestAnimationFrame(raf)\n    }\n\n    requestAnimationFrame(raf)\n\n    // Cleanup\n    return () => {\n      lenis.destroy()\n    }\n  }, [])\n\n  return null\n}\n","import { useRef, useMemo } from 'react'\nimport { Canvas, useFrame } from '@react-three/fiber'\nimport { Points, PointMaterial } from '@react-three/drei'\nimport * as THREE from 'three'\n\ninterface ParticleSystemProps {\n  count?: number\n}\n\nfunction ParticleSystem({ count = 2000 }: ParticleSystemProps) {\n  const ref = useRef<THREE.Points>(null!)\n  \n  // Generate random positions for particles\n  const positions = useMemo(() => {\n    const positions = new Float32Array(count * 3)\n    for (let i = 0; i < count; i++) {\n      const i3 = i * 3\n      positions[i3] = (Math.random() - 0.5) * 20 // x\n      positions[i3 + 1] = (Math.random() - 0.5) * 20 // y\n      positions[i3 + 2] = (Math.random() - 0.5) * 20 // z\n    }\n    return positions\n  }, [count])\n\n  // Generate random colors for particles\n  const colors = useMemo(() => {\n    const colors = new Float32Array(count * 3)\n    const colorArray = [\n      new THREE.Color('#6366f1'), // Primary\n      new THREE.Color('#8b5cf6'), // Secondary  \n      new THREE.Color('#06b6d4'), // Accent\n      new THREE.Color('#10b981'), // Success\n    ]\n    \n    for (let i = 0; i < count; i++) {\n      const color = colorArray[Math.floor(Math.random() * colorArray.length)]\n      const i3 = i * 3\n      colors[i3] = color.r\n      colors[i3 + 1] = color.g\n      colors[i3 + 2] = color.b\n    }\n    return colors\n  }, [count])\n\n  // Animate particles\n  useFrame((state) => {\n    if (ref.current) {\n      ref.current.rotation.x = Math.sin(state.clock.elapsedTime * 0.1) * 0.1\n      ref.current.rotation.y = Math.sin(state.clock.elapsedTime * 0.05) * 0.1\n      \n      // Move particles\n      const positions = ref.current.geometry.attributes.position.array as Float32Array\n      for (let i = 0; i < positions.length; i += 3) {\n        positions[i + 1] -= 0.01 // Move down\n        \n        // Reset particle when it goes too low\n        if (positions[i + 1] < -10) {\n          positions[i + 1] = 10\n          positions[i] = (Math.random() - 0.5) * 20\n          positions[i + 2] = (Math.random() - 0.5) * 20\n        }\n      }\n      ref.current.geometry.attributes.position.needsUpdate = true\n    }\n  })\n\n  return (\n    <Points ref={ref} positions={positions} colors={colors}>\n      <PointMaterial\n        size={0.015}\n        vertexColors\n        transparent\n        opacity={0.8}\n        sizeAttenuation\n        blending={THREE.AdditiveBlending}\n      />\n    </Points>\n  )\n}\n\nfunction FloatingGeometry() {\n  const meshRef = useRef<THREE.Group>(null!)\n\n  // Create floating geometric shapes\n  const shapes = useMemo(() => {\n    const shapes = []\n    const geometries = [\n      new THREE.BoxGeometry(0.5, 0.5, 0.5),\n      new THREE.SphereGeometry(0.3, 16, 16),\n      new THREE.ConeGeometry(0.3, 0.6, 8),\n      new THREE.TetrahedronGeometry(0.4),\n      new THREE.OctahedronGeometry(0.35)\n    ]\n\n    for (let i = 0; i < 12; i++) {\n      const geometry = geometries[Math.floor(Math.random() * geometries.length)]\n      const material = new THREE.MeshBasicMaterial({\n        color: new THREE.Color().setHSL(Math.random(), 0.7, 0.6),\n        wireframe: Math.random() > 0.5,\n        transparent: true,\n        opacity: 0.6\n      })\n\n      shapes.push({\n        geometry,\n        material,\n        position: [\n          (Math.random() - 0.5) * 15,\n          (Math.random() - 0.5) * 15,\n          (Math.random() - 0.5) * 10\n        ],\n        rotation: [\n          Math.random() * Math.PI * 2,\n          Math.random() * Math.PI * 2,\n          Math.random() * Math.PI * 2\n        ],\n        rotationSpeed: [\n          (Math.random() - 0.5) * 0.02,\n          (Math.random() - 0.5) * 0.02,\n          (Math.random() - 0.5) * 0.02\n        ]\n      })\n    }\n    return shapes\n  }, [])\n\n  useFrame((state) => {\n    if (meshRef.current) {\n      meshRef.current.children.forEach((child, index) => {\n        const shape = shapes[index]\n        child.rotation.x += shape.rotationSpeed[0]\n        child.rotation.y += shape.rotationSpeed[1]\n        child.rotation.z += shape.rotationSpeed[2]\n        \n        // Floating motion\n        child.position.y = shape.position[1] + Math.sin(state.clock.elapsedTime + index) * 0.5\n      })\n    }\n  })\n\n  return (\n    <group ref={meshRef}>\n      {shapes.map((shape, index) => (\n        <mesh\n          key={index}\n          geometry={shape.geometry}\n          material={shape.material}\n          position={shape.position as [number, number, number]}\n          rotation={shape.rotation as [number, number, number]}\n        />\n      ))}\n    </group>\n  )\n}\n\nexport default function ParticleBackground() {\n  return (\n    <div className=\"fixed inset-0 -z-10\">\n      <Canvas\n        camera={{ position: [0, 0, 10], fov: 75 }}\n        gl={{ \n          antialias: true, \n          alpha: true,\n          powerPreference: 'high-performance'\n        }}\n        dpr={Math.min(window.devicePixelRatio, 2)}\n      >\n        <ambientLight intensity={0.2} />\n        <pointLight position={[10, 10, 10]} intensity={1} />\n        <ParticleSystem count={1500} />\n        <FloatingGeometry />\n      </Canvas>\n    </div>\n  )\n}\n","import React, { Component, ReactNode } from 'react'\nimport { AlertTriangle, RefreshCw } from 'lucide-react'\nimport { motion } from 'framer-motion'\n\ninterface Props {\n  children: ReactNode\n  fallback?: ReactNode\n}\n\ninterface State {\n  hasError: boolean\n  error?: Error\n}\n\nexport default class ErrorBoundary extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError(error: Error): State {\n    return { hasError: true, error }\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    console.error('ErrorBoundary caught an error:', error, errorInfo)\n  }\n\n  handleReset = () => {\n    this.setState({ hasError: false, error: undefined })\n  }\n\n  render() {\n    if (this.state.hasError) {\n      if (this.props.fallback) {\n        return this.props.fallback\n      }\n\n      return (\n        <div className=\"min-h-screen bg-gradient-to-br from-primary-900 via-secondary-900 to-accent-900 flex items-center justify-center p-4\">\n          <motion.div\n            initial={{ opacity: 0, scale: 0.9 }}\n            animate={{ opacity: 1, scale: 1 }}\n            className=\"max-w-md w-full bg-white/10 backdrop-blur-lg rounded-xl p-8 text-center border border-white/20\"\n          >\n            <motion.div\n              initial={{ scale: 0 }}\n              animate={{ scale: 1 }}\n              transition={{ delay: 0.2, type: 'spring' }}\n              className=\"w-16 h-16 bg-red-500/20 rounded-full flex items-center justify-center mx-auto mb-6\"\n            >\n              <AlertTriangle className=\"w-8 h-8 text-red-400\" />\n            </motion.div>\n\n            <h1 className=\"text-2xl font-heading font-bold text-white mb-2\">\n              Oops! Something went wrong\n            </h1>\n            \n            <p className=\"text-white/70 mb-6\">\n              We encountered an unexpected error. Don't worry, it's not your fault.\n            </p>\n\n            {process.env.NODE_ENV === 'development' && this.state.error && (\n              <div className=\"mb-6 p-4 bg-red-500/10 rounded-lg border border-red-500/20\">\n                <p className=\"text-red-300 text-sm font-mono text-left\">\n                  {this.state.error.message}\n                </p>\n              </div>\n            )}\n\n            <div className=\"space-y-3\">\n              <motion.button\n                whileHover={{ scale: 1.02 }}\n                whileTap={{ scale: 0.98 }}\n                onClick={this.handleReset}\n                className=\"w-full btn btn-primary flex items-center justify-center space-x-2\"\n              >\n                <RefreshCw className=\"w-4 h-4\" />\n                <span>Try Again</span>\n              </motion.button>\n\n              <motion.button\n                whileHover={{ scale: 1.02 }}\n                whileTap={{ scale: 0.98 }}\n                onClick={() => window.location.reload()}\n                className=\"w-full btn btn-outline text-white border-white/30 hover:bg-white hover:text-primary-900\"\n              >\n                Reload Page\n              </motion.button>\n            </div>\n\n            <p className=\"text-white/50 text-sm mt-6\">\n              If this problem persists, please contact support.\n            </p>\n          </motion.div>\n        </div>\n      )\n    }\n\n    return this.props.children\n  }\n}\n","import { Suspense, lazy } from 'react'\nimport { Routes, Route } from 'react-router-dom'\nimport { Helmet } from 'react-helmet-async'\nimport Navbar from '@/components/layout/Navbar'\nimport LoadingSpinner from '@/components/ui/LoadingSpinner'\nimport SmoothScrolling from '@/components/common/SmoothScrolling'\nimport ParticleBackground from '@/components/3d/ParticleBackground'\nimport ErrorBoundary from '@/components/common/ErrorBoundary'\n\n// Lazy load pages for better performance\nconst HomePage = lazy(() => import('@/pages/HomePage'))\nconst ProjectPage = lazy(() => import('@/pages/ProjectPage'))\nconst NotFoundPage = lazy(() => import('@/pages/NotFoundPage'))\n\nfunction App() {\n  return (\n    <ErrorBoundary>\n      <div className=\"min-h-screen relative overflow-x-hidden\">\n        <Helmet>\n          <title>Abhik Ghosh | Cloud Architect | AI/ML Expert</title>\n          <meta \n            name=\"description\" \n            content=\"Cloud Architect at Capgemini specializing in DevSecOps, AI/ML, and cloud transformation. Expert in AWS, Azure, GCP, and modern development practices.\" \n          />\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n          <meta name=\"theme-color\" content=\"#6366f1\" />\n          <link rel=\"canonical\" href=\"https://abhik.cloud\" />\n          \n          {/* Open Graph */}\n          <meta property=\"og:title\" content=\"Abhik Ghosh - Cloud Architect\" />\n          <meta property=\"og:description\" content=\"Cloud Architect specializing in DevSecOps, AI/ML, and cloud transformation\" />\n          <meta property=\"og:image\" content=\"/og-image.jpg\" />\n          <meta property=\"og:url\" content=\"https://abhik.cloud\" />\n          <meta property=\"og:type\" content=\"website\" />\n          \n          {/* Twitter */}\n          <meta name=\"twitter:card\" content=\"summary_large_image\" />\n          <meta name=\"twitter:title\" content=\"Abhik Ghosh - Cloud Architect\" />\n          <meta name=\"twitter:description\" content=\"Cloud Architect specializing in DevSecOps, AI/ML, and cloud transformation\" />\n          <meta name=\"twitter:image\" content=\"/og-image.jpg\" />\n          \n          {/* Fonts */}\n          <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n          <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossOrigin=\"anonymous\" />\n          <link \n            href=\"https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&family=Space+Grotesk:wght@300;400;500;600;700&family=JetBrains+Mono:wght@400;500;600&display=swap\" \n            rel=\"stylesheet\" \n          />\n        </Helmet>\n\n        {/* Background Effects */}\n        <ParticleBackground />\n        \n        {/* Smooth Scrolling */}\n        <SmoothScrolling />\n        \n        {/* Navigation */}\n        <Navbar />\n        \n        {/* Main Content */}\n        <main>\n          <Suspense fallback={<LoadingSpinner />}>\n            <Routes>\n              <Route path=\"/\" element={<HomePage />} />\n              <Route path=\"/project/:id\" element={<ProjectPage />} />\n              <Route path=\"*\" element={<NotFoundPage />} />\n            </Routes>\n          </Suspense>\n        </main>\n      </div>\n    </ErrorBoundary>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport { BrowserRouter } from 'react-router-dom'\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query'\nimport { HelmetProvider } from 'react-helmet-async'\nimport App from './App.tsx'\nimport './index.css'\n\n// PWA registration\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', () => {\n    import('./utils/pwa').then(({ registerSW }) => {\n      registerSW()\n    })\n  })\n}\n\n// Create a client\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      staleTime: 1000 * 60 * 5, // 5 minutes\n      gcTime: 1000 * 60 * 30, // 30 minutes\n    },\n  },\n})\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n    <HelmetProvider>\n      <QueryClientProvider client={queryClient}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </QueryClientProvider>\n    </HelmetProvider>\n  </React.StrictMode>,\n)\n"],"file":"assets/index-BERNGHI0.js"}